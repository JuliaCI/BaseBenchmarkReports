cset: moving following pidspec: 3568
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328269984 seconds)
loading group "string"... done (took 0.589335407 seconds)
loading group "linalg"... done (took 7.370123964 seconds)
loading group "parallel"... done (took 0.174038615 seconds)
loading group "find"... done (took 1.18847918 seconds)
loading group "tuple"... done (took 1.801584543 seconds)
loading group "dates"... done (took 1.243532589 seconds)
loading group "micro"... done (took 0.232093191 seconds)
loading group "io"... done (took 1.04357542 seconds)
loading group "scalar"... done (took 41.460979074 seconds)
loading group "sparse"... done (took 13.64461005 seconds)
loading group "broadcast"... done (took 1.025921294 seconds)
loading group "union"... done (took 14.805175778 seconds)
loading group "simd"... done (took 5.156671089 seconds)
loading group "random"... done (took 10.282726329 seconds)
loading group "problem"... done (took 2.030084507 seconds)
loading group "array"... done (took 22.877432401 seconds)
loading group "misc"... done (took 2.107600288 seconds)
loading group "sort"... done (took 3.450950745 seconds)
loading group "collection"... done (took 19.398088043 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.563787558 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145172516 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119575846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144213064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191534966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133990238 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145977307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086126598 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011018835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167562076 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141814746 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518289498 seconds)
done (took 5.20930401 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20042834 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088870956 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099092936 seconds)
  done (took 0.974367611 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066278288 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129078178 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081925727 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067797838 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06698804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084623914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068677906 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067759002 seconds)
  done (took 1.360000978 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075485133 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069369003 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086377789 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069529681 seconds)
  done (took 1.094478348 seconds)
done (took 4.489518762 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.942931302 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.260807472 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193211973 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468592955 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153733868 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191248448 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678747675 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332243718 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216686767 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103466653 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106626919 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395865667 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107853902 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671877886 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079285107 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.11308537 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.164640944 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434338323 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083976201 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083313325 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105286865 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146217805 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10671897 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082385415 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175267806 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070260676 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154766722 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096859059 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069272013 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251033424 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192537977 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69192516 seconds)
  done (took 10.758461022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100002825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122317607 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069905318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142521631 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125249117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073618851 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07489294 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08849174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095740472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.165284401 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.121757255 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128700471 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069638261 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073047182 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.107560933 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235577137 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096054821 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105658362 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075438227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077906103 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129196519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102869364 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082703683 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098018957 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153539081 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196795985 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10185954 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115007348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070701693 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100138553 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13220009 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13365304 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071446426 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087026567 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16198706 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098431139 seconds)
  done (took 4.788177162 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.13044343 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177235732 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092988393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157668679 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087857403 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1317507 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066951477 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102778284 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25641691 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.108154742 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.500082872 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130891407 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089303893 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068641971 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088793844 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068565491 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.617583244 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1461845 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1048107 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103749998 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074959189 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089056983 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363799069 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069415596 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06611673 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086557774 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060546395 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148860421 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068585249 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.268611178 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110016759 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069148297 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123062403 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178963422 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100068161 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125131379 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083756289 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068223916 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173895848 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073501904 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125511152 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086549917 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089334365 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123751041 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123967635 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069367484 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08402939 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184390055 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067077191 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101385493 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94566657 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169209514 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081122047 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067997555 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303593571 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103650481 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068169809 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064781037 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.264193179 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164926956 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068982925 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085350393 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067489522 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085950877 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374729909 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068911205 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.659919633 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072991231 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079194597 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087268079 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068443019 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092271162 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074130459 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104702271 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06763048 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064665154 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087306419 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067486808 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084460637 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066497677 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068682562 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10544639 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209206603 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088405295 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069501461 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064368638 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084098206 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087849508 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114723315 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071218198 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084502119 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101038726 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086747861 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068244161 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122682964 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067977204 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106113828 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086679972 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115088417 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086329718 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122633605 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069929387 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116359363 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073251514 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116888519 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10358311 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069756192 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156943203 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065129169 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083847308 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06818827 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083531158 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069085291 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06898258 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100530775 seconds)
  done (took 21.446180278 seconds)
done (took 38.913151497 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313045415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097438058 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097035415 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095487954 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078354527 seconds)
  done (took 1.547336406 seconds)
done (took 2.379515948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15168732 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103370251 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082774974 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098453105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083201732 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103207272 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11915931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08275585 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121032999 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065123089 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11613519 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065001986 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081954994 seconds)
  done (took 2.137756706 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083063785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085570279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088829786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082436097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081598386 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08344448 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079918445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107804816 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081443752 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090279133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066535607 seconds)
  done (took 1.757884405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083034212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084794273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089520214 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082475874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081977476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081618026 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080438135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105850068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081367349 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092390527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065056511 seconds)
  done (took 1.759079998 seconds)
done (took 6.477118457 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080367866 seconds)
  done (took 0.903571868 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.759794464 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.95924127 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085614347 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137953085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225410049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160380686 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.46256839 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113534825 seconds)
  done (took 10.937760668 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100357762 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090849947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086135781 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093134411 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073598904 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092220311 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071299576 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069247189 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088206252 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072521629 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089935351 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069916668 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09011847 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073525324 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086759938 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072574974 seconds)
  done (took 2.213774595 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10524543 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106163452 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094859821 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077719816 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092682891 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073894851 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096474955 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076590886 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089962148 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074283259 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094845685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075844534 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091849543 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067548847 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094189866 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07877451 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09046272 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077370923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.096821542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07945435 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096732886 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068051193 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094111619 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078209765 seconds)
  done (took 3.021563225 seconds)
done (took 17.903179186 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136442485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078852891 seconds)
  done (took 1.04452803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084846672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101815961 seconds)
  done (took 1.022195202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084633694 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083417701 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091214097 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097995416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084285196 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068159183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106107637 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068455782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084229846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068739947 seconds)
  done (took 1.672253011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071132106 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096345846 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073505199 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100135002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075869173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0839253 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075326695 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087156377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081669339 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082436679 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074807859 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102109856 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072264413 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103986963 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094091615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071204699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090093037 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070941649 seconds)
  done (took 2.344498741 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068689513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068259374 seconds)
  done (took 0.97437708 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069595799 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06416475 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085042581 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067210484 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083585448 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064383857 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082100232 seconds)
  done (took 1.353940045 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418191403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110271131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269265034 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072886659 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107520469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300835494 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067460973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071080762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091529102 seconds)
  done (took 2.387200406 seconds)
done (took 11.633085456 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081410816 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086684752 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114931408 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.445996876 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110140107 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066762805 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147975345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221920714 seconds)
done (took 2.112925155 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127592724 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.634981317 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.422640013 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218673011 seconds)
  done (took 2.121267379 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391455962 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092468816 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077872884 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06859381 seconds)
  done (took 1.477661988 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068453259 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071212013 seconds)
  done (took 0.986827999 seconds)
done (took 5.556766023 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068883693 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118166216 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067481013 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064974443 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087654553 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065204937 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064562908 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084635365 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067455728 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085398356 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068351368 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067176801 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084353795 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067888793 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064349295 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082472679 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067593556 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064712901 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08288321 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065181129 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084472645 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065770493 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064791848 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082318685 seconds)
  done (took 2.670822164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08822512 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08496015 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074055727 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090167133 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.0731457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091995088 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074526511 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066861226 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090490358 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069213583 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089971663 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071556923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086572556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073409402 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087009061 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073096632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090729936 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06863944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086129151 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073838465 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07391273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086319088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072016095 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092496091 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071645592 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089721853 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070134176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085733093 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073619426 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088376514 seconds)
  done (took 3.255297138 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073443522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064226663 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083758924 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072583399 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065086214 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085150814 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065189764 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083740776 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067566327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064580179 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084912598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065677823 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064869465 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084500492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066239847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08544071 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08322315 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064263039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083153176 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066733632 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085989117 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066209133 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064558382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083347723 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065418106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064678152 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083755164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065449631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082196306 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067193175 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06799617 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086335946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06529507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070845247 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086564287 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06498051 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085692057 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065978853 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066032464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081954232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065967141 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064697391 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082276733 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072115599 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064183654 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086412126 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070289563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084340985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066897087 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067076911 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083012891 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065865695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083815281 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067533746 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067964325 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081968986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066184797 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064128549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084308319 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064700063 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081706058 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065345927 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066785441 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083398187 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080926717 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089044989 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066129225 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067177433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084188466 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068765025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066378695 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098021076 seconds)
  done (took 6.167249152 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121385906 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093282661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085340095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067338478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080964631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065989242 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069178065 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083330498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066913583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088896192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066104439 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083674092 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068472312 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080057116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083893827 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06794356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088310105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063708784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065359901 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086583289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065375036 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086399986 seconds)
  done (took 2.581154515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192565732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089786185 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112063615 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093494681 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086590919 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075342912 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088371716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072663279 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071132798 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087719667 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069586379 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088903997 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069137253 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087929892 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069670249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087625856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07108783 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088168756 seconds)
  done (took 2.45491044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08071478 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066603153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109409451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067219276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087599474 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069841459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09221741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076498588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087861487 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0680811 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094791038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.177970378 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087784355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068408278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086374889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069454564 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069886318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085573129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077328854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091154934 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072708433 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093915679 seconds)
  done (took 2.735743862 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083239812 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068533579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10434383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08799293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065040748 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066052519 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092989589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068571686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092704605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070281092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085027226 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069591738 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072550596 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086223595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072702181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086284408 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069772685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085372751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070728164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064045036 seconds)
  done (took 2.419819748 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089924338 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087431256 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069637208 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095760107 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069969392 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087196071 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078883734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087162119 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070094406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111655202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069371019 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086798775 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078516437 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093320015 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069256602 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095682063 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076732376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096946914 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086058509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070002329 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111018964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069651598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095003101 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069913853 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086608612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069907401 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086358739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075412283 seconds)
  done (took 3.194658401 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069780579 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067751862 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083445563 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066255529 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064942562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084088942 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066250799 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065081143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087190845 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065676196 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085524896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068876962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067831222 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085994962 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068679074 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067417996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085718073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065543685 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064577602 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083504847 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067642024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085059626 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069026073 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064962532 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083234688 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067993244 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064480138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083688208 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068274032 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064709359 seconds)
  done (took 3.046081705 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078739838 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093043787 seconds)
  done (took 1.034458276 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065725337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081656519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083987937 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071412569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090831167 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068723544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094053191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072363007 seconds)
  done (took 1.491870237 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085288197 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07928439 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088244508 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097594866 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080458675 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085511168 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160775046 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088030154 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074602738 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08456338 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083365538 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0847503 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074996219 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068614036 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092459936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074305339 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082764444 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075952737 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071188941 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086119941 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069304148 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097524649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070601805 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082482963 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069903143 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076510333 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099663145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068519445 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090168591 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07516979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092056393 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063470195 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06779469 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088198422 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065477746 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096627355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083625715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089541815 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076951853 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086930184 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078880167 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082387822 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072891646 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091429987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079701351 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069348211 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087704484 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063480886 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083380019 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071896307 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062794616 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086685589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063976528 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092848367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072464358 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095068837 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068092666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06942556 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089182507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072236858 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091950378 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071028669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07024693 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085711227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07546237 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090341561 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07826998 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080620327 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06360131 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066700674 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09701821 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092077558 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093281052 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069137008 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088032558 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067027642 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072382792 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088902706 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073729435 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092998498 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069066603 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092299132 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075631569 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087064613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071973316 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093867059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069320733 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071913464 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086445388 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08646312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087324932 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068092706 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066514459 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100744578 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07222304 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088926173 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067902222 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095074132 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06574636 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069878918 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090118192 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070128413 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.101903351 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075839636 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095521069 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079545405 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.096808734 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070620261 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091425259 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067952625 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070162116 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087959817 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077110898 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08225985 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073827217 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070017482 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089850167 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079287478 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087045644 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070529538 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095475304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076397213 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068255669 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085793579 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072924869 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088286242 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074078076 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095392824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069510491 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065598642 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08381458 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073902389 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069039952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093450969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074239911 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09149033 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065084058 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086122417 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075265084 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097964245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070551169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070250068 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095418496 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070180785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088005606 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076360888 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089803552 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069770217 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075354404 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089823127 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065152486 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0918828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073451863 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067764853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093204671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072895812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092077137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071334236 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086909176 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076687858 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070593472 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088359663 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069509641 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086758809 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081062864 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089456498 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065090652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065721049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094140105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066690134 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085711875 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068439787 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069787564 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087382225 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066230402 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085757164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070718877 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097656868 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073111394 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068640088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093008254 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079559218 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086383411 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071391584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086430231 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069365387 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068144963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096567101 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072951534 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091729191 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070803458 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083102026 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074723708 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093803692 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068341019 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065731807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085908882 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071660799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091890827 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072177933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086260847 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067361891 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0683732 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090276937 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070692002 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085608836 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068646289 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072150122 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086350159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074690807 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089382087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079729621 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091023697 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065006689 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091745579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068990748 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076087312 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083653977 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067375622 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086400247 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071432004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067711406 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092413677 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064330344 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095473948 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079427761 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070086036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088945025 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070451566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094915166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07114298 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090555033 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072842288 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074417406 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098257659 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067412525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089853638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07959737 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086401946 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063665495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072937843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085502867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068302861 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085362461 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066798563 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071047351 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096118047 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074802725 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081526952 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070987208 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085055699 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068513353 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063335931 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091217903 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070943357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086749763 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075469595 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068381437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087803613 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071730606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086771636 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069199117 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08747821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072150784 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067841024 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089352123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067407725 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089369378 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068253482 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065911443 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089597654 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068796738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087142996 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074193344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067220335 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087733759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070887256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087958843 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069494387 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086565551 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069424851 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071828708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088351976 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06941624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088290517 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064564104 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075318542 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087406053 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076518797 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086525823 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066116664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07304522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089552985 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072993959 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08850419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069113795 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087846047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068701009 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070702437 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094394646 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0659512 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098464573 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077408275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087442585 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07196913 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068338719 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088951553 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067143889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088024205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070102948 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067552856 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08720428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073519394 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090443055 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068927151 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087647157 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070308759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068094211 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088155096 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063389369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084827163 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069006709 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067887852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098145446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068778001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08657881 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068310059 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068522679 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087303432 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06505349 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095081996 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077398684 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088195978 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075720862 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085602343 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069907193 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09684585 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065828496 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06617482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085215976 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066977274 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093766312 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070633268 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077581309 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087387112 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068109211 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083729735 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070259014 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.0671029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08221654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066975987 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089714681 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068571265 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066800015 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087878961 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071850188 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087560306 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079502509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085983868 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070227157 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068186558 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085282591 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06832086 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066637023 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090896644 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068864837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084909563 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06611482 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067869797 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088563288 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069114812 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086937734 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070791979 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07463903 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087704102 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070779612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091123447 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063897385 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090055706 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069108649 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067874289 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086811723 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071474334 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091054495 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070278865 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09560045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068946997 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068835804 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087798638 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066515115 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08569568 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068938656 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06724672 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08712486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06959649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095437385 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067377376 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070609606 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087202785 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06818845 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09405986 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069653314 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089258681 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076337557 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067732847 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089862442 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075650398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091866801 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071864204 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088053015 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069951768 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091886302 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068254635 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074175944 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088228845 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069966577 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088104315 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066679973 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067954063 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087410581 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067521611 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09384954 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070039602 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067547491 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08767456 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066387489 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088346655 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073379847 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093548094 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071494858 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071300723 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083351746 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065999144 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087277591 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067644839 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070255247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091052714 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074854821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088800583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069584403 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067148773 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097541105 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073564174 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090954628 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067181052 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090093435 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070408615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069525478 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088910954 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068414627 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088484945 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073243465 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068652839 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087166328 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075646811 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091166594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070337354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087365892 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070437102 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067619242 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082851879 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069515333 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088630406 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075462069 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070419869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087997747 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079114221 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085470565 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069391431 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09053746 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069110151 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072320568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082817299 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069520243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088523552 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070313744 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063567767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087214384 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066157049 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089097752 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068940136 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063187484 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098871383 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077735579 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091493047 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067495859 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085124712 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065036608 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063747902 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087676154 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070095292 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087988366 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079726441 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066340092 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086979845 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063534811 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087004849 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072266032 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070409477 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085003568 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063923211 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086218965 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072355503 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073495539 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086779145 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067838794 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090765913 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071870146 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065818088 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092548076 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064484268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091944193 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081581969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088625095 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069610151 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093445217 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078187288 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068612155 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084254324 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069330618 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090970339 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069420089 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087643805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07160438 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102359054 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072445454 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067159867 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087361139 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071534685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085927703 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077925318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068564768 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088795153 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072685237 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088780913 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077468474 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090440781 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076984452 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090841606 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072298398 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067345169 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088817067 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066819781 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085549965 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070626805 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068634808 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092996477 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076012424 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087717433 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080189177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097747503 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069769114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08399646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068387618 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068060888 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083431613 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070436281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08483358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067691658 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066287584 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087021349 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069591481 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092426498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070845582 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069302841 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088140204 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063897855 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088548526 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073277246 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069379394 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085687057 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069820007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08784792 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074324901 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071368299 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085609158 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070078264 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089026952 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07063168 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063895413 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094424263 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067896533 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089721784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068657299 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068264813 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089405353 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071954681 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093022829 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070196762 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089535676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07752848 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069972706 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085902927 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06547962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09348311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067084059 seconds)
  done (took 47.793945251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109192549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08519433 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064078389 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082734454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077435642 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084709277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064813467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064457599 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085117805 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066938417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083384461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064666622 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092137622 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088417641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095989159 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08681047 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064852627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064511118 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084015114 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06481741 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092508454 seconds)
  done (took 2.572218997 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08883066 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103565525 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078542275 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101899252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093434162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080586041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098489476 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079193556 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102180985 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094480902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083218103 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099337467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075043753 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095556577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075296434 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097596232 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101714931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07430347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.10001093 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079131824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097104815 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097205955 seconds)
  done (took 2.897335411 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069748923 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067503015 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089452017 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063755887 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066471727 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083510776 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071722964 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085510647 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072408902 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066694364 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087312775 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066977132 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096596826 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066804801 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066751409 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085925684 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135060993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071233439 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087149683 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069521395 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062800757 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.09015344 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063366244 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083401637 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068247271 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071391489 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089080833 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066040397 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08697577 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068007317 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067570504 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085758367 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069624654 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06731673 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087093518 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067197351 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086923075 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0691028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06296099 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085967685 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069067979 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083218449 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069412146 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068777098 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085612654 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066203748 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068624455 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087973578 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063397748 seconds)
  done (took 4.63428745 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087237434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.14383065 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09066629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125167502 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083027038 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096290084 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071675054 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125863062 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085691891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067722688 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105008871 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083172048 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089650118 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07299288 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094094026 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067302388 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088864857 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067456229 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09112863 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068044216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091739507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074950681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102328361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100291632 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07354679 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06617102 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087826772 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071635556 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100722231 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092095605 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073771983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092373517 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083249697 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093896189 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067303389 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090657666 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084016214 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088265528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070393254 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086040277 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071072023 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092045669 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075397364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104323498 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068131412 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094070136 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068713882 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085007207 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081253294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090167224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076095995 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103459203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090697974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069569374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071686898 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104152343 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087355812 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067816568 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089036366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082131652 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084159045 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072949215 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102086663 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069842551 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094436853 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082437241 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093729184 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071530857 seconds)
  done (took 6.876659862 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078115123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093490013 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082216855 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103765175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093715447 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0758379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093666912 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074905768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094303475 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079185765 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094846592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116954705 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070038018 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096352997 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074068387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096244857 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074538507 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095549576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093341983 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075078934 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094390445 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082874386 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095157694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102867024 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106104958 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090142319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073364878 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095139746 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102232132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075129918 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106897582 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074621408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095159187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103686917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087278305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09511061 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067351694 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094653971 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074250102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094973298 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069323444 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10321955 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094100744 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070345101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094348375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074562456 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10323034 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105892796 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077239813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099638379 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074642296 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103663808 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093874305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074636418 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102143539 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128172848 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083049536 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103514891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09390495 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082732727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102783494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110525835 seconds)
  done (took 6.528789069 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090132473 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09766539 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099267714 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064853304 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065936822 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093504137 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066916126 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085799359 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07771389 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096406443 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079721823 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092685529 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074241228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100519864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091617109 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075941325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092000711 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071202119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098284319 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071568162 seconds)
  done (took 2.599995273 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078584643 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105639566 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07019918 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093826714 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073101083 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074371415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092406832 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071310083 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089340075 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071712447 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098437969 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078900911 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088873419 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075161444 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098409979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073643891 seconds)
  done (took 2.252277558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081627012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099475179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083295986 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089034261 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066052353 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085261857 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068860158 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063456138 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086415011 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082128464 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090125425 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070038537 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088654617 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066526227 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06475148 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092726924 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063642382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086826925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068472807 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102982501 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079341903 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086786726 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069246951 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089837781 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069180003 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094608592 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069042106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066645762 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088305715 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068612944 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089174706 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075569086 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085718955 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066981076 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085526537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066705327 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067166933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089337171 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07071526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08783034 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066956648 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087329334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069850679 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0686844 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085454913 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068597092 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0836364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075344863 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06597647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089414342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067381592 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090471648 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069286093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099434756 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072233804 seconds)
  done (took 5.247722807 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082159476 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07016604 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085281399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066624071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090690893 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070256885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070575836 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091452391 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069369504 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087172863 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070441934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09069959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071044047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070830714 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090887757 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071773143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084762484 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070507133 seconds)
  done (took 2.327738789 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0749651 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068114172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096549975 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068565977 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088751082 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072440212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064341719 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088507674 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067024894 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088294644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069628487 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069802034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08759624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070501781 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088270043 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069416887 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069607949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087952644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067970445 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084509853 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071600892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065912282 seconds)
  done (took 2.604314982 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074597864 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094799016 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167160531 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110642278 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083596128 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102143263 seconds)
  done (took 1.558617005 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093638159 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101722296 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069273824 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111981496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078160516 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090382036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070473569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090319734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07981401 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104513679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069735804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100005816 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099205026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081507154 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096951986 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076453856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090844765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069618102 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089228337 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109057837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071364885 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098667679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069814786 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090538851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069988748 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09891211 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098348811 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084454628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090322379 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078385635 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096258465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069181639 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100546932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104120368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071930514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098934017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07041324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108987077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095172035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079544883 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092320946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076310177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099991808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074455211 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099519251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090169555 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076559277 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090317705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072180017 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116357493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095606513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078016073 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096702507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079355376 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099456656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115642223 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103569972 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078842699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09639273 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103352077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079697557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097054983 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076630072 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104909778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095977498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077887192 seconds)
  done (took 6.811702566 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084402365 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108401507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07112991 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105185266 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099202543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07114536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090003937 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070921858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090068498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070469875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132296711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069546097 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099330338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09904991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070210699 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090230083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070476902 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099117295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069435546 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115396529 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090197701 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078376024 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099401489 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098462996 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083667574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09740444 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06982358 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091521167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069214116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091722646 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09448387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071306856 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098880255 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069396838 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098353892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069819964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090216186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074907381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09115541 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09447362 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08158956 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109304943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069431982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091252413 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104908374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070955978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090806694 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070160164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090286148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07084625 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104408088 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083891599 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105083381 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099784715 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070915153 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091158849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070339947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091917727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070127018 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097724775 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09905503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071688878 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115518031 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06997706 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091993304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099134657 seconds)
  done (took 6.712488246 seconds)
done (took 133.3142368 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214210567 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188915063 seconds)
  done (took 1.326244377 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07117941 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118374349 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081936975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130602431 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08969086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103746761 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12133468 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082144457 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068262162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090098213 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069301417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090780796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134039573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068413605 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090318875 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070765445 seconds)
  done (took 2.411433308 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106148121 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201741244 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1133665 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067348707 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102689982 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080522705 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088540361 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079580645 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095149197 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068734107 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099981594 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079061008 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066459628 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099893616 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093707633 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081084285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067373829 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102008391 seconds)
  done (took 2.625190004 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108706312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148868637 seconds)
  done (took 1.189429579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205169412 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126727858 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211461087 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.438352919 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.216480847 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.298117333 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17896003 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179944732 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157418943 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172873146 seconds)
  done (took 3.11333308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101341925 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175225466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321843747 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141278562 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090180317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119074233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142967888 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11182656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08503774 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105430271 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103186692 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079749795 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120569999 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07689316 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098144324 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079427195 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125387177 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075006189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099604449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076919134 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121375448 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067162535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098454036 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074890247 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10191467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079847809 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089339294 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067792967 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09757115 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077338851 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101806559 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117294134 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081848638 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134490308 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10646653 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136434128 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098960137 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075616854 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076061763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095349786 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078394961 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100893831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10624928 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080347433 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066914611 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100156628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067365889 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089107696 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082417766 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10128251 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08128036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102603423 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134813992 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101035583 seconds)
  done (took 6.453047415 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.7652048 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141165974 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077055983 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.830109322 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117297032 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085010539 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.748861824 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095324158 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23501028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757327274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115524159 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078535473 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208273827 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218834903 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934186714 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291800966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.645059731 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106635816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110512465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1346414 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163568465 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158825236 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151149113 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407713782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099054588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073237888 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139627859 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100677975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142344928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107149223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076504975 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157297166 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250757673 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.162691071 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076141376 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094241178 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07161752 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150446738 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246821595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193655668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160132255 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06981078 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071497565 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164662586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134059333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069283173 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143079141 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154857287 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172240873 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076036536 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099811483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145567614 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142712533 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145985287 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103934928 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300509587 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.266974482 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093560741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123496549 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086291897 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244169334 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103684795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182414851 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140482961 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191558137 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071338564 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75935034 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151833015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071237169 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098770415 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122227963 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075942984 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163759236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125179504 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372224408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166942053 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075462727 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070501279 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216112595 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084220254 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093120071 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143161012 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075742773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124513284 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1694997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148973579 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150410517 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215718986 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167848801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14384382 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076194284 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126879672 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098614524 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193133689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196763168 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144098603 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194215198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143119782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144753566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171870818 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080450573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152637032 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123683256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105698525 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142682707 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195475894 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125348836 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083657954 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097836106 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143144864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128917534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08704632 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.164265564 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152549092 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43111744 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149518632 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09062183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087963723 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163306294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14480545 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077627072 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236716425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125707169 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151079122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124936874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068751333 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124153967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143914495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103436888 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124528584 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14150696 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099589883 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218600425 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17213238 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102682589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197064711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164650938 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099223639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153334513 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124278761 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148962291 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099823837 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144295657 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076529914 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773576159 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146584352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124449089 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096477254 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146437618 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093679989 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08429084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106970547 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068332437 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754022294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108069942 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082713082 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106160225 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076913753 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125440891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137917676 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097754099 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142668054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209805133 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078337107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122519089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106651198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143000344 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096953626 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086031344 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106795464 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085412487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125757019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096892168 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084496229 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170519411 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144230114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.175947452 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569868327 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071988201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106911586 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205112959 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072397092 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267897989 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140280844 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203612746 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145596857 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081144033 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28786194 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146546033 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169126924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109594847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154840369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068964307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.161078428 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147270854 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072175709 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09899746 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145333587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149120557 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147027328 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941887725 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092265538 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207861783 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07036998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153372717 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098839364 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079813027 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274206023 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071317755 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17259482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147140702 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074759297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107545911 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.676033164 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107853707 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142877516 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098462157 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176894153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166414312 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14060641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141794515 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077908046 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.1659419 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19069934 seconds)
  done (took 41.279140332 seconds)
done (took 59.321617966 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285841899 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194868286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260401987 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150810787 seconds)
  done (took 1.922556189 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150574411 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107485614 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122671595 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087993635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107537658 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090157089 seconds)
  done (took 1.620380351 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.434852763 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279630804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.262429693 seconds)
  done (took 1.935988344 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.304827682 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235951016 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466330305 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307051416 seconds)
  done (took 2.377340925 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19718584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119257411 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091225547 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087387398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164785096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268214129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128604894 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192762937 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080550809 seconds)
  done (took 2.334321501 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206219166 seconds)
done (took 11.349609751 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111735565 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103531509 seconds)
    (3/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.228514482 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.169670836 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.346010603 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.21082551 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079559757 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.288154971 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.313443437 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101450997 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.266924182 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08584953 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.242414011 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104007227 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.282517372 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079335868 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197480287 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.154381862 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092828529 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118243154 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077968412 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131278123 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075597841 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099426081 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.151767363 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079740141 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.251408096 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092224063 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196836 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107913135 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.169715589 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160143577 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.237684989 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.122353951 seconds)
    (35/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.187596625 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.283243265 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075360484 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.26091705 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079124697 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079274826 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07608231 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.128211431 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077390416 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101028762 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054779799 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074502053 seconds)
    (47/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.125234848 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118416885 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259800642 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.170772529 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100221044 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093577789 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10665264 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095491926 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142425005 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055396086 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.090467203 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096753286 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134469988 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.136442869 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071043226 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078069675 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098582461 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07305619 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121284936 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.222886862 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092839724 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072103392 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.243855615 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072854207 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178438565 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 0.150981547 seconds)
    (73/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063769971 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053981726 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101827036 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075897122 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.26766245 seconds)
    (78/309) benchmarking ("sort", Int8, false)...
    done (took 0.169039045 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 0.153400826 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.069819353 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126977788 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077061093 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068665421 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.242700287 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103514064 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056348307 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099894175 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.124665023 seconds)
    (89/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117991341 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.308988698 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.246301164 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07021687 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075399281 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.165046702 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099194105 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087230889 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075121215 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121753482 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12223006 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.256139262 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214861052 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.233428033 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100015749 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.162806886 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069726267 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069717081 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.166528847 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08884839 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122482881 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205343363 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07635679 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133173911 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108550073 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091939606 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148449904 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105337821 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.183671525 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056890433 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070510078 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097741785 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.160950413 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077344732 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074580215 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206099861 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10127774 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074001905 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097559811 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091123792 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067741354 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099578259 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053725091 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.262912931 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076919752 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123388298 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067340822 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107222092 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075869347 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.135345623 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144264001 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10807374 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089918769 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.077136339 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.270133329 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.183037303 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077279303 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.077835576 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077864735 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054940235 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054620799 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097072874 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077759869 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092589783 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.226049652 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080661254 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070073822 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.257557817 seconds)
    (157/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069990578 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090475977 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096840035 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.247725837 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054013964 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090595341 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080227558 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068260403 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.131544465 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053679279 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077310414 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053902273 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101360757 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.169316167 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052299187 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097888023 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074535106 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053857975 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15016465 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100585446 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076402308 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130621186 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06850359 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069706089 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077190711 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101890217 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159621647 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157154241 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065636356 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067810083 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076521071 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054802676 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196121485 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068023407 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176800173 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066666285 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097658042 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097550525 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142949293 seconds)
    (196/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063564485 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063959143 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092052637 seconds)
    (199/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063726039 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05438452 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091860169 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07736711 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097435101 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055085191 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.174357335 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06918274 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066883426 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196761006 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103624662 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083227736 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115610116 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073001862 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.245720934 seconds)
    (214/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054671959 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117300334 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054531336 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07372939 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094228524 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170472386 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092384559 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083997799 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07754219 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067249756 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086944348 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095439678 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074189549 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068633108 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123943882 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053604976 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078522753 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.183438142 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09577861 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16506472 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135992911 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077732754 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070799237 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.255442644 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074524258 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077013345 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055410819 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078003424 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120333175 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075341028 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052494797 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096961729 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063568257 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064016622 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093940822 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091677631 seconds)
    (250/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076558533 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054322752 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091353568 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090857119 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068228799 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053641929 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092268376 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091806578 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09784196 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083004441 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075722364 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077207808 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077554597 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05549982 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094929815 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054649268 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055182651 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141489903 seconds)
    (268/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120837434 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.088146524 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068318466 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062135998 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091985354 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054352556 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053736204 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088525141 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076910821 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067771165 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158775124 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066263974 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077230476 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055214553 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066312805 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142547014 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053094729 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106472745 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075018407 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089183224 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070883017 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07543378 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172881866 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054481761 seconds)
    (292/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.086226251 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068743325 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068750388 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076359977 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07444561 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077565336 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176584411 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10071559 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073444876 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071009808 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095379888 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14488565 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078749746 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074955662 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074294906 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.100369283 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090528058 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078960087 seconds)
  done (took 36.03994377 seconds)
done (took 36.996217727 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085307796 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118504171 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078272546 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119134299 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083914753 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104395345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075643191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103910261 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083810046 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107411428 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082963469 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056017377 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102434891 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076841843 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101553862 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095167588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105082879 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075157831 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09902135 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0675195 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07521063 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091643224 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069474196 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056203132 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104399528 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07441249 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099216695 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077757531 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089999051 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069030494 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071013213 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098738251 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067971021 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080148693 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099105753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076361658 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101157768 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079764729 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.091457309 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069746603 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07595751 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091144974 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07597688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075367142 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097862194 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074784467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098325168 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083292784 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117584805 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070751083 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076213336 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10358858 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078663555 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098668703 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072084432 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099539027 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074636377 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117690378 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077995151 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070239229 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099600616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077110329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095940235 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078230449 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076397726 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102007087 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079180034 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09632348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07948014 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073236864 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091446742 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075779071 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094197536 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068847995 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078444233 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102581084 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067548477 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072970202 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098814206 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074222361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090953601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070727856 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069082119 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098138654 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070153272 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056414832 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096053959 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074565127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089454319 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077961932 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074098165 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098640371 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070347418 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101374138 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068961982 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072823574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091746399 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068640874 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069446818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096170984 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068619239 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069823787 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101335797 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069396519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096910275 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083709744 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067249479 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098626735 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067217118 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090187336 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085514588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099846228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069491248 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069742708 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090550942 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075919047 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066618759 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09124926 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067925773 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068258987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097892977 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067666642 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092138358 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077109993 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081318762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093934027 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072099271 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068909315 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.09160918 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073479875 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09126895 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069271997 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069569138 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089274211 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071523761 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067419326 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099094869 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070204241 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098440526 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071149728 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076462639 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096401231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075065875 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072649481 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091418303 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061274144 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09145917 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071946909 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070399609 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090899556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070891269 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068287525 seconds)
done (took 13.642169535 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069514963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176889627 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.13101245 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099778812 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115828121 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068238846 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104223914 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132869341 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070509494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131880352 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091292899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111946429 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142897678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068684327 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068552746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096529486 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070573028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116546236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106747126 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114114282 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147000315 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06722835 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12613312 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092884672 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116447308 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121384951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068666978 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094852642 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072967869 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129808262 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089974079 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070879196 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092316959 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128237055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09944728 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112890491 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068395238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111148482 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068622815 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067505537 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120630817 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128623613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084276994 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11099205 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071605632 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095242501 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07042489 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112920906 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093294839 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108284996 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115562343 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13995212 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07286049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109219154 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067958445 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114465543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086924379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093853741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070170514 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070699435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092718542 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072679249 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115753334 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096197981 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097192494 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08475717 seconds)
  done (took 7.54108169 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088167315 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118925119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087590156 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110719616 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06944715 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06847269 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093067209 seconds)
  done (took 1.65870151 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070585974 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090933729 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1168334 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091496103 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11322994 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089995514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10363612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068955747 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11074988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070568412 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114126687 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110086518 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094444113 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077740696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11785835 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070165944 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092945129 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0930951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072684701 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117306979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073020642 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11336088 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07156706 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068632054 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108912123 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06912295 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14313063 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073616097 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095008081 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072991226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067162645 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144911279 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109074286 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08061302 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093133399 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086023133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107854835 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068242193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085304992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099352864 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084584964 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093975521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071383376 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066995506 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09891682 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080739371 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093542201 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072217019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072229052 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114182843 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070376854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107075513 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070904353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073069971 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095185025 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074921943 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103018646 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072617542 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088948934 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095787087 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087953364 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111228798 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084359142 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111510143 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072228246 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107558889 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085594665 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072056109 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095927464 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073173999 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111185192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068254954 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070150259 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105785461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071066559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118109166 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093939906 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095141906 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080648462 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068459087 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094856527 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069775789 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11691142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074208962 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068875801 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09903352 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072764839 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091200839 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069484808 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072361865 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0921691 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071121797 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072362313 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094734657 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07222954 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110209976 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071053032 seconds)
  done (took 9.638883225 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072065785 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070686588 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095775346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070838707 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0695724 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095861116 seconds)
  done (took 1.508419466 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102667728 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096319458 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084993923 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098900367 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112282721 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108589145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086080562 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110705707 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088464105 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107316716 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085360024 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110340116 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090488317 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101148946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085142831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100702607 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085217771 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104657724 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082060896 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100822166 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091188665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100435447 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076777126 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109974787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074319693 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099230764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080924992 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106136218 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083428927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109664912 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076797713 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072545381 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099607554 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108860373 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086326419 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098245189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076952062 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07391674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104680261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072942228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111106569 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076100626 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106093506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073600622 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11067235 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074669074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098612299 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080589694 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109192368 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073921243 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098226014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075828681 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096858784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076046581 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074478617 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111136108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096646232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087686116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075491796 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099559589 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073011242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097529135 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084126852 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098010616 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083661371 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098670589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074618824 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101012673 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07733596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098952727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075176777 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072490339 seconds)
  done (took 7.6207203 seconds)
done (took 28.979259702 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662315604 seconds)
  done (took 1.688841065 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819734344 seconds)
  done (took 1.848589607 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.03090808 seconds)
  done (took 17.069374237 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.652632077 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.836948884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.826911493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162957651 seconds)
  done (took 3.509538568 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.900565184 seconds)
  done (took 1.949272634 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247559939 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256068321 seconds)
  done (took 1.53725545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769944891 seconds)
  done (took 1.809598653 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.324007173 seconds)
  done (took 2.364056075 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34397545 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18818057 seconds)
  done (took 1.571079569 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535848105 seconds)
  done (took 1.574044891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.775663555 seconds)
  done (took 7.822247545 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235825765 seconds)
  done (took 1.289039442 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275257651 seconds)
  done (took 1.319193672 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.332817766 seconds)
  done (took 4.376553467 seconds)
done (took 50.761406511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081998237 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083323292 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108966216 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080795207 seconds)
  done (took 1.39459016 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082426209 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075212281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105258016 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075077808 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105394349 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0753195 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101974516 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081494819 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.097931737 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07819837 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075325398 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100298924 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078673869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101881715 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074017863 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077440561 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104742211 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075155351 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10328893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075911564 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097567841 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078814186 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077976743 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099890055 seconds)
  done (took 3.15005302 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08229046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075139372 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102219237 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074791046 seconds)
  done (took 1.386759506 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081790998 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119060073 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093965042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103980417 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096679728 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114871532 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072501917 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071269785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099691019 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079225057 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094524079 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103494027 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116515187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07933737 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106051411 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069513168 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093598643 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092624967 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079450359 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105615757 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072817757 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103211376 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070857857 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118328622 seconds)
  done (took 3.292032929 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081292573 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128701763 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08276032 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115655754 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096677583 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067742651 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104877279 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094121167 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.155474012 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067308939 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098604728 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068344483 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099452219 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06848332 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078337186 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139067062 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.139909511 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072857268 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124451004 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069863753 seconds)
  done (took 3.006042131 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079604359 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071626745 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092979589 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07155459 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078366938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100794621 seconds)
  done (took 1.553307124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071505766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069293077 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093580846 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069412766 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073624692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094451602 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068791206 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068390887 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094407367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069234491 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092144748 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069747079 seconds)
  done (took 1.991368482 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459614133 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07154193 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094531793 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069464292 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072799797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093557156 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08312833 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07046526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119320653 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068277975 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094117127 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071602436 seconds)
  done (took 2.427499071 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272011354 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080230692 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339089341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172241726 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142542941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161421972 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106889743 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144903993 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205039036 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143127895 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234480735 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203252905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138874857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171962047 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118537399 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13741582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190951762 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228250968 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13427948 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233547426 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188397323 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160648713 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211842671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131444148 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114067215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174464201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076092593 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082565667 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264354822 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167922088 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181452275 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1418572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124068187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240558154 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227487649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176104387 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167369595 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114209294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161145632 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171514054 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269254997 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116675645 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200871766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138294467 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1092403 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178775693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150368179 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151090487 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140431782 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117780274 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180716478 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246781382 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196385237 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09239089 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141176522 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144078131 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147258991 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131163914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255786988 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2243721 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165765011 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074236208 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12640335 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193216812 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164025157 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171265892 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160924612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096865107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201960791 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194282031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148566072 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207530847 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165752803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119235488 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151538116 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176724583 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184292331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212421727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158788393 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10137705 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156704327 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131258284 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085595053 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173201406 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077893292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242899187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128540002 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144366159 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143298239 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139611028 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114941697 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227226336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21089195 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133592044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070386643 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133077597 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154619402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182298347 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118235423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140232319 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151973858 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080949796 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199549948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078133541 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156908231 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107313783 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157236269 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167182633 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103978897 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159713425 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106317153 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132291251 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195249819 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202299174 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118705468 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085242527 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235219131 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160074268 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136386756 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208341107 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198511824 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131246716 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130791607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184681555 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251454971 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119331593 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231506571 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133810094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089722434 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117627455 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161371189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145656374 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15501871 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085125004 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157973431 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234825011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103473388 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100044703 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195964784 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085667166 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110781171 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144745242 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130456197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099605049 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131911375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137689105 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173173658 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182485606 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113982572 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184442372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104069581 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22787023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11907647 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133967797 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108894461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099751437 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170624063 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224946305 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083032069 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233495345 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159585731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135115777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152076967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111392312 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178227051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081788084 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099405437 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178188105 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143676938 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14152304 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216738886 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110078703 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159629319 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1815982 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169831078 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165758059 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167834161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137597112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11683421 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145091545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16258162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076261523 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124169051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111732158 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134124537 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099379868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113354037 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176703046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186557186 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103335681 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145040573 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12768571 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187974427 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106121617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164614993 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153489452 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125310074 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193502304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222299187 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170394538 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132408648 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20678309 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075534149 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07605889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119760335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162002219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11377686 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086894921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17477627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188732217 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162665498 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197309778 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116997109 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154114751 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223097843 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073656894 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147206237 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185703601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184560455 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.137699628 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120355751 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128717005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185088761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135446059 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25629028 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149498969 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157436876 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217937398 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.112618394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110885063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134575632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172739493 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135740843 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21707639 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128275616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093838806 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142953361 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110339471 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135525098 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162635158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152319504 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169948485 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149322242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194143215 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080769434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148441426 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157011233 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153927286 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094159256 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153967434 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231316614 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099406052 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177896205 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19495385 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108837644 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.129195352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271747845 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183551349 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114490934 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141095944 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155012665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16540045 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152259868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177528091 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141989304 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170652143 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14342448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114446697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092158302 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129744899 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139757682 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125917073 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146938203 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149512433 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098518835 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193494422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144462036 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142903085 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152681171 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101854265 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121067779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10044794 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24365528 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154988331 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241743451 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132981797 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.215171976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23428856 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079853185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08179062 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111125808 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176382831 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114857463 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168764576 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126999384 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108395365 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186467873 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180726507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125990216 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071710938 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143240594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168553746 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143158882 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12990654 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137965058 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230755287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109316933 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10942152 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160654142 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106572811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134615874 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245029761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09113281 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101425209 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105654898 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084918539 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164515654 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223301714 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112694606 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134523073 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151504934 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181447488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166410822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130906343 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102432817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144516831 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210046848 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164857188 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093102522 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145046978 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192698791 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197415745 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137826084 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126773397 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238170564 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196032444 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.233342188 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118749056 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148623452 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148600261 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144692223 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181250802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114457224 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235613342 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087249426 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200062537 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135365755 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097907063 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191151485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102093065 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120354245 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18798504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177861585 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088371508 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125117721 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147760174 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156616219 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134597598 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079136621 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201777981 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077643138 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172428656 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237077776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084105466 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13849447 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12783266 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111785852 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138538552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109737215 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118586165 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149076 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244176504 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.095175015 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217992445 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177158264 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14647781 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201186129 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132187733 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668842121 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082453478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223053781 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152868146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24928064 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129667385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152914714 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143124679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156831623 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178676777 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139001234 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207817341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166608733 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155245247 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110838833 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135773963 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144675026 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118577263 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11394488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148607008 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148514792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132961082 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154238326 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189853047 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086684879 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127606383 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198642252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151692766 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208515768 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177626714 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116022748 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153483024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178485397 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112237057 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157119278 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2244355 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142331426 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130877063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086407563 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138298284 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240953048 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076140725 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229505694 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158264566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144071594 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148150243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154336317 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195992556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139676901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161018257 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12664982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147280856 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150221916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088789496 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109008472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138903164 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147406447 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10349531 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135138545 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.151317158 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195575767 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101991199 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0993605 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134856359 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209077752 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248902086 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094829525 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113883663 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152170487 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147937344 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14944044 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159667593 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111831358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087783381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113377006 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116460731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144006919 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149797332 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135669289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144515925 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237214147 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089278958 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257344471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126138275 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114927694 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099871996 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082777352 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128688497 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127741399 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135572041 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10163083 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240325977 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129325329 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119684867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099105532 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103778839 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087917632 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164878966 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14413587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1546704 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12822669 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093010532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140164133 seconds)
  done (took 74.010920757 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149003331 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125438819 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138444828 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196179591 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170166331 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263840628 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203829649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247353925 seconds)
  done (took 2.623900953 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074303708 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124151567 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105167354 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120673019 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094784843 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071932905 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309678575 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113000074 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069529425 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120433191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123327812 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097187446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489292688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068437268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098646842 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089817198 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071474369 seconds)
  done (took 3.368900216 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.452356684 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.655083819 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456640655 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103116097 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.90820501 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116082604 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.357287763 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168927516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096727639 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433821766 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737410394 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15786439 seconds)
  done (took 17.776100296 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078493605 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072432696 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114444108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087559276 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101451671 seconds)
  done (took 1.584526796 seconds)
done (took 118.601576189 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083832636 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382057832 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055543885 seconds)
  done (took 1.60450538 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088739885 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087510407 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116367336 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085687604 seconds)
  done (took 1.516251531 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078733946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078463542 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115705421 seconds)
  done (took 1.408419536 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.301672256 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171252897 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093477274 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087029226 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080096636 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108457563 seconds)
  done (took 1.41336531 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077479722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077434356 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103842252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079318194 seconds)
  done (took 1.467315956 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08107589 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055391639 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057040105 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085928482 seconds)
  done (took 1.415093235 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094404799 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.1089961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084442294 seconds)
  done (took 1.421578042 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113854457 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116160042 seconds)
  done (took 1.367255706 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086666958 seconds)
  done (took 1.2183231 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09771898 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147020947 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164181509 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143393499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174529737 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143484027 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118302701 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091930885 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109343068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119167812 seconds)
  done (took 2.449019701 seconds)
done (took 17.056164375 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082796268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.4923042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364774114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121298407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674590022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385225035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987115195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122708343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111465611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09792802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08790985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679128375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976078742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.44739663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964410339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.421669824 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681794603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071966819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0959371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072742722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968949384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09797615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071164692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097239962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654094779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374769328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09911294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.421980277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096976249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073965413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357557277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099042782 seconds)
  done (took 16.4799732 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074618279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147450629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078497019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08634511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101647046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07188824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102004393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072490421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152575459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070176899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115605575 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071132422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101531901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07325417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089627445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099034568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07236551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097132449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072969668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071116722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117697334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070430014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097724922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072221109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070582592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111009944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071444867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097182729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072440608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072061801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101008437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072169265 seconds)
  done (took 3.987202541 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119919817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157982979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077231497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133299508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143565512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074254827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175777986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097382491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155987351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070654075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115763015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07004079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133580303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07210165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119036073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071889493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098114516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072345576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070965061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099065324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090026623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097584571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0719626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071345094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099246552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084429538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098851717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07400784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096058488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07468985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073602489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099882294 seconds)
  done (took 4.308874412 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075914596 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077620117 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113726261 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087288676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09901289 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075400081 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075811871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100034124 seconds)
  done (took 1.848628254 seconds)
done (took 27.753188162 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082663852 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072985381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103681838 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084507433 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103021577 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083194414 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069679092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105003209 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079214759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102053735 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079997053 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069457719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101229724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070414325 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07661133 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098620878 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082397171 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10198958 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08367111 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109731564 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074037962 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077448718 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10446722 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082921809 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109737653 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08306953 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109893152 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077428412 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071564486 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101044478 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080326339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.1153474 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071790523 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081697617 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099678629 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070814892 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097330878 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071865942 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081871871 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106093 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073284943 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10545556 seconds)
  done (took 4.845104347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093934165 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09500027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118024029 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064312743 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098643315 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064930458 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119694353 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064399746 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064865436 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120397184 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058435264 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059938184 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089465265 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057866394 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060363354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058192309 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091452296 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058883626 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059804637 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088117118 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063389097 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055969564 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089650746 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063148553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058686396 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063325725 seconds)
  done (took 3.128674861 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079436885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084871123 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118904926 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13121658 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137136768 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077295421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109081214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088251581 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114923478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070075644 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099603888 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100389978 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08888413 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105174446 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070058233 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113007464 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086072785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071355121 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105512392 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091281719 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116024593 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080884424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118864717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082732371 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069239119 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10104862 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074185683 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.1123229 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076407928 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078158794 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103084789 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073677397 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100033946 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082474004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101245132 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073288297 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090258445 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109329354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079522796 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097999821 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075183906 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071351991 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119448513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115301277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098496531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077719435 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105480315 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081148096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070133512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117179377 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079540775 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097526684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074181681 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06885663 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099231599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085359041 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099483031 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074323235 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079900068 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101830499 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083136538 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100272084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087716003 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069307176 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106034958 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069725804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097431477 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071275458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092490099 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100201275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111262797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100018798 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071440602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106714328 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079016079 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075628482 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099044056 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085913015 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107411684 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075797762 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078721317 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102492736 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0734535 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115875661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074483565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071971323 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099121526 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077473145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.09877372 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073165119 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084193771 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10786049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07393997 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114863324 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070387867 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07092637 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105396299 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075286893 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097162974 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084481439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102898064 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072081553 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079484069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099484173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073152451 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107573719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076447802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06927056 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103834076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078326621 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098342049 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07382242 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074064229 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100120451 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081018278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076466783 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103350657 seconds)
  done (took 11.724708375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201436565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194396596 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073794743 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184439877 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080124471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112244684 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186848883 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101488614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100444386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071367903 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09937342 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111577118 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133298974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147002347 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08387386 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069759676 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118981254 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1399088 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187861989 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153188443 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120090988 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078635123 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101787356 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072272585 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071435091 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109870914 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086698229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110734298 seconds)
  done (took 4.465969688 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085868112 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130191643 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077559983 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.117762104 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096772798 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09739497 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076971721 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072166399 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111548488 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08417331 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099339677 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077685556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104682703 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.081982895 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070885408 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108855714 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080424413 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099693389 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07511096 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074616588 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105788265 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083385116 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102763547 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070411437 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076301767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098937157 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067220239 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117451388 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070339658 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121141227 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06896993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10523884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082327697 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070703546 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09982608 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073677686 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099442029 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074611787 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072778962 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097420742 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070258688 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059974012 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097990693 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084131496 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104295259 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063292643 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076395235 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105377034 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076641927 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094803364 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075381204 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073485789 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102052623 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079238672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074701304 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104533798 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074735257 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096413797 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078778039 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072700052 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09471141 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070535349 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074863169 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098827718 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079276842 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.10286411 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070110672 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072359542 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104290935 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077374239 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072533155 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102813632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0687504 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.10136052 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076491677 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07503847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102608997 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069953971 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070086609 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09979022 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058010413 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097779805 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058332388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074160009 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096427949 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07129117 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073236919 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107694911 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084375298 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10099514 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077608699 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097932464 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07214078 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074292033 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093336175 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074940817 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085071409 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115915088 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070483307 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098091714 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084315495 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103931168 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071618186 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058586021 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106255011 seconds)
  done (took 10.208980013 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096503253 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122376105 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074267077 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084045709 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126730224 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09534006 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107185217 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077560483 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071400617 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117075497 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070464871 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108117785 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075366443 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07826179 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125080103 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07770329 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.10130594 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081436405 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106114551 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109853989 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083087249 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08677409 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081541525 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099950943 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075985199 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.10939504 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100464602 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080976587 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109979394 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085689043 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108429586 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100270541 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113220856 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.076783462 seconds)
  done (took 4.415134344 seconds)
done (took 39.92691478 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.255771635 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.443970205 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.218100825 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.163538813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227304039 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220271211 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231315158 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.229300827 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.278631545 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.21807686 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470661033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.906960084 seconds)
done (took 59.024324613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.369071379 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359893428 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492310252 seconds)
  done (took 4.021649544 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.560677269 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.204393576 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.50324099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.218670253 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.219278752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.63801479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.873962961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.078254386 seconds)
  done (took 27.895175474 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21769609 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.592595244 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.630769863 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.627681912 seconds)
  done (took 18.229118144 seconds)
done (took 60.235782325 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.235061318 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.299752224 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237717839 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.203776827 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330879065 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.246782954 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.292715469 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.320921155 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.220058013 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.209300502 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.241399618 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.21922615 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.233834154 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.350081344 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.234971937 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.221909976 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.224682082 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.817288304 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615886968 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223106058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.251836737 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.233402484 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226956083 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.219874672 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.283196423 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.220405009 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.225070374 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220949537 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.489694146 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.224055154 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.315542998 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.548970007 seconds)
  done (took 190.598672621 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.219828946 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.179356793 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.277490318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.280083226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.577643297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.420545084 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35033165 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.663982099 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.240107411 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.233136886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.409844116 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.221028553 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.475260614 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20381096 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229451368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.330859715 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449731163 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.491537667 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.2387068 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.465106409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.239142948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.342800251 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.230389014 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.400242402 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.229053435 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.274672879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235130568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236428626 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412414301 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.367713983 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.257433294 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.228363301 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.811436945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079004553 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.244153195 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.251000678 seconds)
  done (took 149.960723074 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.505713729 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220947811 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221850849 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221104877 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251679086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220439292 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.746391495 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758963283 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.764835747 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.450174119 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283660501 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488751871 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.225267756 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315869898 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234439656 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.223172658 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237585417 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249182482 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222652868 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223223542 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759336396 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.238592037 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.801792021 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230277953 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222884025 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252655844 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614838084 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222455668 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253294258 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537253694 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268906913 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223106904 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.533260279 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.256945018 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333953447 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2249487 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252740197 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222515294 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.49105382 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224063731 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.222535162 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223981882 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226990782 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820031005 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.226070883 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.748576309 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223961958 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141839746 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.226674013 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223468852 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.741969615 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.717027917 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225787008 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224192595 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.226022918 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224642485 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22442743 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.254881394 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.805204022 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325478133 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224739422 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.226769913 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254804147 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224484129 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.688474612 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227493931 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.095949012 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286202048 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.332668294 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.763549469 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226748861 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317206944 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343724546 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.224559701 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22378103 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.224988981 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22537302 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225038044 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330006064 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225253568 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225834067 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.635902828 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.23141593 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226215073 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.284716536 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225357394 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318524363 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225219919 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537851323 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227777108 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.225681955 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918875181 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317885625 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225987551 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.225115517 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226087637 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636497479 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766115892 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42875088 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228343274 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.698522346 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22924685 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.647964063 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747431126 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.843188235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230357116 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332502506 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230719923 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227454549 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226869766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25632573 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226539705 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.28460122 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226993076 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.622396768 seconds)
  done (took 349.40783691 seconds)
done (took 692.634239678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.925990328 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.879659702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01137317 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.894662614 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.872835356 seconds)
  done (took 10.752022 seconds)
done (took 11.920194338 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.418026261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418672217 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286939792 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41892441 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255722367 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436718088 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397492276 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.247705128 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332519831 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304135687 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331371287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277647955 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.255081103 seconds)
  done (took 18.54849942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568712084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.556244751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293937068 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553182593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269539162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566033558 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431740944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45247569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432698503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244121701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240434264 seconds)
  done (took 16.777856218 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565536168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566972292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296313215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557678917 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270770221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593426848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436444394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.455546036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429686259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243408996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241094843 seconds)
  done (took 16.824885699 seconds)
done (took 53.319353436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.23781937 seconds)
  done (took 2.406355395 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269670316 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.435990689 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.253940434 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241418268 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.238682085 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237699663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.242480232 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.236263139 seconds)
  done (took 11.325315943 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.233945857 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.233827403 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.236576021 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.236835485 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.235895222 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.237193024 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.23370681 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.23405767 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.234330912 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236745072 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.237136018 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233764908 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.237885152 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.235767716 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.232944573 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.233953058 seconds)
  done (took 20.935119002 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.236776641 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.233990693 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233976145 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.235109857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.2345581 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.234952026 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.236607419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234339983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.234104849 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.23516854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.235414746 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.234986191 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235226491 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.234641967 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235558717 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235601666 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235370875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23538575 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.239128268 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.235314864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.235596175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.235669505 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236507677 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236408215 seconds)
  done (took 30.822602216 seconds)
done (took 66.659084617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.319171087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.869335307 seconds)
  done (took 9.359370916 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.238984877 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23781794 seconds)
  done (took 3.649253198 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.239892282 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.237166801 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.238768584 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.238669181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.238499203 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23716489 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.238042608 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.23873545 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.238351155 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.238417798 seconds)
  done (took 13.554531786 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.238085299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.238567951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.236216332 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.238514591 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.238608238 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.236647219 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.237935918 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.239429978 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237881567 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.236572286 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.238701824 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23715072 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.239068369 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23637104 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23892328 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.237108688 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.236360041 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.237385842 seconds)
  done (took 23.451230187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.239107531 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238812883 seconds)
  done (took 3.650089638 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.236926448 seconds)
    (2/7) benchmarking "second"...
    done (took 1.23687371 seconds)
    (3/7) benchmarking "month"...
    done (took 1.236694416 seconds)
    (4/7) benchmarking "year"...
    done (took 1.237772561 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.237638026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.237451006 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236759216 seconds)
  done (took 9.832567057 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.241159012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415790493 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491331604 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80500812 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.240059038 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24294284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09447854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.24355168 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.245438248 seconds)
  done (took 14.19221049 seconds)
done (took 78.861474925 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.237387963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231456561 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120479291 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.251415856 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.249694185 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.575520251 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.271779672 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.35790998 seconds)
done (took 37.469800385 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.240997371 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.941693504 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.946452613 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.236979275 seconds)
  done (took 11.299736428 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.226362573 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.181938689 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.226531987 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.260454862 seconds)
  done (took 18.070445872 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.858669267 seconds)
    (2/2) benchmarking "read"...
    done (took 1.57094759 seconds)
  done (took 4.603661579 seconds)
done (took 41.389292164 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241011264 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.242090511 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241674772 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.238653348 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.241505254 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.240299037 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.239530352 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.239017444 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.241907124 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24168876 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.241938842 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.24139152 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.242210495 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242390351 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23823074 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239439058 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242505948 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238755202 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238913783 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239843218 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242552706 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238520087 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.239789672 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.239750613 seconds)
  done (took 30.948657394 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242867561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.240413583 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.242227994 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.242419065 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240386192 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242019194 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.243199605 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.239294106 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.242164883 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.242657383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240050439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239968132 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.242161133 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239773008 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243004276 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239628023 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.243152225 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24075406 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242849803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239776846 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.24366705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241600577 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.241289674 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242627554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.240677691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24127666 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242780017 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241390361 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243168294 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.243969738 seconds)
  done (took 38.427340871 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248810715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.25040013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.243493005 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243562699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243230721 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.244182757 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244248242 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24460472 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.244318689 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243806752 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24461306 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.244838971 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.244258451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.24445013 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244742748 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244253385 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.244740922 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.245105407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24409685 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.244219873 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.244753957 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.244053408 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244725158 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244897923 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244579938 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244312222 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.245182523 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244289614 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.244768944 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.246398018 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.245799516 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245356607 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245029133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244973802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244484273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244642125 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.249309234 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252485557 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.244636765 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245235417 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245373698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245254712 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247582334 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244419397 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245526753 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245498847 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244955355 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24741326 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245559467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245585694 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246359779 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245606466 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244794656 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.246034945 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.246088079 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2447143 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246399969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245841114 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245686947 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.246399404 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246889948 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245044249 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246261512 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246333972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246484346 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244704232 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.247113576 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246127925 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245111402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24694419 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24695705 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247129533 seconds)
  done (took 90.855930524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246393538 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243877274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243698064 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244133628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244502734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247213879 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243558398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246919543 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244765788 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247087453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246849823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245742403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245011726 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247412102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247012119 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245352281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24750502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245245917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.2478905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248303159 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247916913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243990629 seconds)
  done (took 28.590146951 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249038921 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248317189 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245334205 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247359853 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246684858 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247273135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247815594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249071534 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248260189 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245467599 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245796708 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248260993 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246048975 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245932744 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246486124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246332701 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248746882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246010568 seconds)
  done (took 23.629559329 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24697227 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.24606573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249108781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245527147 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246053241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24893513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246271875 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248387401 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249391264 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247200437 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248051221 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249443884 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249989099 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247084783 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249042781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246839208 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249253235 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246739973 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249041448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247607984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24667735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24999546 seconds)
  done (took 28.636175246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250380226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249345599 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247164908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246594718 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247363179 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250155252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25010702 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247174753 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250453703 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249626584 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246736825 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251065027 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247831437 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249185859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247178349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24794267 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250423919 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248588417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251251885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247407894 seconds)
  done (took 26.158252969 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252724317 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252404461 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252029328 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251640412 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252724558 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252400625 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252389871 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252346441 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252682638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252233095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252980699 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253602264 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252137883 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252462495 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252686828 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253103236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253464022 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252325046 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253339095 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252285131 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254555083 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253621607 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253036954 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253543789 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253319561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252850234 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253158034 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253350037 seconds)
  done (took 36.263141658 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253309402 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25266705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249412886 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250602007 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248474047 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249701127 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250750982 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.250292366 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252647364 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249357732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252225807 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253167315 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25292872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252642848 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252610104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252628668 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253523617 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.25046318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250622353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250078247 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253130386 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252535856 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253460161 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250280295 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251312348 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252507788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251334631 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252034475 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253210337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250951712 seconds)
  done (took 38.734995679 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272195321 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272414804 seconds)
  done (took 3.730872528 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251646528 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253895063 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252872554 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251026422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25115153 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254046151 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252751498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251404957 seconds)
  done (took 11.204375664 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25329278 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253682335 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253536218 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254492912 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254354145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.254644724 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261020018 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272327278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.25654905 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255952941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262438109 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263809207 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258053397 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255105083 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255357149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257119204 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255450013 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255735318 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255730826 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255859478 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256238914 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257766599 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257717553 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.252281939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25790747 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266272341 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261515743 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255194809 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256064896 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259503212 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.255967083 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254038853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256751044 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255865156 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255570753 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.256424146 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265445573 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273516126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263703043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256449162 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25714471 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253582459 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.257169685 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258550633 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25713464 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256050666 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257507383 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252971111 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255636089 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259298748 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261542399 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257052351 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.254445657 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260183472 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25805167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264645907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274525436 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260403909 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268184393 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267974788 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271346423 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265899523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259838039 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257696756 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268302012 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.284208524 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264456069 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272134291 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254796441 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25725322 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264378185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270355124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267742157 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257355737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257750894 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25838264 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258540423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258203131 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265532068 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.2792371 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260523155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25943145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270010476 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283857817 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258214384 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259360239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259381223 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259975026 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260614924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270703705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275609399 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258925713 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258356296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258920394 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260596796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260337881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259649712 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260247952 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256002474 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260292903 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259457618 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263577784 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268894985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260224635 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260006919 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265957991 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259929942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258912953 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267482316 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.26007808 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260218891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262314744 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265968276 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257528724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263660852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269795664 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261414159 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262778488 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261308157 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260744224 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269586722 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289453839 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259887364 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261479243 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265436489 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272519488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260678016 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263795076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261202746 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257690459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258376394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26200454 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260406567 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262290334 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261798828 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263105019 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258622021 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261559388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261270606 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262163007 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261928231 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261311917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262437997 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.26374201 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261171667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263698126 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268167297 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261774697 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.26442933 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263388332 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.258348381 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261493642 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263341653 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262065003 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262643567 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262201304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.262043365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262725034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26261148 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262289906 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262768673 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263773469 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265725213 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262893347 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265424524 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262121685 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.259629693 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262786947 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262712096 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262749537 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262653356 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262395112 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267406013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27079139 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26256864 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.264209017 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26625509 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263076339 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263892227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263743675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267400242 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271600392 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263977717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27062079 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263604224 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263041965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263137723 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264861864 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264062449 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263958715 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267777397 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272371985 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276440344 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273759379 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265765381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268221065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265217002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.268007411 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268271551 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262998843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263506448 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264178921 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264883087 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265088761 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265464867 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264783649 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265018274 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263550569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264410171 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265307429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264949922 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265557306 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266024795 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261979746 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265562802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264040589 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.264677174 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262132887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263744221 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265468386 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266347104 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265152428 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272900085 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263680097 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266139987 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266744938 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.264717249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264581907 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.265886851 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26753942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267064262 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27277335 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28324199 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266187969 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273470619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28344092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.26585977 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268970027 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265998796 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26330158 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268441914 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274006916 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26551785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.266831442 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267173477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266878836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267094798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272359828 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263941576 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265210528 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26656244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268123667 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264047674 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.267833795 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268100138 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267535805 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269072702 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267499579 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267010998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26802446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267818606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268008375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.26870902 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270937973 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276545093 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.27366893 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268355816 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.269758812 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270303327 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272078503 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.268803595 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268685027 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267375604 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280923904 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277424746 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275003378 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269765725 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269547519 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2728902 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269707922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273321385 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268898993 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268301356 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26888084 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268522239 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26592565 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269468804 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.268406359 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270265137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270160653 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273914007 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268568074 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268092936 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268552269 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269606576 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269301618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269798284 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.268327911 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271489506 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272008703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269243483 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269856688 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275573479 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288070701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270573029 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268624209 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269872607 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268776787 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271231307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.268686718 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274114101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277599764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273747186 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280320843 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272214075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279995499 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.269246074 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274367122 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278914395 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.267202159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269373846 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271098483 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269419891 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276798025 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.287523178 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271596974 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275058949 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270435865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270564526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270942486 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27078755 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270282641 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270559501 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279191397 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290247487 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.273406852 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272243193 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268501161 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271114957 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.271344931 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.271833338 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274889827 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271720775 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273686086 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270497597 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272046591 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271648833 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27166801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271860193 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.269589242 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271266922 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278313712 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29026583 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275974433 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272111219 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280251467 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27303779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27926205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290190293 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271969464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27222291 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27227443 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274232413 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271902688 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274201932 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272681159 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274704253 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27615517 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.272155533 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275570899 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.272777123 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272745736 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.272514811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28312145 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297901535 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275225268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278032181 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270063113 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.275816596 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278665647 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273068422 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273067455 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.277940406 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284047602 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281783023 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.274073705 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273476121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274049659 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273893873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273080935 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273739683 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273319568 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273954975 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274641061 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273336349 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277088854 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.273192481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.274664764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274830521 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274975165 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285095525 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.275038989 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27570171 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274245534 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274353382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274957673 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.275368622 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274104504 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275698763 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27523127 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276277363 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283142014 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28283975 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277680759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275328533 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.275566783 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275672696 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.27653371 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276651088 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276451017 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276255655 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.275974503 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.274757735 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276374209 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.274036115 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.274681034 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.276283389 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274800399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278507144 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.283706365 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276010361 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273321849 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.275958672 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276517324 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275949089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.276235674 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283647231 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280049648 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287201102 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.286404755 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.280449985 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.276579283 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27910096 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.284514166 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275824006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.277467692 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.276028078 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278015509 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278430985 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.280265176 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276311039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282837793 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276967911 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.276769716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284741477 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295717232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276870625 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278748563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.281582626 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277449093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273726336 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276864759 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.277025399 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283891747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297104587 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277668526 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278783002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276039263 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.279185219 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281965456 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278019389 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278140316 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274599712 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278804765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278432799 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277536822 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.275861867 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278071909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.278271347 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281052131 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.286206368 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276083975 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28022329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.278807521 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279400294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278313708 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278626379 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.276034466 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.275742152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278957794 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279898831 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.280218091 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281586717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.279251204 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282200601 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.280612698 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279446749 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283697644 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290950497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287433738 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276831914 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278928406 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280899358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282902981 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280490239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.279750318 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280643143 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.281252761 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278715711 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280407801 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280553759 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284009748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295949959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297749969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281046402 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281371151 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282653607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28045774 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27699998 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280895293 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282330521 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284089632 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.289153025 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280448087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28728783 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298733603 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282180889 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28398919 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284105727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289876912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.283947725 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279827668 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.280453961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.285885851 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298427454 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28120609 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291686465 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31263763 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299846526 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282483478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281592303 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280775312 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281962507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284018919 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280372534 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.281477934 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280675664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281101909 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284220847 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287540199 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283706454 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281259129 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28092577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282362077 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282986286 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279554821 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281210043 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281812628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.28210069 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281724791 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282315965 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.282830661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294913717 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292565946 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282160584 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282823597 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280587152 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286643431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.28612964 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294418864 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290313892 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282873289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283098685 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284756865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282930017 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281100098 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284114596 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283625731 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28409995 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279800397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295605399 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292878968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289569822 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28395982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283777724 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283967585 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28569986 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284245989 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28285258 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285629596 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285705185 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288385655 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283627929 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28417613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.286937402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292436519 seconds)
  done (took 759.170410742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282108366 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280584597 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281265311 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281724297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281825939 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281508586 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281616603 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281437775 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281818304 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282278416 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283366677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28222873 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280534804 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282207379 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281796174 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283005634 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281750573 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282165763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283065029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281935281 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282384156 seconds)
  done (took 28.136450718 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284688025 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282513462 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283810088 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2858805 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282902502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285503355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282828244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284565226 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285644813 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282553007 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285663617 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285775231 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281987893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283452345 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282556928 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285207087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286034322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282106548 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285991229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283666553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285008431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282885057 seconds)
  done (took 29.468040501 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286729562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.287371631 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28528114 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283049884 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285438837 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.282737735 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286711549 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286825242 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286431901 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286965288 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.28622815 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.288644473 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.294303004 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.291993877 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28916414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.287060699 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430956124 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28728463 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286632585 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286881848 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285135222 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292122117 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.284762044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284566075 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28572219 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286815603 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288037128 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.28651899 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287538418 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289912979 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291669201 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.288014831 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286576849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288083035 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287202495 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289867378 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291901384 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288195381 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284873824 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287422061 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298655325 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309341715 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287287687 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294341697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.288181273 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288727732 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292230257 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296089704 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.285951517 seconds)
  done (took 64.500888058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.288748084 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28880266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285877467 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28826474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289250998 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288260018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.287891918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28972926 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285979778 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285480267 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288679935 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287106663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287404238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289762339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289253858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286530619 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286361571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287326417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286165793 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287587685 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.28752208 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290773802 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289244305 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287213997 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290545332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287498801 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286237873 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29033135 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287950237 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287175244 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289954192 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290444816 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.290644853 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.288394289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2874486 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289764653 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291275309 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287603176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291112749 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28820687 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.29110697 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291138646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291009813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291606628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288554892 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288220012 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288916405 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288841922 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289405806 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291012377 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29140027 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289391397 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290928117 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288383643 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291390077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291840273 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289230462 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288722923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292855486 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29005714 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289280364 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291333325 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.288629561 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.290717923 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291019602 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289327299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289895059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292491344 seconds)
  done (took 88.882733541 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292239663 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291738848 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291637591 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291576403 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291758633 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291938196 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292222495 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292230396 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292439667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292597112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292887004 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291352699 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29274659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292739511 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292559654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291337499 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29237801 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292416272 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292379721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293010162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293078383 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292766471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292144687 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293792304 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293336286 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29286197 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29286653 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292978373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293471927 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292986882 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293066093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29414609 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293363665 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293765032 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292490654 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292912233 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293052056 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293391815 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293802351 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294265107 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293275436 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293831701 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294900264 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294574791 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295162529 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294358224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295810042 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294736036 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293728581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294306142 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294941484 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293363348 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293831375 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294843972 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294461025 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294015189 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293601088 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294043681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293689453 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294176653 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294197049 seconds)
  done (took 81.406986409 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294365375 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294200098 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29208365 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292048358 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294282753 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291245522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294792834 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295378676 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293738359 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29492132 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294198658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292061328 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292326171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294957231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291983795 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292365931 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292487895 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293195714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294503515 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293253716 seconds)
  done (took 27.095572046 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293013092 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295610711 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.292860354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293412019 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295767708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293936972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295951877 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294940543 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293364253 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295917746 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295755161 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296661005 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292798931 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293121558 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296930254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293973243 seconds)
  done (took 21.940718311 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29385631 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296434004 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295731717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296388439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293819165 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293247308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297003181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294845251 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293635777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296852434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296807819 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296983561 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29667717 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296778571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294905895 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296598807 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294849752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294210961 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297404422 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297799778 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295799113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294346249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297333158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297349046 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295429266 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294873639 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294460787 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295207598 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295379964 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296793722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295168961 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294737375 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295712532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294901379 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.298244671 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295975401 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298092014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297621525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298526409 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297570963 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298056906 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295175179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298905115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298644907 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296441746 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298654837 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29516069 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297205762 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295513417 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296296015 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298715128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298237102 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298833112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298909845 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298454211 seconds)
  done (took 72.531461894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298544802 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299131842 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2966607 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299400643 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299695967 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296282307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298602183 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296070161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296290959 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299785849 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298047813 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299535958 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296767783 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299751667 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297362904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298563011 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297465549 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296919332 seconds)
  done (took 24.596155178 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297727299 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297091848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299627483 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297059186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296420065 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300458053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296883035 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299950905 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29999135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297596094 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296813768 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300583956 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299897396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300893762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299349823 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297910872 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300729506 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300388636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29789063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297333883 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301566014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300824021 seconds)
  done (took 29.808577068 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.300245326 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.301650186 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.31817759 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.343671193 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.334552342 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.301220464 seconds)
  done (took 9.131086378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300372899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301305644 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298701332 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301842822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302429641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298591956 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30023429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298747701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301500213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299357283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29886231 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300477767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301602248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299753087 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30223275 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301871254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299236394 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299452937 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300678384 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301055023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299363164 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300962976 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299264518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299856488 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299855698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299681212 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302882115 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300097278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299767219 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302461803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30254233 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299815147 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302679934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299869258 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303594241 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302384147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299408059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303628011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30299206 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300523569 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302801943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303006331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302217129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300329116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303520891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301290795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301105167 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299959548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29971556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303300583 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303211511 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300900634 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303538855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303071784 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302831822 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303654638 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301324561 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301823009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303134976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301703336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301411337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303879667 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301687578 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30097973 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303615725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301193635 seconds)
  done (took 87.119568079 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302043871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302300839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302051149 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303477832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301351939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301267633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301649696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302721208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301571742 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301327069 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305445857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302947804 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302174922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303154423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301900806 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301637082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302705851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303319047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302538119 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305614104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302172268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302162422 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302120725 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302703785 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304353187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306125664 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302656372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303291739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301804416 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302618466 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302865976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302555276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302862643 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303135639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303115523 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302105635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30350232 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303755231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302757017 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306000426 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304691343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305310321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303506579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303016125 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304149793 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303283774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303769631 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303307724 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304081903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304382155 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304147776 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304146291 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304864804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305236976 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303680066 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30381671 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303954382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30418098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304437005 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306608336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304814021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304055915 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307080663 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304367056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305059838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304515885 seconds)
  done (took 87.266117491 seconds)
done (took 1769.410498905 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.397444587 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.346045363 seconds)
  done (took 13.980975253 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.467691723 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.423272962 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.306764785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.357660155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.306393528 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330026433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.326325617 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.307771394 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30618161 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.306498808 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306737087 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496573218 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302949113 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306699582 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306399515 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399878097 seconds)
  done (took 42.803455006 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33395028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312363155 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.425976076 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327723901 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333565115 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496674191 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367870535 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310702277 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4889191 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35193248 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.891522431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333340383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311408158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.430229616 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33032233 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500448661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.565909548 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.898023313 seconds)
  done (took 30.250301041 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.773280892 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.342402122 seconds)
  done (took 9.355866838 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.345940347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.353467857 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.325184197 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.331971794 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.32426556 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.344894625 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.312905825 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.331620203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.349642981 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.354451103 seconds)
  done (took 64.620229524 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331906893 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312153001 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3119999 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309096954 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303259803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.305155584 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310769949 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.319802788 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.015836603 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.443900568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327835059 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.316997425 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310480521 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313955816 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309244261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348847077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.457512543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30934243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308392717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316468608 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.311874376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396207298 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357307979 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.312454172 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44177794 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.031926961 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319130452 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318795518 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437848946 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309675104 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312171361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312851131 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313968011 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.89242476 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.828861816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321482965 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337165994 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322287931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.309964507 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434930051 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312812072 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318430902 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306479283 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.797015276 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474320488 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430968516 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.594434024 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314367641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314357847 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375516414 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316189816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314646348 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342254005 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.073096841 seconds)
  done (took 110.434586671 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.353374685 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.79288381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476836565 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325838351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.180133113 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958289808 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309852657 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.601860414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339211304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307607213 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588049012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824405701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310892532 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.330439663 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849865621 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38508833 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308806433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.178570416 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.306045013 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.311914804 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738994012 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332472809 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306407375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.415156809 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347746506 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.778282331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.763333961 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.721525262 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308821143 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307389972 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784600301 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313876445 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.35204322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312028749 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.585003286 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66954816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644993751 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.314691841 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320778774 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310620778 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328544666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774051123 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656927889 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309074202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308757031 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777592022 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308791727 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.307909435 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.311424036 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518224431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.233642325 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311218044 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.799211839 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311606918 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.560800552 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.311544724 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350396923 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804625161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30948485 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.38301733 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323635427 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307884716 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310912752 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312770051 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308727898 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661462918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690899825 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309558438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662709318 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778489126 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309384398 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848866005 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.217884572 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333375759 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353526121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309834385 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.031757592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805594679 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329559417 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310042773 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64947313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311859454 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596752495 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339171784 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309384473 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750609147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.336014305 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.360489748 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.310119852 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311392231 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.075763149 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315524927 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.581940048 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.377637113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310166966 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311284829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.316803561 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311789735 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31155997 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310995878 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850362021 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.313866488 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.452870164 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334013706 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310725295 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311479899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312661643 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312200568 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53743867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.91571804 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318821336 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313189119 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.310698097 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.320915302 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.41559498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310805327 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629518977 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315220244 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31115221 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334104395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997959727 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34853078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311134965 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.314415609 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149751121 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.520179321 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331516312 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.312222791 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313082525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328086998 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.696555862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313085087 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.321706857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315866978 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031645732 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.343979433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.313960641 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.884206675 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324159575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312434857 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321200008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313126733 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625104094 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593316053 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.628108347 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315574027 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313273747 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025279088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328292263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455287745 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331667222 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.349629763 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513062385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.437104859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314950529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.893080476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.315939491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535527439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315642821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652869608 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818192048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314917029 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318344605 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034425321 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968001046 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977898043 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.317619172 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596180328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.317060177 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.764011307 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314561222 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314496968 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902827615 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319134972 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322462599 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.31469609 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314104926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384635022 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49105849 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.235170306 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3169406 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783071757 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379945856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322016159 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317175658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316331563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.669199591 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398295759 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.314650046 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336062898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316916339 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319105846 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790524096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.247044702 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.318212406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469392355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965762098 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.318364822 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316697693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.062582027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.573332034 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.870496279 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353005698 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630988597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.325821452 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357109964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.117789003 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390943179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835829421 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319107199 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315410176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932718705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.316510077 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.37095027 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.316254973 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31565949 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862049507 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316403886 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.321352419 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.706516414 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317180507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571881979 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.318529833 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.338561357 seconds)
  done (took 1108.219113565 seconds)
done (took 1380.903746915 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.317467528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316753193 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.309628121 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324450234 seconds)
  done (took 26.521984037 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330265096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32689857 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327137571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326308682 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328108165 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326516787 seconds)
  done (took 9.221824053 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.435734591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320325946 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323934666 seconds)
  done (took 19.336752476 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553174408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.621504773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714299342 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.58374369 seconds)
  done (took 10.730235073 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328116297 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.328141621 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328019756 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328997428 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331609447 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332533183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329668362 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329763683 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332271263 seconds)
  done (took 13.225799417 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.387130711 seconds)
done (took 85.678651069 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447674534 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320605404 seconds)
    (3/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.541738722 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.335467256 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.192712919 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.336729072 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.349345241 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.168873347 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486580191 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.326141665 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.821321989 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.585945067 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.322467764 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.403413602 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.003006456 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350482989 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.322010159 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323767088 seconds)
    (19/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.340386411 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332040155 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42600218 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.311065399 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.76655464 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.780470053 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.197633036 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37004384 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314172121 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.405214796 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.401905693 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.874744649 seconds)
    (31/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.686209848 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.324255961 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.308046755 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.210913546 seconds)
    (35/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.861994675 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.745787571 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456501746 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308299633 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.445751383 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321906979 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.189090537 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.377559562 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.439222895 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.332492247 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.667290419 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339963509 seconds)
    (47/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.155750869 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.397428281 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.319495287 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353266149 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.435120827 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.234859665 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448408978 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579211696 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.310344849 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332411697 seconds)
    (57/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.407616985 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.732989112 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.1694063 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.617548555 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380725515 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433418729 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408780642 seconds)
    (64/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447301578 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.368877641 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.930899291 seconds)
    (67/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.327553247 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.39529341 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.939685231 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555409088 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.44342482 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 5.62105909 seconds)
    (73/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.790077275 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.927867495 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.748022435 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340434202 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.974629606 seconds)
    (78/309) benchmarking ("sort", Int8, false)...
    done (took 4.383977835 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 5.364259869 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.541667977 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339392586 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351832077 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.325607731 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.500633833 seconds)
    (85/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.455274721 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316857269 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.375067502 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.022403565 seconds)
    (89/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.407257699 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.609730091 seconds)
    (91/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11542322 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.335771574 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334769134 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.962608447 seconds)
    (95/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341004794 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.858679984 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337771467 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.68637204 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.288159712 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.653106355 seconds)
    (101/309) benchmarking ("sort", BigInt, false)...
    done (took 6.327260762 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.626129903 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.644023408 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.969653153 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.215060802 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363778564 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.720214447 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.74601293 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.955616047 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.329683732 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.524830562 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.724605208 seconds)
    (113/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.701145927 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.298928708 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.331641752 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.342042504 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.000142098 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323604518 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69161341 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.848884343 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.848780972 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.34963172 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603772194 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.340101286 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.339052404 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132554221 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.590254977 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.767177517 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.349752823 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432942465 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.560083404 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.191604189 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353008542 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.265909096 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.126126773 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.686860848 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357593404 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.65571107 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.571606312 seconds)
    (140/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.444334553 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.971011297 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.972873149 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.643662077 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.02842812 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354964541 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.518432637 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.200869642 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.526148089 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.237249147 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.391939046 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354650046 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.737463659 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.751092619 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.339837582 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.996625171 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.80057461 seconds)
    (157/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.414720567 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.804446038 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360160629 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.313531523 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.817763431 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.310834448 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.33301919 seconds)
    (164/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.333387671 seconds)
    (165/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.57777574 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.012903213 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.193839843 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.901671292 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.737238693 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.425504346 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.020379567 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.357467198 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088085858 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.234689065 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.331765214 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375578698 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.354223329 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.402831763 seconds)
    (179/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.772449151 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393276193 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.350175403 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.02013938 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.439275419 seconds)
    (184/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.552285767 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.396175581 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.12929027 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.680388332 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.744965833 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.330649384 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.581754325 seconds)
    (191/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.890407884 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39169046 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355891978 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.380288314 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.334126022 seconds)
    (196/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.659786226 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.882119027 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.046864211 seconds)
    (199/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.689261778 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.728657118 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.750642542 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.025393822 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550938794 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.738555487 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.854608412 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.358669295 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.175136343 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.331528148 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.416316763 seconds)
    (210/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.060098775 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.363864803 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394562715 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.653767251 seconds)
    (214/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.910338508 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.885394427 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.126685451 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.354375482 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450077146 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.332267402 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.348314197 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.772082111 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.678792545 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374436618 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.969030711 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.234363863 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.134489476 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416499707 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.329679624 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.321894857 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.25688976 seconds)
    (231/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.435979371 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.830380079 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.33617142 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.339048037 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.318347446 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456138404 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.529897391 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.376048287 seconds)
    (239/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.54896183 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.525019566 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.432052148 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.718842191 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422736005 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.244939471 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360046423 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.854781409 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.684596258 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.39220168 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348906855 seconds)
    (250/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.967872339 seconds)
    (251/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.660398501 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.502566254 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.119504176 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551788366 seconds)
    (255/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.533634878 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.348495632 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.968644648 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.363677694 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.072128189 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374859584 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.94269829 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.718945893 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328088528 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.402244646 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.632608693 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.260099431 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.41290853 seconds)
    (268/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.333636219 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.143865494 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.744453888 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.721388414 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.003557987 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.760145258 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.337272687 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.191527603 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417906478 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.978200002 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.360138494 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.416769762 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.843411398 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.467739753 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45497981 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.43148898 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.757399186 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.911593027 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.364020513 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.346854349 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.490407953 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.068356371 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.335230383 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957178147 seconds)
    (292/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.198331165 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.228730674 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420020891 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958505654 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.377171406 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.388400731 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.337438688 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42551082 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354057456 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.334816444 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.461203418 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.378444326 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322050976 seconds)
    (305/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.445905907 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362395909 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358464291 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.524491308 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.938871266 seconds)
  done (took 928.360329319 seconds)
done (took 929.619399669 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.368376656 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361590667 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345747692 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367394653 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456779457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.378286531 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.355398205 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348847673 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393605414 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394835961 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344034145 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376859408 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.346865236 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345864783 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346746694 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359146467 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.41823908 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34559435 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.361845161 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354627203 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.360977809 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344464155 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395140909 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.377550857 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.348894409 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.349025887 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.348880278 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.36522151 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458669915 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34923855 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.349788758 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.357636141 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.418797742 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.344757326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339655284 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366259597 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358005843 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.356470214 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350106248 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379818449 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.836686966 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34686084 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348621032 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347907117 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.346988527 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35221557 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348694835 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354283561 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360193173 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361768837 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.82263056 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.362661339 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.351436496 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348730463 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358809102 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34803163 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.351640855 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363893812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367934528 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363001698 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.410700023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353326761 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.350680919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.364690208 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355949138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.862318078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.344141007 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353974073 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.839667354 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.355019253 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.865341153 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356906624 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.350926234 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361719052 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.380508333 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.423729368 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.344872769 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.348575883 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356644463 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348005868 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359421551 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361350709 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353708631 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350611223 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362748332 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.380628921 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359576195 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.350011216 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360230224 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.367292892 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356867935 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.360438879 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353534579 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34542321 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360546135 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.354619002 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352758217 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.352567743 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.3563395 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360814813 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.843807331 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367295008 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349155582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34838576 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350114379 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363584357 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.844266667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.352123913 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374304989 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398531429 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352302788 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.416540236 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354337536 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367362369 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.361223237 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355189813 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.34702729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.416130878 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.834754907 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.365315973 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352291854 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.3495958 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366452026 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.353257122 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348678605 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.431160004 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.353406647 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365780397 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470914579 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36309931 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383183809 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349705943 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.355536791 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.379244901 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367749224 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.384002095 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355928059 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367914885 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367729059 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349541858 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363523221 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362587539 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354617327 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358845347 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.347328207 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380824676 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365054384 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365528564 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37465554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47395096 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.35278643 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.416861805 seconds)
done (took 228.59464167 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414268221 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.3461137 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445268967 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350908958 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453444597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450004815 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349201182 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348652891 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348181045 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.733103127 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348312291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.348847285 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349158124 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349039264 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432945748 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350582701 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347982028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.723918252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.351995487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.421886606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.349530717 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34854597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.351128052 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.73214558 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.346407474 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.352252148 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422116829 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350624149 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.696799455 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353748118 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.353410893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.697439085 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442232639 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.369483214 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.362140065 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358899351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453931969 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.370131653 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435236778 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434815593 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447669059 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391032071 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.352400075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.352200894 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353220557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353250345 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350797742 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379042626 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.346857044 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.350729684 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.726402445 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363132525 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.350644295 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350177205 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.350592756 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381987749 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.351368894 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354623364 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44395271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35470621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.416393682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733622763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.735321944 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354152329 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.348308914 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.351128642 seconds)
  done (took 149.770844127 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419262802 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.426857872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469501619 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354295474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403294136 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474045015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.354680948 seconds)
  done (took 11.184696111 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.360195851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355358673 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404556909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404184202 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355243689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502024206 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353877237 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366103642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351391953 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.40771933 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355663878 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356113868 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.361964994 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.356155811 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403301067 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.365747631 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469810087 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356172613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354814843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506920378 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35176614 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361616264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406727682 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366557727 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355751274 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361888936 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.92730399 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355074638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352390707 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.354891392 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353576167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.393039349 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355933598 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.35248064 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352888679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471811476 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356328863 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353702021 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.35618033 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.354893248 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.355575893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356280463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356648453 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352823739 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355474637 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.379344474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356960468 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355359953 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355846492 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355946563 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406529904 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357074978 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354137619 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353275971 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41291244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363616306 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357794147 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353610722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357671527 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353201664 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508842301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416636172 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.356835142 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405358959 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357288662 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356868081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356863374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356861215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412079016 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357410651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405713309 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355110096 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.511299062 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.381285757 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358547589 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.360637975 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.362031277 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358325331 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354285337 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364684859 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.355637846 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.359978994 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364894573 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354884806 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356152321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460770031 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46756181 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356154906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.371679472 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364804806 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356155519 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412178036 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.358009081 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355344128 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410926941 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474195398 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.412087606 seconds)
  done (took 155.467028416 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.363645735 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367361601 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359556402 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375527499 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.358813941 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359172718 seconds)
  done (took 9.471338491 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362793672 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360545963 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.359432739 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358652865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359670165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360988669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361835105 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362756203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363476612 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358536898 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360184481 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.362603814 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36097349 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361525309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360231246 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358896499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359634857 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356565022 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359322772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359250776 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.456935977 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360094244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360901947 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362329626 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364541392 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360752524 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367618277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360525125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360063201 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.370123838 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363022262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360591275 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362931601 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367760944 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365441789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363224213 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365008251 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.361154567 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35749405 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361818534 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362941343 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360538763 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360517539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.361685261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363611312 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366280686 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366362184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369150782 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362535741 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361165094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362218862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360123589 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360944084 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363288876 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364208976 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366887842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.366379282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362263172 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361160803 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363745696 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363690493 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36193651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367024854 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366811824 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369034309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362399254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364026762 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366166433 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363213973 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362804145 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36309398 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36019246 seconds)
  done (took 100.487901078 seconds)
done (took 427.663040473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.382509329 seconds)
  done (took 7.6733079 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.487693528 seconds)
  done (took 7.780652641 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.7804149 seconds)
  done (took 23.077500067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.37025488 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.41182896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.375684108 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.362597027 seconds)
  done (took 26.812268433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.911733194 seconds)
  done (took 8.20221473 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354337683 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.367563638 seconds)
  done (took 14.013157603 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.451307041 seconds)
  done (took 7.742308768 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.364596256 seconds)
  done (took 7.660986529 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.382737536 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.3770002 seconds)
  done (took 14.065280018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.341310419 seconds)
  done (took 7.632718839 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.544658527 seconds)
  done (took 8.836566915 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.353300335 seconds)
  done (took 7.645572495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.387218922 seconds)
  done (took 7.67865797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.752381825 seconds)
  done (took 10.042401236 seconds)
done (took 160.156102223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356397408 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361113004 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361918568 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361330703 seconds)
  done (took 26.732536323 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395461058 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39768751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398354799 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407520116 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400178807 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398119174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388900945 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389549758 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408003555 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400320499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399968557 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399743582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398101848 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390897176 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399256057 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400037526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408761066 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.399169245 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390796955 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400745152 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365924154 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408885793 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40064669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365690704 seconds)
  done (took 34.806881311 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.562259505 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436642493 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519247439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.417878866 seconds)
  done (took 7.229131241 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416530325 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.41835553 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439155517 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472263219 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.495257965 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4276781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392189366 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386944394 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372350957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.419280016 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493227263 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434395109 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512090779 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365455667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551780876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365776929 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.36505585 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.417714357 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.46844054 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.496384848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364852102 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417009181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420134291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435217685 seconds)
  done (took 35.642597732 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.364249416 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373081508 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.371459055 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364879642 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.365239443 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365974419 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.371391562 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367019756 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.386892329 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.366410296 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.364135941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.3651965 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.364278522 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.365413371 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.365225581 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.378318474 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.378735571 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.365838424 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369162343 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.371726425 seconds)
  done (took 28.679823506 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360464895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217582104 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711912944 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617377419 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360821396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.360354127 seconds)
  done (took 27.92355506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44305114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581079198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367578202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.745598159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.819954775 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.368484705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368055006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.620481981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943710586 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954176295 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427712401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.438691338 seconds)
  done (took 20.373946606 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.364808282 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364502043 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.378276376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379882342 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.428600605 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.37233103 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.375255496 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362860951 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.429906246 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.431659173 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.371752167 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428995533 seconds)
  done (took 37.986137163 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449885041 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412221598 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.343297222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282626539 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.549795764 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574958587 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30421354 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.837722678 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.365806323 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635384745 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362342507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456995514 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618453738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374206248 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366500389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.434070817 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592700843 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884895649 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363276768 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609913431 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390854169 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377487922 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.768461229 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398581528 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573748702 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345704041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62290958 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140642788 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668143767 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378045363 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373807114 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361764557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636905982 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047393019 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46096436 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372929082 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27797076 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908864783 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.356491461 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.664534419 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373558359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369496866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37488334 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363780247 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298098591 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362759482 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856793649 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368838767 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074777756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36290835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373849438 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458804578 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.367313584 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.937797932 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537181314 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370162116 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.361945706 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371037777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936935712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158028134 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369823383 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322695738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.906633121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.666287125 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057965233 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.47077738 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368282541 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368226599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299077538 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.640308964 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385379545 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501297271 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389483582 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026949334 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133224469 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.379895425 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300344111 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947360003 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379952447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.304194616 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594456645 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141227762 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304940613 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.312044313 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299783152 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099897015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371099152 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.77489622 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37083808 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838324101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375981976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382718975 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389004811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589609793 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.250193767 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366613861 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.373710888 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487462191 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387456547 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834107717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30026429 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369789432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625086543 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578676604 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369260097 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.44007024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604360405 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367433548 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.384659398 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37422441 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.381048158 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.017256433 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38249402 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154960042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388247145 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.141774332 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144415561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3782192 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470559567 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375942079 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628068239 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17145217 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264131647 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434586126 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369376599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367140618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.688465129 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224253527 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26635352 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.370140178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372620985 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381336523 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.368205103 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324311203 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.365265447 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399437744 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149352242 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591971903 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367372493 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647787355 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302509351 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505433437 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383511007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592158531 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.632814729 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.367446125 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628251301 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373027444 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387708937 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382540905 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388960079 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466144803 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390153404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.372114965 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628692351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.372372735 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.373199725 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.693965855 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152346381 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371856559 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37441003 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343366978 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022529289 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345343789 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37705401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261884927 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383371666 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437297146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375535935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378408807 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.297023147 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428759032 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.374112764 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.366686167 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594691242 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381350364 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.706022035 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454205201 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.599099702 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031607866 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386473999 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.303566823 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.080665415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062728669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370978015 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560630511 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370136884 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379690459 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380646263 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.093338306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023460819 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375254439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.624495621 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379446286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381202709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.375939926 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372629079 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.268048078 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185594701 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38351997 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385703131 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514672037 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.384595583 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30730244 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888359127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376344858 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372060041 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.147387009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405943974 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.61644624 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876738797 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629629745 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.146075853 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383185067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.741937909 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.408972339 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375741697 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380225006 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38340439 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.376593993 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385457719 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38373083 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.629974254 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825342743 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942306975 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244252976 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9734827 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380365567 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.389949749 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2766411 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.863128251 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311005769 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.032224695 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574677827 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866420121 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327868197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616965786 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.638318234 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173456063 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383146366 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603210406 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384744535 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.392306864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390240895 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585885627 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405835315 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380586462 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306352599 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.660151318 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656058885 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388498971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457625108 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860743035 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389866973 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156003199 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.374250689 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.751313741 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563262191 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.006509893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766292322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379601477 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380212713 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877145174 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380946107 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899676691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073388314 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382372757 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.609114617 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316387471 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384907072 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387269624 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37554009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.764335496 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.378907266 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631334044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384850131 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310596967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385117163 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976491598 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240653496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38284639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377413412 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151152138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389673244 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685522504 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.379920392 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.254119364 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374792528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309025543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310981969 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.069243011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380095275 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345241387 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898013063 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.874484882 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532872141 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397868504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229454355 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633268018 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.389052666 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038389232 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606778602 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.389981789 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398460068 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.478296829 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377716504 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.362022591 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275491949 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613830137 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346898594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601363404 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.350651 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281540524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.379224871 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587923451 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275340184 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382632904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640753951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.089941592 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.388681129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265002723 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40173707 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377597199 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399282853 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.918944084 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384799424 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446735152 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387518004 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389226008 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385607684 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563598163 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395553121 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378770202 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394558831 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471268316 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211133062 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.263993599 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.14644026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04832003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178368503 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043760643 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394398745 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374220681 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38923371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314097169 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525094058 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907367912 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650633775 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498172959 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.052191079 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399013922 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385604114 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388043624 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589081676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651235113 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24775303 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394515711 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042054695 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.264880475 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386816586 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593416924 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905448531 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961481148 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500907733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387376105 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852407107 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649451107 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.464434126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377274115 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973107917 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.399158283 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.780865613 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.382022802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375575476 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527042456 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39062871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078511781 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.390110744 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.53614005 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15062818 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664341236 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638639985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.92658394 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.387695603 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04269903 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17692632 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643670229 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447403926 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391096673 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494914204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521305476 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387193859 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261430155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378543718 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230705399 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.088575996 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388979043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053137473 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644121342 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.376679789 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.390955479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400130821 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389592253 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603368087 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123334983 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600724546 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387625871 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382698605 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.951260414 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042612733 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396725418 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314568616 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.384592192 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644712867 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.616592309 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403081086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.833974615 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.087852098 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969618289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352893292 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403930884 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385059006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174085155 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047648697 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.269682394 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904330486 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041543906 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394825332 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658520692 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390007997 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387819214 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660888633 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388004335 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390141099 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397539596 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.051206574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190309394 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.404131477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694582118 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.320792127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.610545916 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152134436 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315014958 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390926358 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.593334109 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38899948 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504806998 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390592199 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.387320941 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398978239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.140907482 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669727426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386192426 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.376539229 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.384781929 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391449822 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396338147 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670867379 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390330958 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.063343689 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736517947 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637805089 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395362319 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372823414 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38775041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384447979 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102245768 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359912699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.105852085 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969337001 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.381188303 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416502126 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388120204 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601181467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596222186 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388940232 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398091757 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390727443 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402822811 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.289484874 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161068649 seconds)
  done (took 1616.74049985 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418457665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.43362657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.403028308 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.410474191 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394083379 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418369508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.439419305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417670849 seconds)
  done (took 52.650648586 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.38417359 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.543300898 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.423099277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.396527585 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.396267165 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397387992 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.871667108 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.394950687 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.395215341 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.396975777 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.390543803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.39547942 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.107138935 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.401125188 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388661761 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.379095106 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.392761495 seconds)
  done (took 66.376386224 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.399324156 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.625772344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.417202699 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.383542603 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.578246293 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.401541407 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.623094675 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.43239993 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39165254 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.51103536 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.061404409 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.401438968 seconds)
  done (took 80.549286172 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393396951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.39604295 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.396142521 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399418166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399219508 seconds)
  done (took 8.301064187 seconds)
done (took 2045.286608538 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.760866119 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.163770082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072788739 seconds)
  done (took 5.550042504 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.530462946 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.581759437 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.761142924 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.717388267 seconds)
  done (took 7.900940189 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.673731022 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.754833175 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.580763256 seconds)
  done (took 6.324691767 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.8969576 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.395315095 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.531513912 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.382109793 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.382219557 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.38970013 seconds)
  done (took 20.473787999 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.388940127 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.388371755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387123111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390225231 seconds)
  done (took 6.869682678 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371739085 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.102604539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.371234621 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.385681454 seconds)
  done (took 18.540771043 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136588569 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.149352633 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132780311 seconds)
  done (took 7.732431459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.399672441 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.232486792 seconds)
  done (took 9.945662082 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690766655 seconds)
  done (took 3.002425762 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.524311308 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.717024765 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.599950042 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.430398755 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.599856567 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.47626881 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.136526568 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.682444254 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.396991529 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.708383434 seconds)
  done (took 29.588772237 seconds)
done (took 129.835381613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.390541298 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.788736135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.590463021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.403683886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.619557396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.629310478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.68685956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.37230281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.867672556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.848604479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.400135444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.614577535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.635857961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.786642221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.632887194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790838577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.619355908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.409822063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.048740371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.248344719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.685386862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.997796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.227347523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.008794985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.620842686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.575177508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.571774156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.791970556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.222820215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.592102999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.540612634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388223568 seconds)
  done (took 195.924171298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.389550164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.382389644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.383750367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391640658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.38468139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.391467784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38444355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.384528862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.397857125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.382439389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419986241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.38562622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.3924073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405458131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.388165807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38336852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411444029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391686171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4027148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.382891389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403263131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.385767509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384071963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.383756229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.385463105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40506744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.383966724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385912179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.386418635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386459522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387253193 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.396434111 seconds)
  done (took 205.829650506 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392346277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386816996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.386333213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402153856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402007973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.386607396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.387037751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402008466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384685003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412179554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.409654081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.412281593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.390574335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410379958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.386713644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404036736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.386602105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392538656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.386412914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386451852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.407525085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386510917 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.387259222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404512292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.395134619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.386353353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396783725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.387877961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389134996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.387487967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396402309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.394181104 seconds)
  done (took 205.947332164 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.589878284 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39629091 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.399435999 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.337449095 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.401113934 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.394663586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.396546167 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.592632751 seconds)
  done (took 14.832406075 seconds)
done (took 623.853731586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.803625379 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.505171586 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.596249667 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421663948 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.279138406 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425433223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419028619 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.597089307 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37429689 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.602599682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.67855054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.416253285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.828636912 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417722183 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.686753834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521087519 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344056997 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.430654984 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.746853185 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031051589 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.688061558 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.904486848 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.597998432 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.390469705 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.887871248 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90817952 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.198790673 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.347509714 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420639096 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.753516673 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.243790323 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.483238693 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49255075 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.469742589 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.521510381 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507790184 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.444347254 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.469160443 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.611121389 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.713906906 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.02904954 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.194672362 seconds)
  done (took 95.728498108 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.390682777 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.389945188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.392490886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392910333 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.395446398 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.395594486 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.384278783 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392825998 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.395011613 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.393888161 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391170486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.398105515 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394205408 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394965736 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393723764 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.395483855 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.391535559 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.395420137 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.393496849 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.394919667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.391326036 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.386935368 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391660328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389695988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.39340455 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.392529518 seconds)
  done (took 37.541870669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.404141349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.665011908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.839959631 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411603188 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.403992578 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411037987 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.488804322 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410500757 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410320922 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.403878892 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.561998571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411555616 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442561659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.864517759 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408540451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.406974491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.404480286 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.403064491 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.674306406 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413163445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.510656068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411603432 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.487912051 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.420226075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430556481 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.40921334 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.411817764 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.938372361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.409151762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.563336739 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.253400294 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.490349475 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.888752077 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.855299474 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.255996705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405966745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.405899956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.570070242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404960236 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.405502782 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.485865916 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411464885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.83824325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.034222647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.422589534 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.407326781 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.958069843 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.565879397 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.679360765 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416923151 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.867420096 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.409067413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404793347 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410004606 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679129484 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.41788189 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.404381262 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.950785868 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.424991476 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.491992461 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403583088 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40891552 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67994293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.406475246 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.66616335 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.407172727 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419303142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.410300098 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.859286918 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41163309 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.066562094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.423379337 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412229783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570407901 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.669856075 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989443628 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.413531453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.686686741 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899138567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494184539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.412681726 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.930210266 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.501160256 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416696655 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412128352 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.410698474 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.410615046 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.454363464 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.489303331 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.991875332 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.057145288 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.979179787 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.510793415 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426719408 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412127971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.95830992 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.432957999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.402060334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.848101941 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.067317047 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.42587404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415324594 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.049236627 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.42870605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.495830465 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419175244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.864318875 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411750129 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457184223 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405028221 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.417052037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.416134298 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.49785258 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416157477 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407960727 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.031016203 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.593526058 seconds)
  done (took 185.158800041 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.421115767 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400251236 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.417762333 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.402879808 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.404532974 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412023224 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.405228869 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.403716355 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.412445935 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.405449155 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.407354397 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.406140356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.40063426 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.406824975 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.413398887 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408638683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.019464047 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.403353004 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.415414074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.404071917 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.216569434 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.408904759 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.416188421 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.403130365 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.404555424 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.401842195 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.411370194 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.406833546 seconds)
  done (took 154.17852826 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.410127592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011193479 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.412194453 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.558866224 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.434407361 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.403388216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.550715737 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.475483827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.417840436 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.409587671 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.406552222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744141797 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.414631854 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.984585769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.616302217 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.560830596 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.990076186 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.418306899 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.412142609 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.405572469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.555051392 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423882197 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751541318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047118016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417314003 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043758989 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.406508489 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.415551242 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415383674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.045967498 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.414117264 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.75222502 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.501428534 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.478698956 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.049182086 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989388976 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.994393983 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.577916425 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.417775852 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406396086 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.410376553 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.401782007 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.048341512 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418880604 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415422089 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.044462736 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.433053933 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.410742842 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.42343779 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.408436244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.47804974 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483614502 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.757378853 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.057562003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.501530965 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439640462 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.556523982 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.819957473 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.419883428 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.990715871 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.405977201 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.021414128 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.416737646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403486798 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.414957077 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.420203596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.581498945 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.561791731 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993881812 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.420580224 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.968462462 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.574521578 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.417113557 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.413591792 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418026819 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.016462569 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.972580146 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.578002536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.567054427 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.629514322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409328545 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418912997 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410132222 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.501898317 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.418020575 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022697959 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.993587731 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.420579523 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.419813066 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421314793 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.420925521 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609605104 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02541326 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.501784517 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.991202576 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.763034668 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.739294934 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.416568639 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482883676 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.419542634 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.747666107 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.416788919 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480970506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.889111621 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.746435868 seconds)
  done (took 169.685913691 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.688113464 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.698243605 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.516590887 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.542468092 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.022650201 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.015170161 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.740070296 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.54792514 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53752248 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.678201251 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.665891232 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.508904989 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.626981049 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.501807153 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200435703 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.497078737 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520101406 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.550597644 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.523446211 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.454020213 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.070033724 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.716424587 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.604127795 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.458425075 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.519334363 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.274400871 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.991075855 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.95740676 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.596585531 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.787686485 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.977061392 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.565447945 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.421718063 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.14702995 seconds)
  done (took 68.462328151 seconds)
done (took 712.082002361 seconds)
SAVING RESULT...
DONE!
