cset: moving following pidspec: 29256
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.649405744 seconds)
loading group "shootout"... done (took 1.207890391 seconds)
loading group "string"... done (took 0.41465055 seconds)
loading group "linalg"... done (took 7.894627299 seconds)
loading group "parallel"... done (took 0.161270758 seconds)
loading group "find"... done (took 1.325956011 seconds)
loading group "tuple"... done (took 1.922847015 seconds)
loading group "union"... done (took 12.551755951 seconds)
loading group "dates"... done (took 1.350389613 seconds)
loading group "micro"... done (took 0.202522968 seconds)
loading group "simd"... done (took 4.385758069 seconds)
loading group "io"... done (took 1.009773494 seconds)
loading group "random"... done (took 8.793480894 seconds)
loading group "problem"... done (took 1.536771999 seconds)
loading group "array"... done (took 19.467492079 seconds)
loading group "misc"... done (took 1.502441087 seconds)
loading group "scalar"... done (took 39.621441049 seconds)
loading group "sort"... done (took 3.10598265 seconds)
loading group "sparse"... done (took 11.931168664 seconds)
loading group "collection"... done (took 17.294743629 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.502969744 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12375118 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127704998 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117830013 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148032275 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121100179 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126061157 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08428201 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.852732414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137405801 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113602982 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416462449 seconds)
done (took 5.259826313 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.166868873 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09015274 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082069815 seconds)
  done (took 1.336044877 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063921317 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13449858 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064464993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065159797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065157676 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064274442 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064254952 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064382655 seconds)
  done (took 1.687476634 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072858134 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066737343 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063900139 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066267372 seconds)
  done (took 1.435792151 seconds)
done (took 5.87514635 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238831575 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101443258 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285510393 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.383040978 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.456859754 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091686668 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073422967 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069441976 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12961807 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317281476 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104046331 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182524078 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090370204 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173646596 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.961213728 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120255219 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084958049 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121146035 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092575086 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130583093 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.386401291 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077216157 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073297861 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069186732 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06890586 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645993317 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664670569 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126868013 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08358848 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098386253 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11414679 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.652415644 seconds)
  done (took 10.46879641 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093442375 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091150183 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068281334 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123485326 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092811843 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068878998 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07333154 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066383186 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087953103 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123938443 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0897084 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097411691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065327211 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067645774 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073962696 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196269697 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08020804 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080117881 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066548985 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078896696 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105385532 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078159001 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077333821 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077140285 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128447759 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168807106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094206045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09580508 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069071101 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078496157 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116298928 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125539085 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066057305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064136174 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119500059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094151646 seconds)
  done (took 4.554544478 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.957239663 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091933263 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101547853 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.626367002 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065589044 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152265759 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241846296 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071812729 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.406446762 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.143828249 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138074368 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145569647 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.11516286 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068725802 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.200778605 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114839141 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.497581662 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066741543 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065699412 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064709766 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068030256 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066399395 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0621135 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068394391 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093363509 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086713878 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.169915726 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920298765 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.241375548 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066535682 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15824581 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085124098 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354397136 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069076553 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082722049 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.409411446 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120994253 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065485887 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165301337 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116156397 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063650822 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116808179 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076593635 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067873282 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068292409 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083720247 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067249424 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070256218 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078619874 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10069945 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066744255 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064042869 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163788553 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064019811 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065265597 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066214232 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148763629 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063753718 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06333862 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.140351208 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062915207 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067932767 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.10050012 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067568627 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088371983 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099622342 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.363037852 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.028320737 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065224544 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.103780061 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076192427 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064621877 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069835067 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064889063 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066906494 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066385236 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073259735 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069350842 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068084387 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108450697 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064809447 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069222116 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066072927 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071140833 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096930231 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064925144 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.483936989 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096787875 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06432258 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075763777 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104438314 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064534577 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070898094 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066653279 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065528859 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064406783 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065483419 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068575209 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062477161 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093617161 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.177564809 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111789141 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.027467541 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066313147 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065376196 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070206473 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068905956 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062626124 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070081461 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065807299 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068812258 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067632246 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063652773 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109923403 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066578927 seconds)
  done (took 21.731929929 seconds)
done (took 38.876990046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25627295 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079424821 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079612594 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07954811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079962623 seconds)
  done (took 1.825494942 seconds)
done (took 3.069734781 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107721889 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062395721 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098880004 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097539601 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063073468 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063115984 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09707059 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062557621 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096738143 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098202229 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099936482 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099681887 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062636821 seconds)
  done (took 2.36072294 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069104283 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079627451 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08169713 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060736634 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070091691 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080548118 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060526011 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081384812 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085312422 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08031679 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080286577 seconds)
  done (took 2.065703034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069294366 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079749056 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083884399 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060155274 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071832853 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080701493 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060313282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079942448 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082916618 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080292829 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080083544 seconds)
  done (took 2.054763894 seconds)
done (took 7.713953087 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066309591 seconds)
  done (took 1.275173218 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.517411377 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.449420469 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065941869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.088095948 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191398671 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096702359 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.219027433 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072270006 seconds)
  done (took 8.095787363 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098968752 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069071985 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06772705 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067917349 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067074866 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068154991 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067692726 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066477571 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067432918 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06791534 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068142638 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067254595 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068821227 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067115942 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066446388 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067865835 seconds)
  done (took 2.42902596 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097267085 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095879584 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071307573 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072667575 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070865243 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069836544 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072307245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071327862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069076927 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070561318 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072201424 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070964332 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070225908 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061831065 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071568635 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073094843 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068683791 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071846022 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072819295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073557666 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072628951 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06191679 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070917345 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071895294 seconds)
  done (took 3.085545848 seconds)
done (took 16.113455297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113916477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074535358 seconds)
  done (took 1.407040816 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069004478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069011365 seconds)
  done (took 1.370467199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075035551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060091169 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081527774 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071195516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060510584 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06016652 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079092242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060466098 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06014555 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060638566 seconds)
  done (took 1.902559363 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063309963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069944042 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067390594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069217593 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066913389 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061513984 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064591405 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06205317 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069587143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060816726 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066008192 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081326593 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06534814 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083139224 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064877455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065870629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0678126 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064531184 seconds)
  done (took 2.454007934 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061083678 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061161505 seconds)
  done (took 1.366598216 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06537328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060917211 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064098885 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064215359 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060917815 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060370006 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061143622 seconds)
  done (took 1.67199751 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409695217 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119715898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33713616 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067579186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07717999 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249077846 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062993822 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067330853 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067167649 seconds)
  done (took 2.738903291 seconds)
done (took 14.16063202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08022655 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082593929 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088553723 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413785821 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090620931 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065545288 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111471941 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.174988278 seconds)
done (took 2.36712875 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219370719 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.306102767 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.784739983 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.178122583 seconds)
  done (took 3.516414621 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321703909 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077562431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077241293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067135257 seconds)
  done (took 1.800483243 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065512273 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069752016 seconds)
  done (took 1.386101385 seconds)
done (took 8.180596243 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06385705 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062601266 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089978997 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061751784 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063053949 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06234677 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062291321 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06256857 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062681323 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061932968 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062113048 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062259086 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062202552 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062017287 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061831478 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062899399 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062579703 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062396848 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062364813 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062261822 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061982844 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061982521 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062478252 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062542215 seconds)
  done (took 2.80392323 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079642425 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06492858 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066633727 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066283213 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066840138 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066192496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066318612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064346536 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065948355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064008665 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065927926 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066930974 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064273867 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06640255 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064040829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066555518 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066164512 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064632136 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064365054 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066340776 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065636199 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06424874 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066507288 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065929203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066271563 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066457859 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064565788 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064561106 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065965318 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066652807 seconds)
  done (took 3.251008831 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063782886 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05926311 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060402218 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06785366 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059126993 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059743757 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060163798 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058791788 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059356722 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060155438 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059411476 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060079801 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060341575 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058964436 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058665929 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059976597 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063069978 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076789375 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059164235 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058486537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06264336 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058795265 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058904767 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058654481 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059867922 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059127937 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058840569 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059604798 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058747068 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059739385 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058793154 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071330407 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064113504 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058861961 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068277334 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063629084 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059098504 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062819505 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059981531 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058312045 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058424107 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058755124 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059228824 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05849194 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068086459 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059092215 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060276111 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059339958 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058837451 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058467867 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058611466 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060914585 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064188254 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060494609 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05905265 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060133455 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058565205 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059688377 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058742179 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058437597 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058917407 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061874197 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060587952 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059431402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076837184 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061029614 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068012907 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060848834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060248614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062012862 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059421781 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074735706 seconds)
  done (took 5.671474215 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085161695 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086513022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06393574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063635052 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059707589 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059392087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067444703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059758024 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064099334 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079144999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059409145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0635884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064032687 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062997284 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059605771 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063655726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067627413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059689017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059287519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06353079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059482146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06700547 seconds)
  done (took 2.71930691 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140909749 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065430931 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102078675 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075699285 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068038941 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075215649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065197721 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064821033 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065286757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065793336 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065989775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064797946 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067961367 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066275639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065835621 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065912963 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06534352 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065895461 seconds)
  done (took 2.584870758 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076934932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065081738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088135563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065260038 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06544321 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06441251 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068823388 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069484698 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06424655 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065005538 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069764647 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064297462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064085607 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064511175 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064034077 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0644289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063970006 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064589815 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069421857 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068826614 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069157887 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069636758 seconds)
  done (took 2.760305367 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075077833 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063851111 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077180254 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065649945 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060239209 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060187775 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064517395 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063716104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064654793 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063262756 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064159531 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059681096 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0653033 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063742236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066101235 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063888855 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063336894 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064052901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063341909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059659107 seconds)
  done (took 2.561398161 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086562071 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062481674 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062568822 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081111174 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062083937 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062617039 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080500293 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062017207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062314002 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083634215 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062046148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062033023 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080807134 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080668935 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062438127 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080838696 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080743464 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080919393 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06268908 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062069514 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083997148 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06198484 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081324503 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062313336 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062704039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062354997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062554219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081353066 seconds)
  done (took 3.251627632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062974616 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062228905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062714734 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062131488 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062789167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062742029 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062512291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062949637 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062186444 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062524287 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062339936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062024662 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06229906 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062055837 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062232211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061850948 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061972171 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062735589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06463455 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062591204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062082406 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062033489 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062285394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062619035 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062288419 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0618896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062231653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062039829 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061746938 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061986642 seconds)
  done (took 3.150242357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072806619 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071286574 seconds)
  done (took 1.422008734 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061973535 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075946621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0592005 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069573467 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068605025 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062565233 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06865408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068070562 seconds)
  done (took 1.808048275 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067263618 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089158617 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061591568 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062003894 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064872229 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118575433 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075479639 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071676715 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076253963 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063169908 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061379236 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073060919 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.06095744 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07296433 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062568358 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069055787 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067915777 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07227156 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072083889 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059357872 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071922711 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061544632 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059505515 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062042374 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060828798 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06692118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075665698 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072661405 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068836399 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058450978 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079372959 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059491158 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060945876 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068922738 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064541679 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059659124 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095316734 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060222052 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06607121 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059521932 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071744995 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079839823 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073413319 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07748998 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061543802 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062094916 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059222985 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062424942 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062912546 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068477989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060055978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06654542 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059292395 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061705836 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070181398 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.05992481 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065777908 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068892728 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072234946 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069522412 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0717427 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074750672 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068163399 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068660798 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060945729 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078160329 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061811823 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071780193 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073894411 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063354488 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073400251 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059229623 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058416644 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059232906 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091937726 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062009929 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061010338 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060144057 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060196942 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.06127204 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069040678 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065655288 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066289167 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063712129 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074992043 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068291334 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059265673 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067130229 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077213982 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06293046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05972106 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075905077 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063138399 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059617365 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076648405 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068724288 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061583325 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060545191 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062603289 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072978126 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060760704 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058332993 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067614122 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06151286 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062863904 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064655117 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066896915 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059241624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069100599 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065404168 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.06133229 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058027532 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063276981 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060648885 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058191056 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068806333 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059546911 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073978715 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065704455 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073443352 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07365933 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069456928 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074745731 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059321741 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057977593 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076430755 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067910878 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060855612 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076223536 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058635287 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068934067 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058666563 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060368074 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067851521 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057937173 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061157078 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059185596 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064336263 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060579008 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060960441 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063711555 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067027517 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070988712 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060190764 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066884576 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059199035 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073426589 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067924179 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062958596 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063195427 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059905371 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069793688 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065177861 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067627835 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058314176 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059058063 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058362056 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068319544 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067744503 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060762104 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066596033 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063020528 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059527604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058675548 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059634628 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062214 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062809309 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059660517 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06569408 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067365288 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075116179 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06639643 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067604462 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059098226 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058733157 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061032043 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059002859 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063368219 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067889187 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073860303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070683066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079338645 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058822137 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067750481 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061294146 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07533616 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071357568 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060896022 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064203539 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057881831 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060755986 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067633554 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069974569 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072743984 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073338825 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063762568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063934599 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058659569 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073523399 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059541193 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067381298 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068132224 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064314264 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059334354 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061557312 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067976463 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063370836 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060106078 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074648635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066206005 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059185717 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073106875 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059667189 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069681221 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05894832 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062870522 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064379874 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061695703 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068063651 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073950134 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058567621 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059731944 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073938592 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061118273 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060825806 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067215479 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074035143 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064046396 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06704109 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069631391 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069533549 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063607283 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068932268 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060552075 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068335151 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063172585 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071306607 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059314127 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076737593 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058789564 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073893825 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060134344 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070188696 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060217699 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068263178 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060689805 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076327056 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061684733 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060412267 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070830859 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058063644 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068085661 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059273597 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06387032 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065537221 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068841168 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061763304 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068967135 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061976761 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067734896 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.308333946 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071124396 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.071907643 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067123536 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062394887 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07061333 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0740515 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070565979 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.064425201 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064670783 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063660666 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072880521 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064588782 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064732484 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071179652 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067343586 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069026116 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064806483 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065515241 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.065283955 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070838911 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071834 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080368098 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070921861 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068825175 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071243663 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061566251 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077436941 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061757031 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069407691 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060835798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069124123 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07083622 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061088466 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081033722 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062913853 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068904261 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07405204 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068668333 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064467744 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07841228 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064645474 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068599246 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068296353 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064787547 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066805494 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062628888 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068700376 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069653346 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071171651 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061701043 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067892393 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069386374 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062754751 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069368182 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062403866 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068404837 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062806187 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059854423 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065381114 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072249257 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065089817 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065740581 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060913219 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059216295 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060838054 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068441785 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064931093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069125105 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07524566 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059658654 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061528412 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060289234 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065897928 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078290273 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070292008 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067629745 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065123518 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059947196 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062780057 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062524056 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060814242 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064429658 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059964288 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060252599 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071280233 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062576108 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064656622 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060941425 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061781727 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069401221 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066001356 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061071327 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066584932 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060208227 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064832758 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059706094 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062459705 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064727569 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060279009 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064000268 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070421368 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076302409 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067119051 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069095477 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061482742 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068403619 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075577378 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069671403 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061855807 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070900238 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059855952 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078717755 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069514072 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06868002 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069632641 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061509806 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076574021 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064602403 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070262444 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075607201 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061731614 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068363719 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05974661 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075776471 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064486194 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059938166 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068262106 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067243874 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065823279 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07189818 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060744252 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06822343 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.208216657 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063987214 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062585299 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062096253 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068690483 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07630327 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061377119 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065442178 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068314029 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068065788 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065236663 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072878207 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069347462 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061675308 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062764717 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064185865 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0616792 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072829749 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061350461 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06470147 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064749046 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061037818 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066961839 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076214692 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069612135 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069692473 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060082684 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059712922 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077407665 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063809483 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064732806 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067902007 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06978076 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072617105 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069545998 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076447155 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060681114 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066060984 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072492845 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061851785 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059998961 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063606665 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062455756 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069353489 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069928361 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067186396 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062479553 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066973607 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072796134 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061748895 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064515792 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065959756 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061338357 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069965475 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068202974 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068079101 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061728432 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059710945 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06371199 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068725427 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067138674 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06887638 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061196257 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068016041 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074024362 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067511759 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064208288 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05995774 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06434739 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068628611 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065642331 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059831104 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064603693 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06342994 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068501927 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069381006 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064625717 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0604524 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076876732 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068734043 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068981659 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062427964 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062382081 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061072843 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060237261 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071360699 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060101149 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061997336 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064557679 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062214879 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077122081 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068060625 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075387787 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061924296 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064434937 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059957275 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069804135 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06440998 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060792909 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070560897 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059382875 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075057951 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071910777 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068616803 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059992427 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064994096 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068194993 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074419819 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069399562 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068838221 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064263724 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069527101 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062389647 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07074967 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060380492 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059254431 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070366123 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068598558 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072798429 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060157157 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070036985 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062541652 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068291561 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068537554 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062487076 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06521215 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062622947 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069511118 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064435046 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069440219 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064775761 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076249964 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061177186 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.215806486 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069255754 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071455713 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073284577 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073059648 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068370568 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061513499 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067104986 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068696324 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06250199 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065740029 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06527364 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082355835 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063578197 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062565733 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074729812 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068346565 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061188749 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068479265 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064993545 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070542326 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061301588 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070361705 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065284877 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061402777 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064603094 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064867324 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059149029 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060015656 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060433955 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069923061 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064678451 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06047261 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078987968 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062217167 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067931471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070795987 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066401464 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061875398 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059298164 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061127005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07203771 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075245664 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063199238 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06824559 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062088108 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069287551 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059347544 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085402708 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067740363 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067885545 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059466157 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060361009 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074078463 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074695352 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064874973 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069463613 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068503503 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063306119 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081443473 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068612653 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061391836 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071426197 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063170574 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059747395 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059174301 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062171929 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071626687 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060314871 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063342909 seconds)
  done (took 41.391170423 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100831188 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062209408 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060898889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060889666 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072945147 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061921066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060634597 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061569728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061468058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063630873 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060495966 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060265667 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07234206 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075154867 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072154802 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064962239 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060345761 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061109495 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060372243 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061377113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071727817 seconds)
  done (took 2.811381258 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068705099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076505474 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0727157 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077629637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068871738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065282601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075995756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06523015 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073489371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070352219 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073308219 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065162058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070700425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070695392 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070426691 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065204438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073125207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068865398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065634695 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072868634 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065706093 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072445117 seconds)
  done (took 2.940747159 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06071554 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061703337 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068343979 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059678108 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059944628 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063748448 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060022355 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063850564 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063797232 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064124863 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068439216 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.06101731 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059725857 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065134193 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059400644 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060916488 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103596346 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061054772 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061135562 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059558133 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065157243 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068901475 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060005445 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060148131 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063913872 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06359208 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059857962 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062839408 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060922431 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064060165 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060885517 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059452686 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068675029 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068095776 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064152106 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064311164 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06222616 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061206564 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060097065 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060035187 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06804288 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061292958 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06022721 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061094838 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068410041 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060115401 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059719886 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068423663 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059855102 seconds)
  done (took 4.502746011 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072434891 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111586299 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066644657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091777973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074474563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067704469 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065740336 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093018922 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061185825 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062447356 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075241218 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075836612 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063759234 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06592924 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067341187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063496772 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064407283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062397051 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066427936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063020953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06684444 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067316071 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07380716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074709745 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064671323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062685211 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063093033 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064974967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074258878 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067352448 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065550719 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065953008 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074745713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067685474 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062930064 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062957111 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075641324 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064125645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063096599 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061393926 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06340488 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068876724 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06762511 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075745444 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063723216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06814756 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063538361 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060921924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074489613 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063580209 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068140408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076434384 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064907858 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063946183 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065001785 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074845535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063690797 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062285644 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063766213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074678415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061475095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064249007 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075194901 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063448035 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067166509 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075289585 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068081777 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064551837 seconds)
  done (took 6.19905864 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069108559 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093784137 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072407729 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072803096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071858532 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071392524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071524106 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071360352 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072050041 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072470995 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071551489 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110864469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06766121 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077047252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071717013 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071504129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071595016 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072604607 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071212609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071423091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071534844 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072184899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071333987 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071997736 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074393644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067049506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071073641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070969377 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071865181 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07116998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074159597 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071408073 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071340913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071860621 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074051168 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07133253 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060923406 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07112644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071659966 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071781749 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066860866 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072077693 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071231672 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066774093 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072106714 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071092672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071866346 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074427819 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079750278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072264509 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071471107 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072063854 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071561773 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071621483 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072833809 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079736259 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072344653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072234356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071700478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072574142 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071775217 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07931242 seconds)
  done (took 5.941012626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073672457 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068658615 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080778172 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062673412 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060055218 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070124185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060327227 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060022432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06828567 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068484168 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070459846 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070649983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076360323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069930286 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070056507 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072420423 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069817921 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070200358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068527981 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070254762 seconds)
  done (took 2.801919304 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071910286 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077631871 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065964334 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070366068 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066700123 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070182792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064561052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066163773 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065912026 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065862799 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071339886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071428063 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066126352 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070482366 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07113558 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069986354 seconds)
  done (took 2.511786111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065263607 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068177396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068132646 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061267926 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064956526 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060545708 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061288427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059402495 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060353552 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07440732 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061399211 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072878585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061195559 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059836322 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061392379 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0669094 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060456527 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061113707 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060902854 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066394794 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067954917 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062285578 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065111605 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061106677 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066476555 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068801208 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062926499 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064815241 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061252714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061454136 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066964806 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067922117 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060703078 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061730705 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059818139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061455834 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061071032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061539925 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066769199 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061020343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059929153 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066229454 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061227957 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062267017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060302353 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061438959 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060066562 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066498023 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0618187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066468047 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061083845 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063374084 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062079269 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068422935 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06391807 seconds)
  done (took 4.900686092 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074280533 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067826125 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059812391 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06022925 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064936124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065304989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065545168 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065369708 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065929843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064580507 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066030676 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064775664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065948053 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065263112 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06619617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065432073 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059604392 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064957018 seconds)
  done (took 2.593770604 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070443775 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06476599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069502891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065237416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065164593 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064494848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060233272 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060293356 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060282259 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064613635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06455692 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063837791 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060140435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064076309 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06506188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064614238 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064392413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060151848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064865754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060331212 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064806106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060053439 seconds)
  done (took 2.815382645 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086023589 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083546305 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123685188 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07839842 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087031866 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070623156 seconds)
  done (took 1.944037454 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089371935 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10219762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064373877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064581734 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075084334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068254084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068488424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068375123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07534005 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07320404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06871622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074993349 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075333776 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070713603 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075489515 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078189022 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068554711 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06850071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065596159 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07744866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068644095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074805878 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06901362 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068507985 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068482502 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070713841 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077856906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073204137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070647085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075068411 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077890482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068741716 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075678648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07339762 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065175453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075062872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06871793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078504783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075493619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07073174 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06492233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07547197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07537851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071197096 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081741837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069165931 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070875819 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06888402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069250915 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080783463 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075672829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071157282 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075617002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078610416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078506348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081236404 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073563101 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071637647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07555685 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073800198 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071199636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075349736 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070987576 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073643382 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078046183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070794588 seconds)
  done (took 6.265084258 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096621961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065962666 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068528903 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073351337 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070916055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06881546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069246927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069208367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069026498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065541667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103573327 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069300339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070985601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071106645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069372713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069261312 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069110317 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070695888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066263995 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080464597 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069276643 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070862845 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070880548 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070683145 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073570999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078453034 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068990874 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068723879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068892922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068716714 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07094833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068516664 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070937688 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065052071 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070885307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069207361 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068427094 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070600794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068243799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074948103 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070555253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078089803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068833469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068419156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073132534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068617106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068258439 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065772117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069200787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065643308 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073304038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073372531 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07347503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070635988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06887941 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068983706 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068551657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068766591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068923169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078068534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071129435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06860844 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080509279 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068998187 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068945306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071080477 seconds)
  done (took 6.145883301 seconds)
done (took 127.002799275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205370518 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182196582 seconds)
  done (took 1.794776218 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071613864 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09539961 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074647302 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134545524 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069227794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103128779 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101938854 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072785987 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068704775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068741 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068952559 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073440895 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135698503 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069111337 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068363414 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071610376 seconds)
  done (took 2.772640379 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102957985 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180737664 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111535502 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068299759 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105267741 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07618094 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068634091 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079258172 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072849871 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072098703 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075638968 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0737571 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071825955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074244668 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071955114 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075454893 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071625444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075905874 seconds)
  done (took 2.960551845 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092737694 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084832768 seconds)
  done (took 1.611472844 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157949927 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10687772 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144819436 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.31896311 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135708987 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.13067502 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134133769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129785882 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112227147 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121985952 seconds)
  done (took 2.919263657 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099673221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175617228 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307370534 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119271847 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07472807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102017105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121979905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080382905 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079401047 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078963248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08100049 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076211418 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097133386 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07554802 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075002877 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075382381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100547138 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074911139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07358035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074726851 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099541761 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06869151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075646247 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074659355 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077461744 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076963747 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070339586 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068452413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076122499 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07371687 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077617288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098298668 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076650876 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101448106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073034627 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102780158 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074331376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073023476 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073842251 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073036752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076656082 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076598729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077746915 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075803546 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070240935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074252433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070212938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068606585 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07919373 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070188706 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078313527 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077685093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101532772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070352383 seconds)
  done (took 6.151577134 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104813495 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103041896 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06764352 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112098222 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104545131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069049771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103329166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098388305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107875919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068955473 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068059016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068372279 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076753845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082932647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112378484 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103944717 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069068407 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067113549 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106387793 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107152053 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06802332 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099414138 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098406548 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105999172 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066701197 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068772729 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066945302 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067913774 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074178968 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075203414 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06787412 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075960266 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084376368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073996753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067553288 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067144975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067783004 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075749569 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076627211 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076524089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07523813 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067192022 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067449359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06807093 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06864004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066621243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074954671 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075966134 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075156471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067726058 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068038181 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067415961 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068147679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075394498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074569266 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077324877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076255355 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067489325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067361682 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069209994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07698175 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077148756 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076689919 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068533491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077696608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067716908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077630911 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080716691 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068328393 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068001717 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06756126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067489904 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068448522 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075104784 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074867202 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068633175 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067613514 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067238626 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077863678 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075071982 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068008754 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074825662 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067262301 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067516097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068469411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068000041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074576604 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07614176 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068753078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067345561 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067889259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068007351 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067115834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074139885 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075783042 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076002379 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075006921 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068276262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076017587 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075416032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069084164 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075179161 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067533421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067846284 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067667226 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074964965 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074335958 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076542131 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068284271 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067204611 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074620973 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077561965 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.200501728 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07567729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078158183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07652975 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067735855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080976954 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068831475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077957493 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066320015 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077711724 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068779795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076366077 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068325596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067482113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06829295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075738058 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068778014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067925853 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068144109 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067921312 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075912025 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079071441 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068165279 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074102427 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073616372 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066982249 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07353794 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066269708 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074576647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068251972 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068388836 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066965339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077976524 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067678519 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068044836 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070170495 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078312965 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067781625 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07693134 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074392743 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067302643 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080920045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075893519 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074000258 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075963854 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068981365 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06776748 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06753525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067706577 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074708019 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075893497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068144857 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067363618 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07447487 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077615667 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067201366 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074789581 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075372273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075174766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068429103 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067910667 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07788816 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077965266 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075180416 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074680283 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076373607 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067961146 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074368711 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075180194 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068029648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080738373 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068412267 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079159382 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075738092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074342965 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076098656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077082522 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077682075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07834295 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07968484 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067837113 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067364891 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075632235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067729202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067521477 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075000587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068512056 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068016284 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080935474 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066045821 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075680669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066011576 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067342496 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068115941 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079938406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068603634 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068183221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075410292 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067976782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074962174 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078683633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075278923 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06747966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067879687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076181855 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076250338 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067699853 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067537599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067852458 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074620124 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074379928 seconds)
  done (took 18.190608147 seconds)
done (took 37.848208492 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205080688 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159308984 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193125419 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110632983 seconds)
  done (took 2.199294081 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093335417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09682128 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077702198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064268078 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082970283 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065123836 seconds)
  done (took 1.952045097 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266991958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188739571 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171106031 seconds)
  done (took 2.090818177 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218566133 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197506103 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46899715 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29078587 seconds)
  done (took 2.744827442 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.132416707 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079565973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062663951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073910347 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110365561 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.140106708 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089109042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112443948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07428116 seconds)
  done (took 2.403523713 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.131450731 seconds)
done (took 13.01379336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.209495281 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.174505383 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097978281 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066948308 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.22639839 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123540111 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07657812 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183137558 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092601975 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.23567402 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072312618 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072378806 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.20925384 seconds)
    (14/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.143616111 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197642179 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077519515 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080659004 seconds)
    (18/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072978229 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075640341 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166143637 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073402817 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09640913 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.234850317 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092101788 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.28039546 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073577362 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072495275 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.147870222 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217666007 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067064437 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175369098 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.180516485 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148401283 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.122960265 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127484704 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076772675 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075985026 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07582586 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.077074206 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092088615 seconds)
    (41/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072862293 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185803746 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18946034 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072467299 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.172388616 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063485475 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.210032761 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141013279 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093256157 seconds)
    (50/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.187735483 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194611574 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086204291 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.209402344 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.149921464 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.197877347 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19961627 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160624392 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.234079172 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162143766 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.065715753 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090211184 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065404038 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075433651 seconds)
    (64/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063144865 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063945391 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073691556 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147507304 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093490815 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103367768 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065278844 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120440642 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063361661 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066869465 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071528438 seconds)
    (75/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.197758495 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071877638 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085623197 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072621824 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.388078488 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15172315 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077586838 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068904737 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07764066 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226791645 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065956648 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064706602 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088696739 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18020382 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.087212366 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066058448 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066288423 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.207696844 seconds)
    (93/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073359843 seconds)
    (94/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077007766 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130165701 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065092783 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150468103 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072129012 seconds)
    (99/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.162583065 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088787471 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.142324012 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.198204493 seconds)
    (103/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065618072 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06977064 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071960184 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118972964 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072640992 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063547208 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159415863 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065975972 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074474608 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072275095 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063556284 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065026549 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073332767 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088680604 seconds)
    (117/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.168280172 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065306246 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076511117 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065546342 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073018517 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064704016 seconds)
    (123/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.143183601 seconds)
    (124/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065702529 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092006779 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065631087 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160532173 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13787494 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073011398 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064130784 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137274579 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074330371 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076282414 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075163046 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065121452 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.141969607 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072284176 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076164476 seconds)
    (139/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068842197 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148553971 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190009926 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130949246 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083430296 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063409771 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06701872 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071977297 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063189872 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072036868 seconds)
    (149/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066488219 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071366156 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071033417 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.171456159 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064048439 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064858779 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065815458 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076966125 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069030929 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115897006 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063550446 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 0.248610142 seconds)
    (161/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064613686 seconds)
    (162/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.064054609 seconds)
    (163/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065373838 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072831854 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066452958 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177563066 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121920936 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063509226 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207715904 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080129528 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148358612 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084814391 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06672989 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064585299 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069759789 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135158287 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065289343 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110951641 seconds)
    (179/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073965388 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169901043 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079251571 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063862424 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071420526 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084754413 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065721988 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064576339 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063120506 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071736332 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 0.130976347 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063017503 seconds)
    (191/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.256465676 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068908016 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16181628 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06583812 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067481716 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0648646 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068364102 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066265492 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064693776 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065610949 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171832114 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147789632 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066377712 seconds)
    (204/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065092974 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072651586 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066585852 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089856485 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072170477 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152404762 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089937675 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072116485 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072250171 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13021921 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089855227 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066081666 seconds)
    (216/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077537744 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07706219 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076983594 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14500231 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073689269 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064432983 seconds)
    (222/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065578575 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065718609 seconds)
    (224/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066803601 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064389469 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072676016 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064287149 seconds)
    (228/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079413884 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065079094 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080246848 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067170957 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123732647 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064357092 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064412283 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067232742 seconds)
    (236/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065925382 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08924827 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065425139 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064199967 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127423135 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15260708 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075745492 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064205038 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06394895 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077440273 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07224713 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120072614 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064541737 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063105482 seconds)
    (250/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.216285454 seconds)
    (251/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065094668 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09006212 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170397273 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066226661 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063843201 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066044435 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156118341 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065256833 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063571758 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067033959 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064395935 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141178813 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065790912 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06540544 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065858155 seconds)
    (266/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064678746 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071316219 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066870393 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172831674 seconds)
    (270/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065714891 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064679805 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066406063 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065535927 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065964679 seconds)
    (275/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065096663 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088885084 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064978269 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144028034 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065012359 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065072542 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065986416 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066089382 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161530942 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072621437 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085745863 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065451989 seconds)
    (287/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077912335 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076727569 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072099686 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065239441 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123930548 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072677816 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063877145 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 0.132776593 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063976487 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063795449 seconds)
    (297/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065141903 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064678814 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063643851 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086413242 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064235596 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089881532 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063868219 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066924271 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084872842 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063243794 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064275429 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091734053 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076510098 seconds)
  done (took 32.91128828 seconds)
done (took 34.400944025 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08380392 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089205558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072501713 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084996044 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08004185 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095995303 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072854109 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077812822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080073456 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078433449 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078099294 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071423292 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074197363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074751188 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072227934 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088433649 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08009687 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073141662 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0734257 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064035226 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073354997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065194485 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063948341 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07142092 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076344184 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071807049 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074035153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0742239 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065456903 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065354075 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069519281 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.0737677 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066545942 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07703087 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073068396 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073643039 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074745137 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077774629 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064325847 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065281226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07501682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065226366 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073377825 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071336541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070104154 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072086919 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073484115 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076854246 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088561001 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069535324 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075715569 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075793874 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076694277 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070360123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06989242 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073026584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071361613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088067784 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074011194 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069555476 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07484606 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073844243 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071664794 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073257831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073173097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076145477 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076861966 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072031539 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075601848 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07200253 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064139986 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0731918 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070715544 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065161237 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075937867 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078098101 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06379486 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069026249 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072878881 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07282837 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064026804 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069050951 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063426655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069833974 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068905611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070886494 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069981392 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071972974 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063602122 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073393101 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072263582 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07293849 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063506127 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076915169 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064201572 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070841606 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064958007 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064737406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063624984 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07031793 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064302185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069512189 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072439855 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063408652 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069300807 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078224046 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064534502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07247372 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063990612 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064191935 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075223732 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075484251 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064638106 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069482643 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064008788 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070090161 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063828127 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064080899 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064645494 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064725804 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06946545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064551348 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069155626 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07007144 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077346237 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064276244 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069623636 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068944732 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064771924 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071402362 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064638728 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064790669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063601144 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07832412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069242068 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06455212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069812943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068986208 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073238043 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063484987 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07362583 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070074122 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068483786 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070409212 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.202371699 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077375574 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069642511 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069504409 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063714393 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064623017 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063355402 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064588223 seconds)
done (took 12.581589536 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066161444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.091964784 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07384898 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080872874 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07804159 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066257156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070007786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083015992 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068357479 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085312622 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088664245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086553428 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092259502 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064388857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065360383 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065901961 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06372127 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072875561 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080193761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08711715 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095580032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065370758 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07413994 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081148659 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076441046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082130349 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066757076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066485356 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067664679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082929834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090145343 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064946875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066002062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079392061 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079336171 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07218758 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066159758 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069310701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066070159 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065427235 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067102641 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079481088 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069745723 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07163833 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066382453 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066303519 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065158295 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068844823 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078887229 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068739593 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072963008 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077334529 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067282695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065409807 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063712969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069727896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065217186 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065923107 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06582507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064864096 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065577262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067295764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06638924 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065596257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069222611 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068193382 seconds)
  done (took 6.320138674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083547394 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093514566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082501487 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082357633 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064988628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06623019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06619377 seconds)
  done (took 2.11552005 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066757824 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078785979 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082156048 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082516918 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074247229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084335228 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066295909 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096533542 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064472313 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07770374 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112003435 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083685297 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06921437 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077653753 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066226149 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073864221 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065651929 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073830751 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074262582 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081762219 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070296894 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093844264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080076389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066120183 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087023568 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070630809 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064929294 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066004183 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067157346 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066793283 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066610005 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105234251 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069887753 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077931588 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067745713 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065453994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071632239 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069449746 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.071485094 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07464122 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07159865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067022975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064171573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066896643 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068054758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069902684 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064043154 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066645693 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066359192 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077655489 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064336312 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069601001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068833136 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070526017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071551993 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070023185 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0742329 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066803253 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07767282 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073674175 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066384752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106079977 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074092603 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071041579 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074373213 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070029998 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.070086973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071285661 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06672866 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067755562 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066755683 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073582563 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065410494 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067595758 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068774215 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06737595 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069549021 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082933199 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082535556 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079121584 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068128894 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066790315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069801727 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082369613 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070697551 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067041771 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069279014 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064416727 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070628261 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067446438 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071861982 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066962108 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074733057 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067758444 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069174676 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074413022 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065422445 seconds)
  done (took 8.624884193 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068390276 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066812079 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06834437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066308985 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067052032 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067600673 seconds)
  done (took 2.007243275 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088707169 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066665729 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080549334 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066844398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102335085 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073660534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073460423 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075009317 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079686804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079323868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073683357 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076355654 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073066005 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068484763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.07353894 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067745403 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072900905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069342625 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078173124 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06845188 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079627283 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067777469 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068278541 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07793913 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069166138 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066902943 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066668306 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078506748 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080231639 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075992982 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067772177 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069012208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0742384 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074920601 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073534527 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074291732 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066350135 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071831972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068626985 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068776343 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075738484 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068376694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068949024 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071610727 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075115713 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074333658 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071719618 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07032613 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072806805 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071702234 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07190062 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06671275 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069088655 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071962401 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074510682 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074838027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071803675 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072965886 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068102977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0742856 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066520729 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068921133 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075347119 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069088171 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070131165 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071707392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074977405 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068379254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068213721 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066249878 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071665479 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066196876 seconds)
  done (took 6.799863066 seconds)
done (took 27.429144316 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.954746496 seconds)
  done (took 2.50415952 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.569631632 seconds)
  done (took 2.160180522 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.671106492 seconds)
  done (took 8.263898875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.284049194 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.320784293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719426307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132846599 seconds)
  done (took 3.078565567 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712023474 seconds)
  done (took 2.309669666 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23052611 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224863028 seconds)
  done (took 2.057196384 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348544921 seconds)
  done (took 1.939006291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113529759 seconds)
  done (took 2.700193539 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226726674 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159350242 seconds)
  done (took 1.983074973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466529224 seconds)
  done (took 2.060410308 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.015724915 seconds)
  done (took 5.611515565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232138898 seconds)
  done (took 1.854324713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233561682 seconds)
  done (took 1.833674143 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720041008 seconds)
  done (took 3.312083208 seconds)
done (took 43.27091047 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081654889 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081887502 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082674416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078178693 seconds)
  done (took 1.894923918 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072334175 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066797745 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069998564 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070261245 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068721867 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069661061 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069138891 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065919744 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068459424 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066434513 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06508367 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066498206 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069417665 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06631894 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068958958 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070553646 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066362446 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066227541 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.06970737 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066376775 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068984115 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066872455 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.0653795 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06712672 seconds)
  done (took 3.226731722 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077673407 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070994258 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074074579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07048784 seconds)
  done (took 1.896088577 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073619086 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080936539 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081882461 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089196659 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.071723071 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07328159 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081479813 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081870853 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064752552 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085986641 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066794011 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065277105 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065479989 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08629055 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081707333 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061649168 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063352265 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074468622 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073520301 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075767278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066709671 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064226378 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074143342 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073887209 seconds)
  done (took 3.380733709 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07673879 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064537407 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079382686 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091228031 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092676235 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065732409 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079174526 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092698985 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126166882 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064461441 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070188906 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064620892 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106025485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064357859 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080643977 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107324718 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11052985 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068708665 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097821113 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064767072 seconds)
  done (took 3.279126402 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075531484 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067956652 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069643992 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064635881 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.0761607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071907184 seconds)
  done (took 2.042608085 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066407367 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065634154 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066390095 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065995578 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071220099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066125911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064736602 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066525334 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067259287 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065971257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065483245 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064780955 seconds)
  done (took 2.407325598 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15920875 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068460646 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067196791 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067522734 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070605938 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065248584 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079653241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068250952 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083955071 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06551279 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066340231 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068075193 seconds)
  done (took 2.54001497 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0940652 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093796505 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131140575 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111469012 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092925168 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090750492 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.145435667 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133829876 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110198494 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06843785 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082997993 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104406742 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100583259 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137071247 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110036539 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072041482 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.100403016 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081453661 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10372342 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111921275 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10957938 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112399334 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089142757 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101820176 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104052333 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112768949 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070393337 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070136459 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135575654 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097593295 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089169 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092104576 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109579396 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.067873791 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085486616 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099592845 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08454295 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102786875 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08694157 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096035426 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077427126 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125605271 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100344981 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106367311 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121249353 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093047533 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105072622 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09982642 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082360111 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.114906655 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095485321 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091447248 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075764559 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.153930472 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091010878 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105193241 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112156154 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082421307 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089022575 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094374374 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122424189 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.244702316 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109602168 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104791148 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.088759863 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09183566 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.134264581 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085590961 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103436743 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129821342 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090192916 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075385216 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09157397 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069833324 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098108825 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101224297 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094693384 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10978168 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079522841 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121282068 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107418605 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071898771 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.112340585 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093416769 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155562593 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09881334 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102669288 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093049173 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.147036132 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085996263 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080279257 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095103975 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134070439 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091215383 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096489466 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126923049 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090401361 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082753525 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075143557 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084693363 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094872624 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109527168 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098489744 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089893399 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082989942 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090062575 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075084567 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080939299 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097557978 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089233098 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11907879 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104561497 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114624962 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078443636 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108117661 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092715312 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134734352 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118519271 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085734389 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110966649 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136437285 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108739581 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085048688 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101888657 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114766408 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106119559 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089343129 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.284465579 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116296684 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08877112 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091134946 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094343378 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.106174816 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15223521 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090007964 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105522442 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13537775 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105630195 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095027856 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083573232 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091650769 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10909803 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14013315 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092709439 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070411436 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096332521 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130404707 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076920403 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096660657 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089268445 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084377556 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081711811 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067663856 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102361068 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136401316 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112737182 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103395597 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09632869 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068648853 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100517702 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097962551 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150443519 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117233312 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100082585 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092818508 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101821278 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080288623 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13248173 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.132262968 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094749991 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092999044 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126815349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091285997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103522962 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111005539 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108573157 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098842196 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141844668 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124662115 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.118111722 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107081753 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128748471 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081588488 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108163875 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073940821 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104911646 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076821112 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.258361178 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.079960448 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.11260368 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081317238 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102534569 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.069177274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075888172 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106544057 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090680941 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086555706 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133227224 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124807833 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081837637 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094885901 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101749027 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099994555 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108136814 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08789282 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094969346 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079187122 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082316579 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092520411 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09754812 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105685474 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078113698 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074806712 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142406671 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105083787 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093374725 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092704596 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.116393857 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084254392 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083253096 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1072609 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138684995 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.11951683 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080894119 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09142919 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069079656 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084067843 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075088834 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112181345 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074474952 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114639589 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068059284 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132448058 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089233055 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103428922 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094437165 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125399651 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086136917 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126564977 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089323292 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111029546 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096617526 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09139029 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107986624 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092485491 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100542178 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105289555 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087693465 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09153198 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125655182 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109347419 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1181157 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111054117 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138764712 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108973955 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074227502 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103897688 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.243221107 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155939256 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10293545 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086546681 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090528617 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107276098 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084969003 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143977197 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087291269 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082671179 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116696584 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093532741 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090287602 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076952482 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10461518 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087380335 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11218265 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097252222 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.093782181 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108020413 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109311244 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086777984 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087709798 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125765804 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129807134 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103812271 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088009215 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089318124 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100876698 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095321617 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112287427 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082370061 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076822478 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067783576 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071638044 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119181124 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106310546 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096393057 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095924072 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103939537 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07156358 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089646898 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093055015 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083849294 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090294731 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114246985 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105422358 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131372217 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.103052228 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094377011 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141137555 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131557652 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091870799 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095892339 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098541768 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076713417 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152130287 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116815783 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078325252 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082832726 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077747334 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087405126 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070758855 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10777682 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107121341 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077445492 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100639567 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095650196 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.118133855 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.243783087 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078356024 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082465805 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075464646 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075418253 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100687465 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078006573 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078393022 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128550305 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105636504 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108345383 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081349403 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076575999 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135696254 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069032877 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135933178 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08462011 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110349691 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081040371 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080228834 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09162568 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105184414 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109300326 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116489311 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071557779 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105406891 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153372908 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077437594 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076077161 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074704825 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113636531 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0890459 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15047359 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092385459 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089741419 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077890766 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126495968 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105032321 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08318672 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126584604 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080082727 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072012191 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083641911 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.109606532 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071836231 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074476399 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113650036 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.625187725 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092668505 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078126379 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085444202 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125842734 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083304069 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111363765 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119557008 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109005705 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.180235995 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0734267 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094465903 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107534585 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099952715 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092872205 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080194245 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.089218969 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089672668 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.080841814 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108547614 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08180876 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088785627 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080479359 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106301376 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.281322025 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088982687 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101895468 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090597039 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089272925 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101250103 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110339194 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105046829 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087969821 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090697239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109171782 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083914873 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080828148 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102452714 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076946438 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078515042 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115680476 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086745358 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091362132 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103749617 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.085032712 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112232059 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12140183 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115540597 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099664241 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07958144 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086702738 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089170149 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073759006 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080258881 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076668385 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070602091 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110403256 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088225009 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082068961 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102268872 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108537685 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101699358 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110108509 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091812271 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097911847 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.1028114 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129880773 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15614895 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10143205 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.120849004 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135100295 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078487884 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077364902 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080779376 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135742022 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080683654 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093060218 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.234275729 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078197578 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081465961 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094564926 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110413016 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08317752 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082192873 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100501322 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114774773 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085709573 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082877144 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095191844 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106427005 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13234801 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089370294 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075242241 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11078514 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102750736 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.278246947 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074037697 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082872536 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.131980167 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089011442 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103478151 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079922407 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122335015 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134454068 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076367094 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092730978 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070963834 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089751584 seconds)
  done (took 51.206711515 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151885806 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.150363629 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.07931384 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094951011 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190623907 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.207728091 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.11706567 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092114797 seconds)
  done (took 2.807114228 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068083274 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083335952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101550919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083301031 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066493138 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067150382 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199670212 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081611909 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065878768 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106140619 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076092599 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068585283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.360619569 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06581568 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066705975 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075298346 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066814114 seconds)
  done (took 3.405727561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.357877024 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613088125 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.320375865 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074757675 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.956009201 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088485643 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131401641 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137334104 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078967755 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536927908 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367922609 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132504108 seconds)
  done (took 18.515638974 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075316981 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07428401 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078286264 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077818908 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07374464 seconds)
  done (took 2.09476172 seconds)
done (took 100.341772401 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081948639 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.169843534 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068029675 seconds)
  done (took 1.990777363 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.083149988 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08108281 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081011899 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079429549 seconds)
  done (took 2.044926169 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074164164 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075503745 seconds)
  done (took 1.866674724 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242931979 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16298706 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092069817 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080998492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080486645 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07940245 seconds)
  done (took 1.966003549 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07194247 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071605584 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072138486 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072413372 seconds)
  done (took 2.002320453 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067761221 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065834046 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068082553 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070741379 seconds)
  done (took 1.990680301 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082321336 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083949083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0770413 seconds)
  done (took 1.959371513 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112896753 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099625649 seconds)
  done (took 1.931899496 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079093256 seconds)
  done (took 1.804451977 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087355799 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094260839 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.151769073 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111722064 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14921559 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132246576 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075645619 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078903875 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073927045 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072227259 seconds)
  done (took 2.745255565 seconds)
done (took 22.597831506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076038128 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364490349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360534218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087335324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730333782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356214625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969321351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090912352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098743451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068347969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084886727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648248846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961096281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321359839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945638812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324008537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649379515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068319686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067901203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068553386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95386243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06784806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068351268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067741857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648236175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372761231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06917416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324569115 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068036573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071255608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356739558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069953371 seconds)
  done (took 16.171367047 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071259309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121661484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073330848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084046261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070042971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069680657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071632696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069306209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108915265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069094858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085675644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06819438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072528074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070587294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089304535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069113679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070670119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069763441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071769843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070675312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087516346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068466999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06975891 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069963312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069776914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082452428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070058682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069003639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0692858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071895742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072581951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070905849 seconds)
  done (took 4.150927143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123072007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127617339 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073779902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108580087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119157325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070176373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151926512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091209737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114755581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068598059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085999087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068392954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10466845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070955957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089770523 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069395384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070755034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069386532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069366334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069974682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088161954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069048072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069827883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069677527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070819388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084200639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070723144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069270947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069327169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071880357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073634417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071016024 seconds)
  done (took 4.42850944 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069586995 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071090096 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07921317 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080279281 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06654821 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068257647 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069766692 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066795762 seconds)
  done (took 2.30749513 seconds)
done (took 28.797352085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077231759 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067795089 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071549444 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086310732 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073121684 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070046075 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06446769 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073502449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070916756 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070724033 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072614443 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066850532 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069497053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068681616 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071948758 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066070277 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073034694 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070311562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071959715 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072434813 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069007084 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071648417 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074213374 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.071706206 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07160804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.071551209 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076413282 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072139512 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067103873 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069155129 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068846383 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078383461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07356866 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072994339 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066380276 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066292577 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070341105 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068640542 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.073223534 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075678073 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068928667 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07521095 seconds)
  done (took 4.704190795 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082082343 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090311714 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082851031 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0820285 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10139952 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08237265 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087073655 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079084847 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07722122 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086862813 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073476031 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079071256 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080095144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072426399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078133498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074739767 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080634535 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073732937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078702532 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078052908 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087369753 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07182574 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079270352 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080242154 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074281203 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081099354 seconds)
  done (took 3.846260506 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070062248 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08431354 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09192608 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155470331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110940643 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081598374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081516136 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096041058 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099427326 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068071395 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072229276 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095693794 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094900424 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0744008 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107520141 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085326401 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079122823 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069720837 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074457164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100463653 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089760438 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085995166 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098424461 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085955853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066324746 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075919777 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073958734 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081626781 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07412941 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078889538 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071606603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070770805 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06849082 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079620278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071375113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065278644 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088679731 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079406853 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081019995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108933767 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076493354 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068702651 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096551424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129299053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06688879 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070541357 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071263418 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079423763 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06822238 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095400893 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085368046 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067024348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085158184 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06841736 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068407679 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082856409 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068669205 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069057961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079504614 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073470705 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086958256 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072227778 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087411326 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066997633 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077854111 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068427273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068492573 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066075474 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101286405 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074046196 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118256174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068390679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065216906 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079188785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077888641 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073520737 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067246614 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086284644 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078353534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070750357 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07857096 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070215277 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070369798 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100801675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066210842 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065507584 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065018072 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069719459 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070128285 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06830329 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080807598 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066337052 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07066316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081896287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067208071 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068335297 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070066027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068693527 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066472444 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078306165 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07105384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068531715 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079038832 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068387321 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070392406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080927959 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076608102 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066791154 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069238803 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069893309 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069058956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071341054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070755359 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068670636 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073114794 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074364154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073215052 seconds)
  done (took 10.933837226 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15916113 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151469822 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06909114 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146648621 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076513851 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072800155 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146457691 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.087520596 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067900697 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068838337 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067601841 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096293825 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091764493 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10473333 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.072581577 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06886494 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090946077 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100555328 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149177709 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144332097 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090792484 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074744315 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069905359 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06963503 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069246931 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076411483 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085864259 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075947568 seconds)
  done (took 4.438024356 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076970105 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093000729 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071603143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.078931715 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086914608 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067795276 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069751374 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069119447 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081394273 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076306488 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067674663 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073386368 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071214895 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070366256 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069026755 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074368778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075369908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067201503 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071651827 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072712787 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078015838 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093784529 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072247938 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067414483 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070216936 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067601986 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076000003 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079553352 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067718396 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.082377971 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065677975 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072504926 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081941251 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068661797 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067555679 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068321907 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067855805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067651471 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06786056 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065820573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065645586 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072693807 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06634107 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075078411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082023885 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075132697 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069483843 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06987257 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070347175 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064746249 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070550584 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070746345 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070465597 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075810193 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071836877 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069803434 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071355969 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094303888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073285574 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067034719 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067070759 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066458244 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072473216 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077208542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084116031 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068934117 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066151937 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067836269 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073253395 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081403212 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067184346 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072923334 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064547288 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067580063 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070017109 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070602056 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068611639 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066226696 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067158913 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067507904 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0676408 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066973043 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06701262 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070469111 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065123192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066627991 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068146046 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068753282 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075504233 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067224814 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070913827 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068436755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066614868 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070244153 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072830943 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070173143 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082027435 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077968869 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068081761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065631636 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081172817 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069470262 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066948662 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074015002 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07119529 seconds)
  done (took 9.33334142 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088721425 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069198299 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086935184 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092006313 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077646889 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072922483 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079070723 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069075238 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083494939 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066994278 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076223959 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066256117 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078312963 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076914547 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069509666 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077609567 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070681411 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.0866481 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081610191 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066776488 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076246591 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079688145 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079984017 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084117229 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084323701 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08487289 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079613852 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070692439 seconds)
  done (took 3.972535025 seconds)
done (took 38.960593978 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.830501212 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.073377937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.827704941 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.072632436 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.88376651 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.119776897 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.864763734 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.81809224 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.987442503 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.853693326 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.083827913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.18586425 seconds)
done (took 67.422194368 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.853500055 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.979953224 seconds)
    (2/2) benchmarking "String"...
    done (took 2.043481196 seconds)
  done (took 5.779403894 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.965362356 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.455207003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.091115587 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.817936292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.826089877 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.331598953 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.61115006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266010111 seconds)
  done (took 31.154043293 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.953299304 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.0380613 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.508179052 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.54098754 seconds)
  done (took 15.842961767 seconds)
done (took 64.440745245 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.871711979 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.832534115 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.8588008 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.851219845 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.824003893 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.822592312 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.827539841 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.821036622 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.827102578 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.857204322 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.819956096 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.838394652 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.821149669 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.869738373 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.312411118 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.867923421 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.83528129 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.828054978 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.830341637 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.873393457 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.827464542 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.828056241 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.279794985 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.975249455 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.434522601 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.969444718 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.212814347 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197237398 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822467589 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.976568529 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.902476397 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.035159685 seconds)
  done (took 205.508605334 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.817608887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.623111609 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.706128567 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.868755627 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.108344078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.996941761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.920501102 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.22638206 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.825891497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.835226908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.953157037 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.823652563 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.974571764 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.773279399 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.858358202 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.907999153 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.969078741 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.994901733 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.868757195 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.971618451 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.844947577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.850242201 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.760185812 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946392523 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.834904929 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.839965502 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.847583202 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.844311029 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.013784034 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.92757325 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.823559343 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.833261058 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.012643365 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.693799341 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.849122237 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.840956334 seconds)
  done (took 170.546072646 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.016007881 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.829727847 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.824272318 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876956925 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.947421658 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.827981712 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.495237484 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.832932973 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.888183458 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828112439 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.824278093 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.823478389 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.824709516 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.837256024 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.919568844 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.82526281 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.840589449 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.825772448 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.852534156 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.82571494 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.826685615 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.825486425 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.825043194 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823815252 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.824648049 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.824804934 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.352173114 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.069790503 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.824856515 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.825088758 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.344702781 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.840796603 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.935729282 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.829846563 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.918250013 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.881165776 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.942478359 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.826295342 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.043820338 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.900995842 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.826118044 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.825057895 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.889485839 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.838049426 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.825124032 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.827073822 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.829576721 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.83326276 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890577635 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.075940692 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.826350593 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.946293424 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.311056651 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.827428418 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.827087485 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.826514648 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404360148 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.829143713 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.827693281 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.828278037 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.832497356 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.834941287 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827535198 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.830804415 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.259706935 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898150861 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.897614488 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.413535322 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.829018216 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.858897808 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.015233304 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.825290843 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826055453 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.826562812 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.828696583 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.827896884 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.828519954 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.953623008 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.83315197 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.943529637 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908612175 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.949304257 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.829820002 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.838538999 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.665534041 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.895570215 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.864816672 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.653949271 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.829396946 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.203583541 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.598374432 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.826083714 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.826770516 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.841569111 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.830595318 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828691921 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.830294553 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911697019 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.827414189 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829451176 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.948113796 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.554650671 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.425120877 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.829586056 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.826914565 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.833889476 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.908408694 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.825558774 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.955910142 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.826139473 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.891383489 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.834521499 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.828264553 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.916319317 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826925101 seconds)
  done (took 406.347775911 seconds)
done (took 786.239259906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.406577748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373768162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.469229087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401920245 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.365476531 seconds)
  done (took 13.780597089 seconds)
done (took 15.546696701 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.842623719 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.833718751 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.886231658 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.914265744 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.843871113 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.851822164 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.913279924 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.848909832 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.884585257 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.882729904 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.910463604 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.911981435 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.851624432 seconds)
  done (took 26.141498762 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.838607035 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974541684 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.052617354 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.873816145 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.83839793 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.045840333 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.895186504 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.96966858 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.985149381 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.051164055 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.055299483 seconds)
  done (took 23.347000651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.837762726 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.974808918 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.055461519 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.873608869 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.838704721 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.053747123 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.904068193 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.966890301 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.978477362 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.057701065 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.06887616 seconds)
  done (took 23.382547598 seconds)
done (took 74.639748873 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.832208692 seconds)
  done (took 3.599996789 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.847600424 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.975650031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.836718257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.833239666 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.835252387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.831576842 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.833956426 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.836424047 seconds)
  done (took 16.596877823 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.833214442 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.833372969 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834907339 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.833896668 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.833842151 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.83386517 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.834008185 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.834709265 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.831733049 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.836789798 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.833941898 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836944199 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.833059724 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.833744332 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834210533 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.83391373 seconds)
  done (took 31.115603221 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.834092366 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.8359891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.833440133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.834119134 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.835155648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.835025877 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.834198109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.835827756 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.833358826 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.832845767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.835134517 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.834815192 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.832978519 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.832722018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.835978304 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.833507351 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.8348946 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.833408054 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.84080395 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.835942698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.835514238 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.835046129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.83361768 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.83444183 seconds)
  done (took 45.804609542 seconds)
done (took 98.895669243 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.537918596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.629611483 seconds)
  done (took 9.936923077 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.835658231 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.836133727 seconds)
  done (took 5.446279917 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.835420731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.836337097 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.834620669 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.835375858 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.835999777 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.835991353 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.834742627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.834307849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.837088374 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.836114609 seconds)
  done (took 20.121991801 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.835789776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.836756028 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.837519844 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.837412986 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.836618894 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.835821248 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.838074628 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.834415041 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.837733206 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.835962717 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.835282374 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.837520448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.835264624 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.838988438 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.834866448 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.836393251 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.83529516 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.837190963 seconds)
  done (took 34.827483509 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.839636326 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.83127269 seconds)
  done (took 5.438636962 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.832595301 seconds)
    (2/7) benchmarking "second"...
    done (took 1.830280051 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834922624 seconds)
    (4/7) benchmarking "year"...
    done (took 1.831788432 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.829345262 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.830667459 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.829276706 seconds)
  done (took 14.582769578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.831412509 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.978914087 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032490071 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.637357285 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.83310574 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832501591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.196565828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.83377999 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.834814329 seconds)
  done (took 20.774336603 seconds)
done (took 112.900850614 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.591966519 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.830358403 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.040431529 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.889260341 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.848348023 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.125901058 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.837519702 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.474410279 seconds)
done (took 42.40745132 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.917315109 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.82832065 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.077091125 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.880413476 seconds)
  done (took 22.550526993 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.825939356 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.232063882 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.856189333 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.723986533 seconds)
  done (took 22.419863955 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.206486 seconds)
    (2/2) benchmarking "read"...
    done (took 2.1730877 seconds)
  done (took 6.145403498 seconds)
done (took 59.801947592 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828819651 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.829239891 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.826756453 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.827424072 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.82496923 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.82803304 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.825996448 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.828205307 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.82794905 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.826544557 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.825387933 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.827226444 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.82701156 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.826994358 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828705822 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831633681 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831307165 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83073053 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.828109182 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829732271 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831816407 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826492955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.827974659 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.827667054 seconds)
  done (took 45.639986834 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.827879043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.828576439 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.829995261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.827599612 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.829298749 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.829751531 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.829163195 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.828638517 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.830576231 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.829774642 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830977158 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.832155308 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.829023918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.83258391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828895735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.830782035 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.830663717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830305118 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833288636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.829284074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832267961 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828453152 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.8293763 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833003542 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.831191389 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829723856 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.83135418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.831049147 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832770411 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.832482859 seconds)
  done (took 56.676246501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.830918041 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.832224013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.831332893 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.831425576 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.827446393 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.831379013 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.831013341 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.828794298 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.832140051 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.832785741 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.834220332 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.83091598 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.832124669 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.831926018 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.83133405 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.829894156 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.830583875 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.831480476 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.831351587 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.830511529 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.829263271 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.830757707 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.833159977 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.831813374 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.832984121 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.831004039 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.833741191 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.83065343 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.83106948 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.83174565 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.831491627 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.832980142 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.830509207 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.831948105 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.830473519 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.836711346 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.831646698 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.831186016 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.834168717 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.830699186 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.832150961 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.835524821 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.832588123 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.832869397 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.832796937 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.833708348 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.833286358 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.831900119 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.830808609 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.832390815 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.833053294 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.832633937 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.833704722 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.832641378 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.828209764 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.834372278 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.836658331 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.832362781 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.834110168 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.832846083 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.834456369 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.832945689 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.833780058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.830615269 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.836969366 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.835424964 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.833975219 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.835345251 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.834771121 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.833505802 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.833737675 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.834607068 seconds)
  done (took 133.697942167 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.831281548 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835132029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832252375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.834474878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833562347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836399375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838846655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834320445 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83388425 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83115191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836306212 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834476193 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832262679 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833830695 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83595374 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832602558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83515554 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833245215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.833292922 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836006433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835315852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836208732 seconds)
  done (took 42.128567013 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835265469 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836284064 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.835612743 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837096337 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834887623 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836526362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.833656563 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834335672 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836080319 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834615865 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833635128 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834425175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837061771 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834918871 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839727352 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838933081 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836292909 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835883277 seconds)
  done (took 34.814297262 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.835714469 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.841529287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.837030173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.837456655 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.833845885 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.837232968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837644481 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.8367539 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.836439267 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.835019037 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839416336 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836565136 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.836964955 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838877608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835134045 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837412311 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.836737902 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838436971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836492904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838141463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835717995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836907167 seconds)
  done (took 42.185824681 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836794549 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837042042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.837450312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.840142244 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837573444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838057734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.838862178 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.836658689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.83875594 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.838507637 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837284663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839820117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.8389895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837916775 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.835470994 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837332162 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840588731 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843324461 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83770011 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840221259 seconds)
  done (took 38.541098877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83948428 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836187361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.837301172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839190275 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838738162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.837361486 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84157569 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.836993384 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838002963 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840179463 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.837774547 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.837172124 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839219802 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841947525 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840191298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84227706 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840362492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838816729 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839589557 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83917392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841539147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839014334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841555204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837003657 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840108226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837046487 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840561745 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839286927 seconds)
  done (took 53.273516217 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840741684 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839350725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.837815344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.839284819 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.840123521 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.840117233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.837650072 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.8406436 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837064075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839557929 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.83702053 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.843631488 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839449772 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.837856639 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840233285 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.841408168 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843522057 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.840286205 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840597797 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839587942 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.838445943 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839052691 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.838297567 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839382459 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839738507 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.841274317 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841804389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840890314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839251605 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839378947 seconds)
  done (took 56.970295437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.861067117 seconds)
    (2/2) benchmarking "in"...
    done (took 1.863575538 seconds)
  done (took 5.497436011 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.83847597 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842510853 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.839057445 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.841450913 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.839745042 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839169178 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.84108298 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839743132 seconds)
  done (took 16.494967021 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.842078571 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.844728912 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.842337324 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.840635903 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.843575117 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852954702 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.842679971 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.843273732 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.844307741 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.843054303 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.845367912 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.844132064 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.847681142 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.847538781 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.845380739 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.842236291 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844689717 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846364734 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.845175091 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.842270824 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845519384 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.844445678 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.843091729 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.841493813 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.84309295 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.846028517 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.853323898 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.843841171 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844760079 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.839905807 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.848255027 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.845685271 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.84359255 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84720582 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.843744575 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.842724349 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.8517502 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.841673367 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.841908183 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845830502 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.846214304 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846735385 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.8458061 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.856343568 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.84645694 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.844651413 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.842609633 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.8422582 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.843215216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.848390722 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.853564903 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84464913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.847313438 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.847796517 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.846379726 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.846916734 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.845145348 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.848856723 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.851342897 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.854091703 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.849782548 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.863214573 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.855154028 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.844156766 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.844519222 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854374185 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.865182546 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.846407805 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.848818339 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.845934395 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855492318 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.849517196 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.843079223 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.844793904 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859042602 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.853435787 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.845323392 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.844799688 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.847616692 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.847823771 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846963133 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.847096696 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846528818 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.845811668 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852730154 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.868938048 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.845033452 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.844917984 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.847936214 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.850161328 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.851775717 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.849442676 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.846252922 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.847218472 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.849485855 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.849884826 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.845417883 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.851388543 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.847405453 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.858108913 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.847580057 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.84746921 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852067243 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.855196805 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.84871748 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.84987753 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850075188 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.849847755 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.855279997 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.849890724 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.848609497 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.849014015 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.848627287 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.852086275 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.846060504 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.85157154 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.856668506 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.855909403 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.84923133 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.854813019 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.850668693 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.852249841 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858534237 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.868994711 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.851176484 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.855155221 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.855810222 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.858991309 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.852788625 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.847300683 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.84954111 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.84805349 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.849361619 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.848487085 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.849781985 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.850055757 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.846080185 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.848207449 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.847732695 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.850120226 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.855339963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.85224679 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.851360274 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.850845555 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.852834124 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.848251981 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.851534043 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.858089127 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.849244037 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.850048181 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.848328681 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.853455716 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.850837815 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.85119545 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.851435059 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.849154769 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.849446772 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.851060007 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853506872 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.847876145 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.853587859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.851523303 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.853770374 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.85087171 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.85271632 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.85075082 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849619937 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.850443001 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855223842 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.852058222 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.856055811 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852992841 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.855853203 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.850872531 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.85151878 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.853627163 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.854484255 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.852169562 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.855269789 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.863343419 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.860168235 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.860095544 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.852951615 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.859313831 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.851705205 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.856726349 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.854068359 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.85038572 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.851857501 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.854237603 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.850874097 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.854751958 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871247343 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.863669148 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.856026756 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.853697053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.857479358 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.856857569 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.860155 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.854350003 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852420702 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.854700619 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.851225638 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.852544894 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.853155866 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.86177498 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.853204484 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852943194 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.856201716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853675061 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.855689823 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.854453739 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.853214372 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.855202743 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.855065903 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.852961659 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.853599404 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85254473 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.863809206 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85789064 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.856414861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85386348 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858837885 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.854252608 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.854433287 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.856860527 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.861411454 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.855859531 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.855572719 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86436669 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.857055805 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.853988993 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.85792158 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.855564026 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.856795618 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.852171893 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.857491111 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.861148365 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.858126489 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.856206172 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.86074139 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.853735054 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.855008487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.853452758 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854006178 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.853236491 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.85740509 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.856813671 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.852955187 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.862942469 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.854274281 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.855010648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.854374829 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.861056919 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.858106708 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.859140126 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.853952002 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860025119 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.86463461 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.863549152 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.860748419 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.860128117 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.85791891 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.856780284 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865340411 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.856120796 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867988476 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.866025327 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.856001136 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.859616907 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.85726982 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.859565719 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.859141304 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.855973617 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.864803687 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.857457264 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.860563324 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.861525385 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.856766895 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.857087428 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866599243 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859686902 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.859748016 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.858334498 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.860905257 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.856104727 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.857597768 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860895389 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.859715265 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.859699785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.860885855 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.858356355 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.855564546 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.860202027 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.867678147 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.859438152 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.858867365 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86726853 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858640579 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.857957175 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.85759879 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.855845808 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.859792846 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.858487907 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.857723918 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.859618415 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.860154382 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.863602075 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.867985548 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.862089308 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.868471583 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.860601573 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.87100052 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.857466505 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.858529537 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858382426 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.86420467 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.864378227 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.859230206 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.857791189 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.8707311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.860288614 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.861782824 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.861282182 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.861569185 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.858185119 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.857156908 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.858284491 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.866147583 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.863154415 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.861336281 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.859632877 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.859230921 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.858337911 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.86549474 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.862350199 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.860416346 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.859222649 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.860600807 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.859519727 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.861202774 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.860115287 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.862091832 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.862144423 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.861853087 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868647621 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.859470081 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.860068272 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86523949 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.859519856 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.869360379 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.858381346 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.860066855 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.862677731 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.859230954 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.858593128 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.859328189 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.858572854 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.860294372 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.86115757 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.85769615 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.873480989 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.870379749 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863780293 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862243412 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.858955294 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.862870787 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868685186 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8840649 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862206198 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.86396497 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.868779985 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.869508967 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.87013884 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863391068 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862109386 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.872419461 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.867066014 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.860189991 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.863459516 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.871633026 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860719866 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.859960174 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.864636721 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.86456775 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.863087376 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.860269818 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.863490955 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865356687 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.860314366 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.874326331 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.860689971 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.865935487 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858624175 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.862542732 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.86221538 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.860721719 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.863906428 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.863334221 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.861433473 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.861086143 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.861839529 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864331333 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.860734508 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861766854 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.867594139 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858479564 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.865012272 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.863109754 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.861398208 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.863883445 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860865622 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.858198066 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.862371839 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.864851383 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.860567791 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863394578 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.872134157 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864246768 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.864058186 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.861310972 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.864922858 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.858480877 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.862270349 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.867564204 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.872495618 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867541877 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.874920267 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.868757542 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.862605924 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.863063392 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867496466 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.868349262 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.862025966 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.861600966 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.859962683 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.864147164 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.860371782 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.862989169 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862106486 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.863337376 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.868411684 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.860489747 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.861962475 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.866441029 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.8643647 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.86568754 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.865103561 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.867917697 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.863385206 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.864890192 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.861308455 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.86505408 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.861774048 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.865300377 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862976205 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.867566519 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.863319931 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.867301755 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.871369767 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.862512896 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865951898 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.866164203 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.866118499 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.86146876 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.864997648 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.864943777 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.863533643 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.870706585 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.875171789 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.864983297 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.862669561 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.864630974 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.865726789 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.864862376 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.865160337 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867287672 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.864699792 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.875636026 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.866240908 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.864704178 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.867808619 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.863377092 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.872577264 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.866114655 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.870166648 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867388429 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.861994017 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.865890365 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867615223 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.876405794 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.868084857 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.869534615 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.876231913 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.872594204 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.864940123 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.866612199 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.869581574 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.864953005 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.866788609 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.867890611 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865058898 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.867040802 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.867074029 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868486212 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.868238735 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.867543171 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.865813526 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.86492314 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.866529063 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87673478 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.876358478 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.866466266 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.866017899 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.869771839 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.871338697 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.877299142 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.864638164 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.867990514 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.868020801 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871250051 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.866737839 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.876988957 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.875431087 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.868908437 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.868050038 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.870893648 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.887186737 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.869274982 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881224456 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900208063 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.873221028 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.86632849 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871207925 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.869177714 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.871890524 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.87526179 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.867270099 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876078517 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.866535119 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.869274777 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.878214176 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.872611161 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.870109667 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.869713826 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.870679401 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.878226544 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.871694546 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.879527233 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.86946316 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.869222433 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.872195423 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.86977818 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.868678751 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.869362894 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.871427173 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.872082322 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.870226816 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.868826552 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.881041679 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.874003642 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.873751568 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88128717 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.881938278 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.868099205 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.869843141 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.872009265 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.88063766 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.877750705 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.871640288 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875816404 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.878524897 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.878496148 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.881811635 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.872977397 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872474352 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.874110488 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.87229473 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870919804 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.885144954 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.88105914 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.870012246 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.869072696 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.879783565 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.871311421 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.878567702 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.877360191 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872581872 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.871887586 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871231288 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.87066186 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.876016791 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.874936863 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.874202253 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.881054188 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.873961176 seconds)
  done (took 1110.213508057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.870546181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87271184 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.869764335 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872294268 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872076357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870618129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873033652 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870420865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.870870821 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871652929 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871361763 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871099037 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.869508286 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.872615881 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870105072 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873932052 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871477584 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872078716 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871150938 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874218267 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870463301 seconds)
  done (took 41.105271291 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.869200187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.872656431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872959167 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.868795294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874525998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.870318564 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.873286528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874351094 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.870218649 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876361098 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.8727668 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874306386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.872730886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.870677834 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871289304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872462165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.873236444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873776933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.873343031 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873953627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872179384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.876405943 seconds)
  done (took 43.008609337 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.873694261 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.872084142 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.873279336 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.877840108 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.872353253 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.875764927 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.872937345 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.874501241 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.873477838 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.876789356 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.879632719 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.879038599 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.872226536 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.87534064 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.873443941 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.872623051 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.021711133 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.873094609 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.872882123 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.873027448 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.870715792 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.88522295 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.879418507 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.875036215 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.870897936 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.874187426 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.873621209 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.875151796 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.874080602 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.875547335 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.878114205 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874162209 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.875677308 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.87802676 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.875075842 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.875394251 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.876929651 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.875415738 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.875199706 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.875312796 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.8831873 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.899478906 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.875183958 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.872786254 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.884852007 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.876993498 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.875620264 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.880050714 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.882323086 seconds)
  done (took 93.885717745 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.877374785 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.873725336 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.877188694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.881014051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.874172899 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.875733492 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.875869753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876244541 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.878582474 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.875370349 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.875265557 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.877477937 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875919693 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.880842272 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.876569896 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877628169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875621164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877776044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.877749708 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876888356 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.875428893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.874433489 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.877703111 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.87610196 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876665778 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879014797 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.874872009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88046327 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.876045246 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.880314379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.875682075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880347312 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.877195935 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.877085591 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.878509739 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.87907463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88096434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.878729212 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.881732353 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.879235513 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.876405344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879771043 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.880099344 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.880291892 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.878897962 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.88011919 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.88190519 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.880110883 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.880506587 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.88036218 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.881154946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.880647081 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877004061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.881883567 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.879029938 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.879631538 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.878240871 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.881552571 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.879396768 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.879092537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.877386467 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.882145726 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.881035806 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.881448432 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.881499325 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.882483652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.88220788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883006189 seconds)
  done (took 129.55381497 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880711164 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.879931479 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879266189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883322259 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881005412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.877667581 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881026573 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.878932463 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.87593585 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.879250484 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881286618 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.879008747 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.880458612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.880726834 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.880010073 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878822203 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880137554 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879936063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880005845 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881728289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.880540731 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.880397339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.880335758 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.879810457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.881332713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.878897304 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.878881029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88165714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880040381 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.881689656 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.880767673 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.882924012 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.880266485 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881544133 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.880820956 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.880248555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.880917433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881180777 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.883130138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.881644069 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.881389881 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879936656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882953598 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.880822421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.882434931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.883649983 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883190635 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.882947003 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.882688837 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.882694284 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.88141942 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.88283494 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882338695 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882142808 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.881782075 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.881200162 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88092142 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88174234 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881356667 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.883212734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881540811 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.881645317 seconds)
  done (took 118.436312626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.882518997 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879811156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.881705136 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.883154146 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.880911684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.883979854 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.882291845 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.883363015 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.881748616 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.882581694 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883836786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.882858768 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88357078 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883314229 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.884889793 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887237634 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.883454003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.882695365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.886112727 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.885501501 seconds)
  done (took 39.477775329 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.883686838 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.882998747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.883428513 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.885107735 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.883526912 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.885134935 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.888271362 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883668493 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883651984 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883845086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.88114382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.882994902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884022075 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.883477658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.883183979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.881928642 seconds)
  done (took 31.954214877 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.884407179 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.886313118 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.88276112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.884138888 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.886654893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.883350795 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.882381945 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.883382197 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.886796449 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.887852998 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886876723 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.883224432 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.884186019 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.885657839 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.88645744 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.886269297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.884444151 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.88652221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.884937469 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.881347465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.885794445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88339785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.88579282 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.882982131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.887147302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.891073699 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.885114341 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885649852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.886707241 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.885612699 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.884480929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.883669476 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.885439362 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.884350285 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.887531234 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.887047388 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.886443679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.890552236 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.888886935 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.88512503 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.889052549 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.89008117 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.889461541 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.886775782 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884796445 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.886087514 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.887233262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.887965871 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.890432165 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.887855018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.885629619 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.888115951 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.888181404 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.885143456 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.88823888 seconds)
  done (took 105.550980127 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.887747007 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.890365194 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.889690658 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.88852496 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.886302942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.886410473 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.889450718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.887699936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887815121 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.888645973 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.889093462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.886493531 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888012468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.891256673 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888804962 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887411029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.889470143 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.891605328 seconds)
  done (took 35.8128072 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.887827966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88584057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.886648664 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.887644254 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.888704892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893024089 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888034232 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.888709068 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889551545 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8913806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891027022 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.889746799 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88868928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.888564893 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892994843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889188031 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.889793623 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889261085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.888202079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88850284 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889166957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.890969088 seconds)
  done (took 43.385603499 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.888015449 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.889665843 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.903200997 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.911213645 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.909418463 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.924997851 seconds)
  done (took 13.246270582 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893674673 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889187182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889626473 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889958435 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89015039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890158606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889432199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889382669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889012654 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891033321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890201105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891624038 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890619189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890085732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890159399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892945833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893721582 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889103123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892880329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892081544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892027883 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891502758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888807334 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890503761 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88976247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894243092 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890455757 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892216616 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892095911 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892905014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889900596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893296316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892901441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890225104 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893070057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891743211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891697896 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889742694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890379186 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890182544 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.891843601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894304921 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895219588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891558127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89242606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893920113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892140877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894938419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895521846 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892893157 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892885621 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894575456 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893109481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893640478 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893803712 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892435397 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892342114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893280906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894017091 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89364195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895822162 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89220923 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893569804 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898119487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894305905 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893253564 seconds)
  done (took 126.704421899 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892274428 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.892864923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892111551 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892325372 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895132972 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893010994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894280388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894367766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892518476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893355631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894779908 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892255131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897283799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893279246 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895356623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892314662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894787083 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894341794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89247536 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89378156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893129342 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894961847 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894442886 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895201525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894026193 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894314713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892649469 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895181085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899525135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895692822 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893400291 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895677012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897476167 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.89544022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894383917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895764164 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894490326 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896151841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895491151 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894850824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894989707 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894270228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895633083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895432017 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898550869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894842476 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896426429 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895680289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897628421 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89444467 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898319737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896424779 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895372352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894981006 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895179804 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896649193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898615827 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895810824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897643038 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894538244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898389587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89560535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896708941 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896126426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8967223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895648158 seconds)
  done (took 126.903922378 seconds)
done (took 2586.929734502 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.922361582 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.93134927 seconds)
  done (took 15.680134935 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.061373346 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.015899699 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.897989812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.933235001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.897835782 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.897930539 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.913219596 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.902349556 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.901269919 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.898421171 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.900856243 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.084938139 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.955539183 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.899441659 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.899838495 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.989770337 seconds)
  done (took 52.892510614 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.903351816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.90597131 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.918058447 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.906217459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.904041137 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.915119517 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.93653103 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.913408707 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.938641952 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.92215848 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.973011842 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.917310104 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.907356586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.954213001 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.922810053 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.922588257 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.004920534 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.983314569 seconds)
  done (took 36.57882505 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.986386379 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.91953323 seconds)
  done (took 10.74470761 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.919087833 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.925565327 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.932769088 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.926100266 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.905081406 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.898432871 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.923719243 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.926116793 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.931397257 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.936316363 seconds)
  done (took 71.083994768 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.906491211 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.905282596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.904510858 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.902215767 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.902771038 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.908121313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.903221161 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.901987192 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.589092358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.94064595 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.917062599 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.912472634 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.904617742 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.903620872 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.899506756 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.92784543 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.014390838 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.900678079 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.900660827 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.909651032 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.90255776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.964421199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.921473139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.910564072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.937437888 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.593228548 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.915412522 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.910520483 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.007582493 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.901548234 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.90317883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.11886202 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.906929524 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.368002983 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.216483986 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.91181363 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.914422685 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.908672339 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.899409309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.023819921 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.903357936 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.907624537 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.79904887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.186983096 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.006784132 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.953470992 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.260624894 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.908716734 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.904837786 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.938947267 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.911473445 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.906130776 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.924428348 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.416230609 seconds)
  done (took 134.852726642 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.902141508 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.252995041 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068529837 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.907669247 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188203468 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107790155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.905059427 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.948219617 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.908190692 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132770573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.154744686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008903134 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.904438355 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.904494689 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.903072858 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.902133403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.047517822 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.973796002 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.905053606 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.903471471 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.927957945 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145486217 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025633973 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907275196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.932176305 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112482442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028129717 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.006188334 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.672598726 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.902353566 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963287308 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.904496053 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.903128628 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.903100628 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.054943051 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997782576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990565462 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.905973655 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.901325203 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.903148704 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.647852071 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100727893 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.001761733 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.029356746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155600108 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108571748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.679419795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.903824558 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.638854945 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.065160648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.134097255 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.136393966 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026788291 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.907022575 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.247171031 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.904905772 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.904831424 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.15196393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137148784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.002141974 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906013645 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.904842014 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.903388157 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.193363573 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.908772411 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999027162 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907440704 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907456008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999799527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.007386395 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138856559 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116458427 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.942469904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.272492926 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.41589391 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.14990236 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.971128591 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159013458 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.915764762 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.904260276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987441712 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.750237251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159339233 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.183107668 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.153071423 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943187379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.627353357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.908184318 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.132457061 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.127550753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.158313964 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153380879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.146571885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.218577162 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.904220379 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.905227739 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.152258591 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026001647 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.911749381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.252652605 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136849623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.466029836 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.931538253 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.215021828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040072528 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.911205135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.545839885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.90805749 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.126553387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.949039045 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.911704385 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907407059 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.125955421 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.885776412 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911084568 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.801269897 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.969227179 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.914953674 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137498939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.910931415 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166302622 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913343704 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138454068 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.389002004 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938636166 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.081952374 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.151108502 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.909504799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151278916 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.150292923 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.026508104 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182353538 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.816377838 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.910729099 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.194113911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.913068699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.914300208 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.075229981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.90946824 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049443372 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.91000914 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.189787142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933333232 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146075645 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912144722 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.167615623 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.941488207 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958120826 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.913640113 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038321057 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.910105755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.743100279 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063498962 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.91341826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.907594835 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.463587792 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.910302024 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055417567 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.132296228 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931372721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.978743858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.573771486 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.910820614 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992523227 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932293676 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.302375949 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.913577875 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.159796968 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.913557476 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.910176549 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.911761415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.196722997 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.149737155 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.915016287 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.91212172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.806006473 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.909926291 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.907839949 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.092590086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.822144937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911794936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112719151 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.915809627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038665773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.919610184 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.977734034 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.242015561 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.909554912 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.91099898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.911278496 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.909254049 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.910454646 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118713651 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.936263374 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.426255811 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.049329084 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177383792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.220406926 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.148944564 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.953174967 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.913769182 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.166059109 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.914615058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.972433674 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.916289368 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932835266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140443889 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.915551755 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119332863 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184939698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.923702078 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958681507 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.915273112 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.912451273 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.914356517 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048914277 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996348253 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.916451185 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.914091868 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02930406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037359142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.12031498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.914098199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.005772492 seconds)
  done (took 912.698237921 seconds)
done (took 1236.362951281 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.912153135 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.917702769 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.919657262 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.914301089 seconds)
  done (took 29.506640678 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.917000171 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.913908914 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.915492539 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.914054096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.917840724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.914414858 seconds)
  done (took 13.33653292 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.041429426 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.915092445 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916563616 seconds)
  done (took 21.721727249 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.998783776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325331047 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.056671091 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.355634142 seconds)
  done (took 10.582208272 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.916231936 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.915847005 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.915979976 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.918114766 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.914039401 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.916707912 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.918154673 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.920408721 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.91521071 seconds)
  done (took 19.096154466 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.941964468 seconds)
done (took 100.032917861 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.249417803 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.138606114 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.981440021 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.016741391 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.095040634 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.952856449 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.960963504 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120601712 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.302452897 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.148085784 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928975337 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143980517 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017831758 seconds)
    (14/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.390248638 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.30151051 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.933385208 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.918109705 seconds)
    (18/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.939367918 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.92611608 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063500174 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.071053727 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.915229561 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.927548601 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.252886525 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.058787191 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.933932922 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.938303409 seconds)
    (28/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035423551 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.236366875 seconds)
    (30/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.919489398 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.747119202 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.08825643 seconds)
    (33/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.023213184 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.874970538 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.048525944 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.437491416 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.128268777 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.0597369 seconds)
    (39/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.049889204 seconds)
    (40/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.930155555 seconds)
    (41/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.068380688 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.103011081 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.919869552 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.107833674 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.119444973 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.007123126 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.209133902 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.402652871 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.593782854 seconds)
    (50/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.206138163 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.918203284 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.348516367 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.24650109 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.136353882 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.13827419 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.239751696 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08555117 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.13309246 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.017715075 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.55493441 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.675743857 seconds)
    (62/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.223220465 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.226680783 seconds)
    (64/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.392167043 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.073401666 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.94166058 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.955176742 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.92351693 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.378457133 seconds)
    (70/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.32975818 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.922294551 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.079651872 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.920640228 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.617168626 seconds)
    (75/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.288651242 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.943078943 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.910747061 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.51820265 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.329150303 seconds)
    (80/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.031870598 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.939957765 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.982695539 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.925897891 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.920412111 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.477856102 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.313223758 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.216359157 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.924725329 seconds)
    (89/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.619068262 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.623610921 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.316225932 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.269139039 seconds)
    (93/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.10497893 seconds)
    (94/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.921193814 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.997735276 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.099574052 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.026687978 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.063794257 seconds)
    (99/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.375286723 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.823563822 seconds)
    (101/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015703851 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320172967 seconds)
    (103/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.163386815 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.936244586 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.937711584 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.052521756 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.943283143 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.069766742 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.115716727 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333889321 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.650042005 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.107325241 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.676683537 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.922853426 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 3.800336219 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.025703934 seconds)
    (117/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.440781296 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.568105486 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.321585273 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.174006867 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.947072264 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.273474247 seconds)
    (123/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.008133057 seconds)
    (124/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.237552726 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.312633339 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.922697843 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.190949981 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.925543016 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.005128603 seconds)
    (130/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.678640431 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.049433943 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.924805994 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.564955672 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.963744965 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.244397427 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.003979037 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.949198681 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.178507335 seconds)
    (139/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.052489902 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.947776704 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.92785655 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.741755302 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.204434673 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.030914711 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.981624645 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.056321513 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.025612412 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.948920056 seconds)
    (149/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.915342449 seconds)
    (150/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.020059259 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.01091993 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.884830559 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310400346 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.92539622 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.171401978 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.926550595 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.102762617 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.053643825 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.939647288 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 6.923701256 seconds)
    (161/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.131564515 seconds)
    (162/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.375391284 seconds)
    (163/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.403709981 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.676059574 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.107160252 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.929477285 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.748042532 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.28230942 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.999201306 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.234372444 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.928531132 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.80329336 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.938240148 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.40444313 seconds)
    (175/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.007988113 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.929162648 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.031734295 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.051916731 seconds)
    (179/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.318174168 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.928674267 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.7377881 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.079658381 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.201417083 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.796863425 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.247900057 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.992205529 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.090029879 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.070226702 seconds)
    (189/309) benchmarking ("sort", Float64, false)...
    done (took 5.624581961 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.036758916 seconds)
    (191/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.963410714 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.320783052 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.028723898 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.17871388 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174431234 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.009368733 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.925568834 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.283116153 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.09565911 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.252203525 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.273703506 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.020511736 seconds)
    (203/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.222506726 seconds)
    (204/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.31878816 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.994327968 seconds)
    (206/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.248465854 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.81326006 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.172801352 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.929205241 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.686257327 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.948815552 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.946259032 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.02920291 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.936848338 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.92544876 seconds)
    (216/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 3.78803198 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.628231723 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.240651025 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.931592391 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.958019817 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.235468133 seconds)
    (222/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.573904783 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.928317993 seconds)
    (224/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.101533227 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.23461068 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.96317059 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.245878158 seconds)
    (228/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.432098566 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.196960354 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74453063 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.349204478 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.814482513 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.200108661 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.143718402 seconds)
    (235/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.989521318 seconds)
    (236/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.097499118 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.273261632 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.088752481 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.119924326 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.060832499 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.929550329 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.93091265 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.121035725 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.200400155 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.401227904 seconds)
    (246/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.943916112 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.927797645 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.258497579 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.035500352 seconds)
    (250/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.70097911 seconds)
    (251/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.061842641 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.530265735 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.935451037 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.682366983 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.042439338 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.93406574 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.211485738 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.676623473 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.02998013 seconds)
    (260/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.026694312 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.400527214 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.271936942 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.932754553 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.096684753 seconds)
    (265/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.404905875 seconds)
    (266/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.091871907 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.946066497 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.616451796 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.053191445 seconds)
    (270/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.204377653 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.276202612 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.24262135 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.937908062 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.507096565 seconds)
    (275/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.637130988 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.525366487 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.343054345 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.930279568 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.276560584 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.932812228 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.316377548 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.928410859 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.684013306 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.967068538 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.044219869 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.092883191 seconds)
    (287/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.820962081 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.803256583 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.952964694 seconds)
    (290/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.935173016 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.110596897 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.961818354 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.337389052 seconds)
    (294/309) benchmarking ("sort", Float32, false)...
    done (took 5.587062814 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.021636272 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.034515753 seconds)
    (297/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.151717492 seconds)
    (298/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.938866758 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.163794633 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.817911792 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.240392163 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.600222777 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.167003791 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.995953544 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.837148981 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.023974126 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244394988 seconds)
    (308/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.963092209 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.484577672 seconds)
  done (took 1030.018814149 seconds)
done (took 1031.932917168 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.970574836 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.953325453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.935316796 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.95678366 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.049413016 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.979291757 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.950461032 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.941098775 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.986180006 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.987250935 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.936108964 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.978564218 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.935355148 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.936352167 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.936235455 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953795167 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.239928478 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.967131177 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.955613635 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.951137844 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.95457288 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.934181081 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.988006259 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.975886658 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.943158659 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.944080884 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.941909766 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.957021147 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.05222403 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.943113093 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.943089148 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.949657273 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.244462689 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.96465738 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.935497166 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.959581503 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.949930516 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.952857718 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.944869022 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.969564951 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.389010662 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.943881222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.939337754 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.941010558 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.938775527 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.947419979 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.937459589 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.94609875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.957993262 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.955633429 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.387526416 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.961541852 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.944182919 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.942448372 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.954583722 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.943358353 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.947124334 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.960175496 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.957959335 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958030579 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238991645 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.979684991 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.944072744 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.958596412 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.951984803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.42200113 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.944274856 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.946923481 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.390196545 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.953569329 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.421814849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.955638389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.944529782 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.956243759 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.974830788 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.24340518 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.969427799 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.940562462 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.951943175 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.940591318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.955098771 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.953776362 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.948429016 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.944578731 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.959026223 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.983557276 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.95443967 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.944331772 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.955295464 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.960018626 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.95391317 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.958138318 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.950220309 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.942179277 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.957328338 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.947079061 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.946041861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.948054139 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.950804705 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.955656772 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.388685988 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.964845051 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.94099082 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.939830024 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.943119287 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.9575388 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.394410918 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.951730063 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.966729095 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.995388287 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.945103859 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.240175943 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.975149326 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.959362474 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.959187093 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.947421098 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.942587187 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.240127262 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.41744995 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.964158781 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.94661186 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.938925805 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.961110884 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.949548568 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.941927461 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.252960069 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.978379167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.960992451 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.064728144 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.956725529 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.979429779 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.940551094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.951441174 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.990191593 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.961640955 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.976712366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.948534078 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.960106271 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.960362603 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.943648012 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.956021525 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.956059429 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.944683659 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.952353754 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.941180301 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.988143902 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.957831649 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.962073379 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.966628649 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.080166623 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.953460631 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.249663921 seconds)
done (took 305.291093485 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.033209408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.951015736 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.070880475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.953368989 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.041232476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.030009484 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.952426383 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.950657183 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.953241983 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.451956889 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.955765485 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.956420261 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.956131353 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.953855461 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.022488104 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.95355658 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.949951839 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.236282661 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.95664514 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.035192166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.95373651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.953716332 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.953788095 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.457607647 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.955585614 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.950241935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.035941113 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.955911158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.243244742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.956532541 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.950609647 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247632871 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.034579669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.970393947 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.960594356 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.96519924 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.045827699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.966740652 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.021444906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.022424153 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.082273911 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.988400015 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.95372173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.955361928 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.957235376 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.962042874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.955977835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.98715907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.958888567 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.960671367 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.237023294 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.962898115 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.963646543 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.954110144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.957267952 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.970731607 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.955922288 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.957062947 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.040677417 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.956580257 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.023463259 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.463231142 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.457373411 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.955831825 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.955864655 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.956294353 seconds)
  done (took 190.379523794 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.022940416 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.026516751 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.024893651 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.965689869 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.007886339 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.025324828 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.960416303 seconds)
  done (took 15.915926556 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.966001446 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958990334 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.006711284 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.008236033 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.954850846 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.157114733 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.968509408 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.961147631 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.985325203 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.960508869 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.615325561 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.00589761 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.965900032 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.958722609 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.970015758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.013907296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.960378371 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.958914004 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.066656632 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.108697318 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.962395708 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.968704144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.989276491 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.968627587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.962146383 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.96079812 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.956185613 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.96673465 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.959630867 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.957412466 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960201363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.010732291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.959640358 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.958569833 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960438165 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.963242235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.959802725 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.961046233 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.961529573 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.957608145 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.96108599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.959406969 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.960889039 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.961900066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.959796678 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.984771399 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.958374466 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.959854446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.962244027 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.962220333 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.984472514 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962551931 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.962422906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.964881295 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.003994334 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.970123422 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.961369081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.959673239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.961672563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.961325946 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960968042 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.109455339 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.015684214 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.964794174 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.009123917 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.114111536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.961792047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.960454872 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.962163684 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.046272877 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.960321884 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.010024971 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.960618308 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.07446057 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.962435227 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.148981378 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.984710398 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.962664449 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.966140317 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.959692965 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.966357781 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.963941514 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.964816182 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.96781048 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.965904748 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.964640088 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.963051645 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.965666062 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.970018529 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.961697554 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.011748994 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.962351337 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.963902869 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.098933062 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.963198894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.073301521 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.990213027 seconds)
  done (took 214.883912972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.969666061 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.968391697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.964045722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.978669268 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.964477527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.962976487 seconds)
  done (took 13.701275548 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.966428465 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.970122123 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.962154345 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.963768626 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.964105593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.961720665 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.962628416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.965442072 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.964665025 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.962240039 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.963409314 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.962246022 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.963870884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.964666596 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.961459161 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.963525895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.966529259 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.96413326 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.963777233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.961325271 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.098813932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.963682561 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.964049077 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.968370067 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.969785193 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.966602346 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.977060317 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.963689477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.965346182 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.974248036 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.969085264 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.965454716 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.967429348 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.973257356 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.969157463 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.9665223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.968247033 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.964699682 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.967220477 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.964736066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.966168932 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.962734015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.965327742 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.964877462 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.966363144 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.971405387 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.974134463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.979233216 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.965606374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.965290886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.964459865 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.965620175 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.964946712 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.965316916 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.968016032 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969345112 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.968779265 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.965156084 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.963906031 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.967525434 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.970047466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.966691887 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.966356641 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.968713474 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.973591677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.966515845 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.967442558 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.967305454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.966533569 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.965576563 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.966620568 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.965749305 seconds)
  done (took 144.616167563 seconds)
done (took 581.399227745 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.68334677 seconds)
  done (took 9.578489743 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.028778691 seconds)
  done (took 8.927199946 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.792881452 seconds)
  done (took 10.690430785 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.998291406 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.99881228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.972812716 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.967105045 seconds)
  done (took 29.844182308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.145773026 seconds)
  done (took 9.040736799 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.975071079 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.965818588 seconds)
  done (took 15.904368442 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.989267549 seconds)
  done (took 8.886456663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.996465162 seconds)
  done (took 8.908663752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.984428615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.004835048 seconds)
  done (took 15.902223351 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.967576939 seconds)
  done (took 8.861699608 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.717526398 seconds)
  done (took 9.699984231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.986177235 seconds)
  done (took 8.899664245 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.037632975 seconds)
  done (took 8.93152904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.003884581 seconds)
  done (took 8.899597948 seconds)
done (took 164.873819613 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.975236971 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.96874652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.966427128 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.972187018 seconds)
  done (took 29.776378001 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.003543344 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.00171919 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.010217378 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.006273478 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.992595429 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.993550244 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.005488686 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.006503046 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.992985904 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.001961467 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.00529115 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.003204196 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.003853046 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.014131837 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.012535766 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.002547563 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.004754031 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.004961622 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.993017425 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.012038628 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.003135596 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.001620523 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.969618705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.970226738 seconds)
  done (took 49.913898526 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.15401205 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.035607422 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.123293895 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.016213649 seconds)
  done (took 10.226543383 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.971658323 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.033561459 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.019891506 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.015890457 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.021755773 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.072925037 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.022508527 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.108063725 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.099610627 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.109413688 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.979469232 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.990261017 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.994715714 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.026906146 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.074933171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.969984099 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.970424919 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.086507494 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.032091494 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.150659278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.970848304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.026818463 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.020963342 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.025254669 seconds)
  done (took 50.692532058 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.97082225 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.980399165 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.978481082 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.973078008 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.973999198 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.973112127 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.981089822 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.973709689 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.99243832 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.971568568 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.973614161 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.972996614 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.979555042 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.973282211 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.97393544 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.987568664 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.988609111 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.97196082 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.975314788 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.97898264 seconds)
  done (took 41.445040944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.970913588 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.818493616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.315945903 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.220460155 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.970965425 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.970941636 seconds)
  done (took 32.165184182 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.982123971 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.977731295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.973547027 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.02781213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.114532745 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.983887042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.975421222 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984187715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021102589 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037724493 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.998542733 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.002621221 seconds)
  done (took 25.97870808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.989002513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.97433702 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.983673002 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.988077973 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.98347236 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.980396649 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.980580628 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.970919946 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.987742766 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.992010889 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.981338924 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.988367729 seconds)
  done (took 45.703583804 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.188135411 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.198339772 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.190368344 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.471976869 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.965447853 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.874484358 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.69189162 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.719423472 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.267171212 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.956237754 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.938652994 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.876362192 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.214168722 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976271851 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233607921 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.901635251 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.97583259 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24476763 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976627346 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.978261034 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268191633 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.029692388 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.186697127 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.023605599 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.18622246 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.363950137 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.225003673 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.232648485 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.310434057 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.03036296 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.063040031 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.02396751 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98520158 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.986377189 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.97750401 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.987926837 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246203687 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981385757 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.98400991 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.967852355 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.902442948 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.302285244 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.08743754 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.394815661 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.106457369 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217670317 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.984553046 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.061706177 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.03919794 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.209176546 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.079676341 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.187879343 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90241248 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.317265235 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.104105411 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.97540562 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.979227952 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.675677496 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.2164135 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.0571694 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.282552653 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.08844165 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.979291617 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.069171819 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.976862412 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.090255694 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.1652683 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981023031 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.974493318 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.982938697 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.07241612 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.189068152 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.977392998 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97927365 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.997451879 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979008009 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.330390242 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.437668243 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.969266615 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.535039381 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.384110918 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.952616205 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.381387766 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.026530446 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.254294486 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.191380847 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.063558092 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.221936085 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.843174178 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.983277554 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.784296316 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.059259785 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042413267 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.977088096 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.053159176 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.277707644 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.093973112 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.979293444 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.905221212 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.991111962 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.180879249 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.380899253 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.040591292 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.979301761 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.981295072 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.982141374 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.979762687 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997766611 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.989926165 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896092947 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.261682104 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.095448478 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.231997053 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.968030687 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.678941289 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.252444384 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.104490006 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.589049507 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.108522385 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973576462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123824394 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.990338257 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.984748931 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.169025799 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.394690356 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.061665544 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.228207494 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.023465646 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.014278591 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984077323 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.062312679 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.208883596 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.981502005 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.232631198 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.225841394 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.631538446 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.031122967 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.054234591 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990395841 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.195005768 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.065077898 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.512426941 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.201082247 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.462576016 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.976807332 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.578138929 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.229861444 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.361771936 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.99843867 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.066518728 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.017888478 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.682609764 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.907901778 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.986576884 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.320715028 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.014141328 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.085002021 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.985501922 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.982828129 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991145377 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.063216014 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057146685 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056971665 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.909342125 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.987106309 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983590739 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.983259827 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.52080185 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.655783837 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.273392714 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.981025974 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05431846 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.983902297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.580505445 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.988353826 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.016476123 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.990072994 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.723907578 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013401779 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.228929413 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.383449429 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.107506163 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.986809017 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.98728147 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.68413955 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990709221 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.683783067 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.266982655 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.988329677 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.426018789 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.043700304 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.065960251 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.99988225 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.984226705 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.988370189 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987332999 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.186206781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.493664902 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.299827841 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.333792592 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.067337887 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.256562212 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.177637268 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.389674181 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.674208854 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.497383873 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.212565228 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.988469722 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986826869 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.564273327 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993034449 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.198370586 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.189671903 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.258070206 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.283796137 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.412483489 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990783117 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.065072768 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.227740831 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.985773442 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.422439331 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.026806123 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.323375138 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.797395204 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.248551063 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.049084916 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.997057134 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.633800044 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116647394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.942866906 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115206471 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.911946049 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.661795159 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281815357 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.262084966 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.968791845 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.320893575 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.282530656 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.240415196 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.616591897 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.986601295 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.044645549 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.068298071 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.9934863 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.431627782 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031618382 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043114242 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989052756 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.985744848 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988847457 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.67998714 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063808155 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117224858 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.717561272 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.409584326 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.89997225 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.259103135 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.044483484 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.443786618 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.031335832 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.200508195 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.993344664 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.454242241 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036464705 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.258259062 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.944122023 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.199222475 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.188217159 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.012334062 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.993665745 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.915092837 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.865586707 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.990914288 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.075695497 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.873409471 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.9899098 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.28105057 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.508534425 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027517404 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99173904 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.320013369 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.378313674 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.167265812 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.996872334 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.204526973 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.119465031 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.907581273 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.473649947 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.572585967 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.688004945 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.002232335 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.192745996 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.321057654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.189458556 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.030711754 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.061718576 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.258899732 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.969765465 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.988000684 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.511411351 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.08413127 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.232133483 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.294490037 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.413565604 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.383151422 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.230617875 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.994868657 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.204663705 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.361940422 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.236614831 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.921469794 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.08104459 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.204481612 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.272953251 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.871203211 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.699947035 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.235399338 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.992308026 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.919171842 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.206946581 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.514807817 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.35953816 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.538144388 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.081876319 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.027582549 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.478090183 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.010877085 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.932265653 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.997008409 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.943120028 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.209461376 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.08242159 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.037092947 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.555533416 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.249582177 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.396595412 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.134690777 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.039560265 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.921695612 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.727193893 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.947150846 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.051719907 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038368631 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068291791 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.997037791 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.199457417 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.435863185 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.053379736 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.537133855 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200941606 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299395872 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268436314 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.298873165 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.956775954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269888739 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.947462307 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.413487705 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088273513 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.074934697 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.997430944 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.999831921 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26943451 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.326645245 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.505156859 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.039431032 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.333060462 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.09570285 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.000538083 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.002275987 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.410474613 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.237600377 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.211437679 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.077408585 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.199170825 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.074853381 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.512698828 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.002957468 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.000973936 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.134425562 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998624831 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.760798863 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.295627596 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.745253619 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.202141472 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.521594169 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.888221271 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.089574662 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.047302221 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.999066682 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.998908105 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.006844466 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.237758486 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.265566831 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.760395398 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.005599403 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.998883317 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.904162963 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.64394187 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.235818469 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.130971093 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.004812227 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.000222433 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.114370062 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.00626021 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.256990276 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.047861153 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.000963712 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.008515299 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.211964024 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.513359269 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.017271046 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.70323791 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.201923318 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.004693861 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483792972 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.439700804 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.148960637 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.048377418 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.100179033 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.252409402 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.531107246 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.099704717 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.004061414 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.22551146 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.0035567 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272149502 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274161972 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.002983008 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.216634435 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.419026138 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298515811 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.010555433 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.89507133 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.008943416 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.259513719 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.049865982 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.001212306 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.011531439 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.998610669 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.640464177 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.479337401 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.159546383 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.275413007 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.739802259 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.759984754 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.004243251 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.005018234 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.702443463 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.722724181 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.216590483 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.287715092 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.951149466 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.206899124 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.707042041 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.002950453 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.276860353 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.929298476 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.005592364 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.418183292 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.277274978 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.940617896 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.008816987 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.558389291 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.001429206 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.087023514 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.005148656 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.130812844 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.261904589 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.335816148 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.107942368 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.644326909 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.710461646 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.944201861 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057559727 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.810823689 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.565928989 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.706728048 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026101074 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.019123574 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.930453363 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.008533844 seconds)
  done (took 1692.98325135 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.027793745 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.019372206 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.028602904 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.077750896 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.115795018 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.10771123 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.067242391 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.028775069 seconds)
  done (took 58.405413424 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.00408237 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.019236185 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.012021165 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.004609998 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.008602013 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.004074346 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.164189548 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.018432255 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.019339942 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.008445764 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.004827126 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.003611975 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.284445003 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.026877368 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.003153003 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.004147996 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.008628662 seconds)
  done (took 76.579031444 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.010549321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.228791948 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.062812238 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.005493152 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.974217711 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.019324617 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.97705887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.013423501 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.01352872 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.249900866 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.306268908 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.033065992 seconds)
  done (took 91.826373002 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.010549052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.006407463 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.007067696 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.005594497 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.005359446 seconds)
  done (took 11.971229908 seconds)
done (took 2219.631797425 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.269498826 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063640752 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109235972 seconds)
  done (took 6.104753293 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.156393613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.198983703 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.312263107 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.073456056 seconds)
  done (took 10.679222772 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.262103053 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.373470027 seconds)
  done (took 6.56840134 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.36984617 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.023434107 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.371972389 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.008890422 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.015749956 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.010896809 seconds)
  done (took 22.971882048 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.008698001 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.008044548 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.007831027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.005530241 seconds)
  done (took 9.96391227 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.005744372 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.741536206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.006661994 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.016138079 seconds)
  done (took 21.703254631 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14794523 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.119891624 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.146192121 seconds)
  done (took 8.347496275 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.226327055 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.224678308 seconds)
  done (took 7.383524777 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149553302 seconds)
  done (took 4.084627562 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.03683484 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.278947026 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.495029901 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.52855615 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.616647355 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.752356377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.330580323 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.246875186 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.459858292 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.435905717 seconds)
  done (took 26.115321151 seconds)
done (took 139.896831277 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.364306165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.034089299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.20720217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.375684388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.238261684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.211056157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.234502758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.364469146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.050590689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.037603603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.373414551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.238248735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.173100946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.025325217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.176014104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023287455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.2375103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.384591483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.059394104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.305136209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.233968724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.027296664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.221784306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.041553823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.239535584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.163500539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.567991343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027926057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.209730993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.583594503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.166371424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.441204027 seconds)
  done (took 172.977679484 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.013910091 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.009467656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.033203935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.01167629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.378043181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013856747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012138376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.01061344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.209034961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.209431299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.013266944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.364844722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.009790743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.012294728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01464904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012375687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.358436357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.012006654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.012088887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.010699908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015141224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.191237072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.012795004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.201192583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.337217282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.01360987 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.011704999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.012699196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.0132255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.013280736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.014719231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.013993641 seconds)
  done (took 212.510789459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.013783035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013963142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.014198884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.013694883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.013795655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014921834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.017879949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.013168437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.744355044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.727175094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.014034701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.012891654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.017484113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013422988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022639889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014999121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.019146494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.015011384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.017283179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.018268166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.018635806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.745454494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.013062449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.768182222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.017837136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.014146657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.013353848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013092246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.016660394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.01670056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.019111146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.015910993 seconds)
  done (took 225.36633289 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.25772281 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.017550506 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.018109909 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.030277241 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.016374448 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.016762331 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.015636294 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.287055352 seconds)
  done (took 20.604057481 seconds)
done (took 633.41237084 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.379828429 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.742047098 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.157074307 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.042049807 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.269439262 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.079254765 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.032794321 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.097939988 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.862872685 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.105711285 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.456316418 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.041232782 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.809851724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.062444677 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.157785558 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.090266469 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.38026351 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.702229007 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.17522388 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.663279484 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.191627979 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.958421597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.112949534 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.987493516 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.47200934 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.995784571 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.049436198 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387651377 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.038774055 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.192891217 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.643460304 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.299345631 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.048783152 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.03604817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.09232856 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.06752966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.227797989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.04732695 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.150980683 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.75046237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.681147201 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.739761479 seconds)
  done (took 106.424128325 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.025446467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.022425481 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.02418881 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.023552924 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.034733388 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.022938366 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.022872649 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.024107613 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.024803102 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.027251428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.022350774 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.032605861 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.023605709 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.034579575 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.025039341 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.021394817 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.023579509 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.030826014 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.024964206 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.022853692 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.024688731 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.024836542 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.01927793 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.027875421 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.026343528 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.025081455 seconds)
  done (took 54.616829444 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.021288526 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.212196182 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.257322351 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038923477 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.02088071 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.020994053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.050155946 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.029818405 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.023830624 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.022189733 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.140635391 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.030487903 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033649939 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.258280262 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.035153763 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.022492498 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.023375795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.021613263 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.221161585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.033871164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.051266093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.027817848 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.051183842 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.036074649 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.023659579 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.023074479 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.024644927 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.487235181 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.031414776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.141994038 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.06563679 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.057035716 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.362582315 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.270533895 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.074416392 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.027950508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.024214954 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.146745072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.028290515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.023221299 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.051820933 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.030459295 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.264737876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.558154109 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.034634053 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.023497101 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.487497039 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.153433353 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.063099745 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.039527416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.273068687 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.037593174 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.023645376 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.022970798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.059834647 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036468766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.022830062 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.308495287 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.037761511 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.050084576 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.030155298 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.023734648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.228328907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.032785265 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.214233117 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.031951738 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.029549895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.025848582 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.267721396 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.039586846 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.570521384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.04006274 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.027695581 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.142033187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.223685659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.515860301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.036058432 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.228793223 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.384161375 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.058744217 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.035161309 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.477245824 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.063865836 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.033789066 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.026483358 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.021169007 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.025471184 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.074467707 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.052497814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.481214461 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.566634246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.326315936 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.059740015 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.038068805 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.027336211 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.312272829 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.040090547 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.025900793 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.257445019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.582840568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.040459517 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.032420971 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.551331273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.042156293 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.054289642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.039253391 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.279453272 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.043612799 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.074325845 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.025328303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.036195235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.027472241 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.055328081 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.030593568 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.028483123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.543476171 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.167408254 seconds)
  done (took 250.781564534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.026822385 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.029283664 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.024504587 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.027374979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.026885805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.02775322 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.026108793 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.0256669 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.028907397 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.02497154 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.027171897 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.026645325 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.026633562 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.028487691 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.524986509 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.030284056 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.522313973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.02892821 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.026741348 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.029130241 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.63384062 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.033024066 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.028875401 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.03032609 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.028759111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.030628026 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.034766101 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.078335534 seconds)
  done (took 172.394912381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.032984153 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.109038794 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.04960913 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.079116112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.049459241 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.031932101 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.206849031 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.054868061 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.037781328 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.030173295 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.033189121 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.063803484 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.039683722 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.128598424 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.06646613 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.137569017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.137314618 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.045113387 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.033237391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.033324495 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.08332033 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.0531232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.062779038 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.093828377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.048728631 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.086177711 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.050576968 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.032252388 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.034364376 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.168273725 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.056356699 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.065205413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.064258811 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.053688137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.146699912 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.151233171 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.136958793 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.138480874 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.041086787 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.040569672 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.03407142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.037962475 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089921558 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.052848367 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.033041955 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148542314 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.056902685 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.035154609 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.036273206 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.038404144 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.047936723 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.053402758 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.066961649 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.162415683 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.085503523 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.060824724 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.1270173 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.156119993 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.03432628 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.1306634 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.046630335 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.147110865 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.060446309 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.035185906 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.038310542 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.037549958 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.086712634 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.144086469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.13789149 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.04464185 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.128054821 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.091690227 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.052878859 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.036057628 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.034442821 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.091318311 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.14967409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.088087829 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.098368589 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.077443757 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.043013417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.0379936 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.041452007 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.064741103 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.044137189 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.150424333 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.154569055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.045917778 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.034457281 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.035563474 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.037856602 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.057829302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.099508859 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.08081671 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140133506 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.079312517 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.07610339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.052140659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.048504635 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.040178344 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073754696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.046046823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.047645697 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311653105 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.071304333 seconds)
  done (took 220.002546526 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.403929291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.086383688 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.108007673 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.314726035 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.392538469 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.909501028 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.074717593 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.086143277 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.105648336 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.213001735 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.153623769 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.130213126 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.078073138 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.05532659 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.081832759 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.111735103 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.114481567 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.385909375 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.278527019 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.549975785 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.075230947 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364780399 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.408059641 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.46293354 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.134245813 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.460757972 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.671481806 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.182205992 seconds)
  done (took 67.358895129 seconds)
done (took 873.525325431 seconds)
SAVING RESULT...
DONE!
