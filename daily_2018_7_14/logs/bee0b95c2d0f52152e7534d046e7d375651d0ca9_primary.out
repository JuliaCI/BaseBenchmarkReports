cset: moving following pidspec: 26688
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.558210383 seconds)
loading group "string"... done (took 0.517307416 seconds)
loading group "linalg"... done (took 8.557951413 seconds)
loading group "parallel"... done (took 0.179369961 seconds)
loading group "find"... done (took 1.401309579 seconds)
loading group "tuple"... done (took 2.056630681 seconds)
loading group "dates"... done (took 1.354295478 seconds)
loading group "micro"... done (took 0.207044993 seconds)
loading group "io"... done (took 0.596728381 seconds)
loading group "scalar"... done (took 41.628946225 seconds)
loading group "sparse"... done (took 12.919676561 seconds)
loading group "broadcast"... done (took 1.04357136 seconds)
loading group "union"... done (took 14.250660984 seconds)
loading group "simd"... done (took 4.908070375 seconds)
loading group "random"... done (took 9.852160006 seconds)
loading group "problem"... done (took 2.108358949 seconds)
loading group "array"... done (took 24.301187784 seconds)
loading group "misc"... done (took 1.087655937 seconds)
loading group "sort"... done (took 3.644809406 seconds)
loading group "collection"... done (took 21.14678289 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.593393526 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135654824 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147905053 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175369796 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.2071365 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138745196 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155717634 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.461712041 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025525581 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.233407913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.127720406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.540477398 seconds)
done (took 5.682506503 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241200761 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.075275772 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128331365 seconds)
  done (took 0.894446361 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075769193 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174131394 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092173758 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10887488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109546402 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111301261 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09295881 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10946907 seconds)
  done (took 1.487760505 seconds)
done (took 3.396016286 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.814144774 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.822419462 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.542018495 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.125555517 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.156064929 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129400467 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311198443 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161839682 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104520483 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.1200137 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176871998 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.407769018 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.42552251 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.003704421 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095878352 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129468979 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079173931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.738642774 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081705374 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129378434 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501775224 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114388417 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121219166 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124318096 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206298012 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131201216 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.182297145 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102223092 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682704867 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100852994 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183873449 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098270892 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162918234 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227659089 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077591168 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107307324 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676453916 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188215711 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110679911 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095053116 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.712102081 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077727629 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192619134 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108728181 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109850099 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197965657 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116946186 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076157789 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100127862 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087006088 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170503138 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464686766 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106618164 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.143197842 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108586503 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.72562282 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093756019 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157077127 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125260975 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108084966 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09639424 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116156094 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157108125 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122533463 seconds)
  done (took 19.956390083 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116520012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139886422 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095639177 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140328313 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137871093 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096152578 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0826837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094234884 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108012065 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180397066 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135151544 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142956896 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09077308 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079233182 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119692705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248399147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102640068 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119123324 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080033575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106205347 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137539299 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094159105 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107699692 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092779352 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168495461 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.218623901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108898293 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123014978 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092978271 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09824692 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141813231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15933355 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074754512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093388328 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178546972 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119786819 seconds)
  done (took 5.132441101 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.129559123 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202178981 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102399789 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.207471847 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175169649 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147928892 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164921352 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117406176 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264745072 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.17189024 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163155123 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127167849 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11519789 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078900773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096125961 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07790856 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.77224298 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188177721 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146806538 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122147993 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103585155 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081883957 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.701566736 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100720838 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0820741 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103747478 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072059097 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173904383 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104613916 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.354358572 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.083039895 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116345165 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087320529 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129978133 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126226226 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132257653 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084356756 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096335436 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.198988844 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10475034 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077322217 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119525641 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116619998 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132798383 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101179715 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109412717 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231247569 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099444292 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116870209 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.057870392 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199116869 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14430979 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079398859 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.359008891 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09729241 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101310149 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07962016 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.29696296 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131277441 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08119108 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095801229 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079841089 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10316215 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080929607 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.354723957 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10638044 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.968475187 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081016885 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157108542 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100946566 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104920456 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086302033 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103720011 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101454935 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098358587 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080799762 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097839576 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078980512 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101556579 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099370624 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102108685 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096341256 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147171481 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082582563 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117934144 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118125923 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125561839 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083486845 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096109943 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113061168 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127515232 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097780413 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085291387 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14366875 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085620454 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117359447 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102540444 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143297354 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07900934 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191751081 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079778197 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124220099 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09921435 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114381857 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116097277 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096484245 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081879109 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095786258 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080077735 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160453494 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079533062 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079216093 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100945097 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080004755 seconds)
  done (took 23.917793115 seconds)
done (took 49.693206069 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.421429597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110315202 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109974131 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108950234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107478034 seconds)
  done (took 1.623726082 seconds)
done (took 2.36630145 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320264929 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195552545 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099800485 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189098218 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086269939 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195681268 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162455592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098549467 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206035455 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08082993 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18467915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081302753 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104416811 seconds)
  done (took 2.772298594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09109262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117620467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081501216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108524976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075601708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0909739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109221174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136884921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089236169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084933799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093668924 seconds)
  done (took 1.815701795 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090281465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116729068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080956751 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090059461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092860488 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090382103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108182379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101340763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109196929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085001773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093542478 seconds)
  done (took 1.79995477 seconds)
done (took 7.119502306 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.12871527 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.666090733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.101980529 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.194366406 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334956507 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.219841403 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.637589419 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114779133 seconds)
  done (took 16.315430688 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108284351 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111988116 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080629405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097202736 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08041943 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098258077 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078882581 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096518723 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077608825 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093527664 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077973415 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096429743 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078071083 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093449998 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081270947 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095812348 seconds)
  done (took 2.25255539 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113459497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113430351 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10200951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087538605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09929036 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098591996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.084668136 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100261221 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081674183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097780203 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087663054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102737249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085691525 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096277246 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101218419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088719893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097038054 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084636247 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102210688 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085192276 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103376275 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098059564 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086083311 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10189402 seconds)
  done (took 3.144797171 seconds)
done (took 22.453238373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164798308 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082277188 seconds)
  done (took 0.992239892 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100019929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117338333 seconds)
  done (took 0.971990898 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105397777 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096510609 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134189865 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113043459 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079702458 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079191477 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130673445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096600297 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0791761 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096736397 seconds)
  done (took 1.765978415 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084063362 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099256057 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088265046 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117209215 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108714606 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081285843 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101249026 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083441313 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101987451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078318457 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104472068 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100555326 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102903161 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.23552256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083446665 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103224234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106434687 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083907273 seconds)
  done (took 2.616201819 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079801581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080259266 seconds)
  done (took 0.915061138 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082929732 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093961701 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081595242 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097933916 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078014443 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093822971 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07806374 seconds)
  done (took 1.360872746 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472225881 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.250443734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305148349 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112727542 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131706172 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.34934317 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132650197 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.093157734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110561516 seconds)
  done (took 2.768926325 seconds)
done (took 12.141499279 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089217168 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131368832 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.478707147 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114996187 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076384891 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156563325 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.263535701 seconds)
done (took 2.065321784 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340533882 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121585829 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086975332 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078675697 seconds)
  done (took 1.378844004 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078114551 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084013662 seconds)
  done (took 0.91961359 seconds)
done (took 3.057221965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077760774 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127431163 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076662716 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093540197 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076989591 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.074657915 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095006017 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076852093 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093302451 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075977362 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093195621 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.077512498 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.077121127 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095597751 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076557075 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093558807 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078728586 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093536852 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076195216 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075313222 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095704455 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076130959 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094012447 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076406732 seconds)
  done (took 2.838797599 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103112513 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09597727 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084506827 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103299105 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083652356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101651744 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101586612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079957682 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102282086 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081831036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100667112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082878694 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099751079 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084188752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099221712 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083292914 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102794761 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078993984 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09910416 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084031133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101997127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079554065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101047815 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103647741 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084365066 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100845339 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081744253 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097916888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085293316 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101315053 seconds)
  done (took 3.551384891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08620628 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074056092 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094270308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086844152 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092791291 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078680774 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092960588 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079033412 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099071847 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077785694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08244462 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095612412 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079165336 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098719244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08115284 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101810245 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094652229 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096169606 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077311805 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097214029 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080192627 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095421211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078448441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075003386 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093599645 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074337755 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095279232 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075951417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095372841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076926543 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082179105 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100814279 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076154585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107118192 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083133606 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093625221 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084892158 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095025399 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08111677 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094249158 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076164286 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094566801 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080166831 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08806871 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097724703 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077652357 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098320961 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081642409 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09886758 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08506326 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094398495 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08087732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083494746 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09950586 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082848777 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095384525 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077887756 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095129292 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082025844 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094804568 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077730656 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07693279 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102131055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078406868 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118925311 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105953523 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079738425 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082870358 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099736874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084657047 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100976823 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096078367 seconds)
  done (took 7.136937486 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080407565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103649421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078135923 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096128117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076292278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077550792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102764286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077234122 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097662795 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096466221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095977615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079077054 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098083764 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08183253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09708201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079951484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107049498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075373136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096451746 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081706563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09653204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085128328 seconds)
  done (took 2.73017249 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22132419 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104387199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139770946 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094446061 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112814625 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111921192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082836546 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102848592 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103226047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089241965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106979802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08527001 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11605667 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105368317 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088217044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107901598 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084851611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10732906 seconds)
  done (took 2.736704866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09198151 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096827451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103538274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098414356 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079965023 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100540245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086471251 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114986668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082893971 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099223701 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11025732 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08341182 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104383941 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080810052 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100604698 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081913767 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100886809 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081954359 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109394907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087207097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105721796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091774089 seconds)
  done (took 2.864373888 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096625942 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098383665 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099724921 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10181083 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078191048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101215078 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089127154 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098753756 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090151207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101954703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081002627 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100684232 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088390257 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099981896 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108089293 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081781038 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100734418 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082006196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082977388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098026636 seconds)
  done (took 2.654112374 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120824403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112516616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094359338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124796108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111758252 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093963069 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123265602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093598207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110789116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12500429 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093519949 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111654118 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121756381 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.100446082 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111581857 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105279598 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12280759 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122589455 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093983794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11158028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124671343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09328426 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123065774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110920089 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093749561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110293302 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095101597 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120251937 seconds)
  done (took 3.854042783 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078885426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078927681 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096863433 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078837448 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097540864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078666767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078273381 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097265667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081795282 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096761851 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080825984 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099326962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08085427 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080712216 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100638375 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08105065 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099632776 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078511575 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09661428 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078641085 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08062984 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099826831 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080279261 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09744182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078719731 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098948664 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078805241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07801075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100120283 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078165173 seconds)
  done (took 3.38787168 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086665455 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108172291 seconds)
  done (took 0.973786081 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076590598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113794453 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075788248 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099981522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084893293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097972901 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088794737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103214796 seconds)
  done (took 1.519212702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103648322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11728558 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085226013 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109803644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098771317 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117458253 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16244044 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085688644 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105374479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080075277 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118106252 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081761976 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109994755 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085530568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108326591 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115089715 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082266162 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09276501 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107910095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083143989 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107324256 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11480732 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08996849 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107248572 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084350632 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113179787 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09609476 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111399911 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087724802 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112299527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087156158 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093454309 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085831082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105575704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081609013 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11968093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118754585 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08463885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106782232 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085844306 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107120593 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078551613 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108473161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086754979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111219445 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086199735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105435577 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078410815 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098105083 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083868762 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096619068 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082752974 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091910302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089615564 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107249433 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097864143 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100321427 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084644159 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102918694 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082609534 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105494679 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083705169 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108837594 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083562918 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107976886 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088701159 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106792612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07855436 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093267015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081291997 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110366899 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105042255 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109702872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104128069 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087554386 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098923444 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085749662 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104672109 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087652071 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109948715 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084644227 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106655945 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090015913 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102008173 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084555965 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105660834 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082278584 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100939164 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080266824 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118899774 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082519703 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099008693 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080203198 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109378487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084912082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101492179 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080846503 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10817947 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074085802 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106191746 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086282785 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10756369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092570697 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106102206 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085931747 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107687391 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091799607 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10479069 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084376291 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099082814 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087901441 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103876338 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091576133 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095757655 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089055586 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106100385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0886704 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112495967 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08285336 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105586371 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090982528 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110565053 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083329451 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095857287 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084202354 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105535493 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092979446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114746017 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10499588 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081738658 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08177048 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10993819 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088005248 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.1089339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087110548 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104114249 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075115635 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101899794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086736771 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111263238 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08571783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105375466 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109655016 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087089858 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101820772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089909058 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101713569 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08033685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109347389 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084019171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097905697 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090238104 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102719954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081804439 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102896298 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091111039 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10407756 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086227004 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102888279 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085974283 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10816957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081411424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106988892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085141968 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113955121 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086635674 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101312963 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079546522 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10868367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083946828 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106615425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083793294 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105760843 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086334362 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081911134 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101642557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0831414 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114816621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112631384 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095167541 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107165366 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090990085 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103775836 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087443566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103679366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086339985 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105247573 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089723471 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106343579 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086410688 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102527852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076318002 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105523479 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090541251 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099470929 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081654174 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09940125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084694627 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109892428 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085305637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10545581 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082865663 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105233075 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090624095 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103057328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083911456 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098858809 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084760767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10814921 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086439492 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105252487 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092738176 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104150757 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079279279 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108681564 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08216698 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107808683 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079146473 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.1018977 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082043487 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105990787 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083658886 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083561554 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094108381 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090305078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11086881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105047254 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081514359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085720269 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114002582 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102867577 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091290211 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104208883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087780959 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117723525 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081090953 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105950694 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093448836 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106237995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074615474 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108621844 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083217139 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099026936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083936914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101821138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085724273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106986861 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086788256 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093916935 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084689325 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101739958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081095864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079850749 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111508883 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10478461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085549848 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113831459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087729863 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107491787 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087722915 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10815972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090637089 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110838217 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089739276 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110736741 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086646456 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103570411 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089119532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103357389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08585155 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106579089 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089898596 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108946854 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090863922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.107699853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093796413 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108685488 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0906796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125847622 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10441691 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082287115 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107542826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090967279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108634199 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086763271 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102042548 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094535792 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108955585 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094941084 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10824093 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080422725 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09034847 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107270453 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089688876 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110214001 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090046767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107387508 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089084601 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110342293 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118134968 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086200292 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116389929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092054153 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111776964 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090207124 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110575774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087540693 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104978951 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089555835 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111364286 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090400256 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109960081 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091795607 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109257848 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086583442 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102602967 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086982645 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106357465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088100838 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094720009 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082134324 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100035492 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087110087 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109099195 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087231985 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103400389 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083892451 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106681728 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084260599 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078228693 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112689199 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089089362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109318464 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113629587 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081413062 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10465306 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09635568 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094233703 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083479265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081821474 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102300861 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110797905 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087292712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111547242 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08681638 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101055885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078787877 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088350956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105732223 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075861491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103395682 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088557626 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10292616 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084732761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10930344 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089385534 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107980973 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089650902 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10588891 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085643821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110734781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081690486 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106188418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08510259 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110177183 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.092036663 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105773612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082681049 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.109653403 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089886592 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109372048 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087474861 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105587008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092917501 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108191494 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088446894 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11407672 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076901072 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106003136 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085928193 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104904843 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081989345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106646206 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087263963 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107634228 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090803958 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104764174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088564539 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104835006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082480432 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104427567 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086856065 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10477504 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08161876 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087317433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112161863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082729104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105507239 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105490958 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084457889 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106489228 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087489804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104266653 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090155284 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105486221 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087133449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109010769 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086066921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106347993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088031509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103876473 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091184272 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101159869 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093999154 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109553101 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09159889 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108808011 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08611464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109590701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089296034 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108187452 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092828912 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109482272 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081751407 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101191647 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083252838 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085296807 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111638248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110916991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087286434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106237728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080413597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098624593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089166227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101789059 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085877597 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109658711 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091219562 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108890872 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084153837 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10456824 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091657957 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110700515 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088911797 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10139574 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088618974 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107066505 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086732757 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104014203 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085457749 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107255323 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087760949 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104162747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082755295 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115719397 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091385399 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107067643 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085586702 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107875461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085905178 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100019059 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088584163 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105752705 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089514068 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105843445 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086039318 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1154363 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081328219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108205424 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091855132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104974179 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091667605 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081672143 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086976248 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108708412 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088088001 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099707255 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0820506 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102917187 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086675934 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102308696 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080660332 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117143886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091687105 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108393297 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085032003 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106272306 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081077126 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.1009042 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082906323 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111105928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086228999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116673818 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08276435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104605206 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081666231 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110090844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08773445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109716064 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079627493 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100631951 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083020704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106188379 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093591139 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104072305 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086956193 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107674733 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087035056 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103745501 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092668111 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098048811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087935038 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116990098 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087876788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108646864 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089471111 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113180169 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088081876 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101917223 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088604064 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10682308 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087883432 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108092793 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088278668 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121004011 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107974431 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083013409 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104691378 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086395681 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102269817 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094377421 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10856218 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088257121 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10754009 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084894455 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108869926 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094346354 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110346091 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090065829 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106767485 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085698603 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106503234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084601175 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105200232 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089004999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108106967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086013231 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109040367 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083400919 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119082019 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094060529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108188369 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078878219 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102422292 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084095023 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100845594 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088649752 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099472561 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084219081 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083977058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105305545 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088890422 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109505568 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087348834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108431582 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086234046 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096396695 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089040724 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106454484 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089587554 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099738119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087159251 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108040355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090793913 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113581881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084684422 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107194703 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085901762 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11078858 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081429058 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11048015 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085227463 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106607519 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083302298 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111426707 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089183503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111087476 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08869252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111200762 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087510403 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112592103 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09096135 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102209013 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080062765 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113456016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084971818 seconds)
  done (took 58.482139347 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147748871 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088582892 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082556209 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102549165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125559826 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082874576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09822344 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082702111 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101928242 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092910038 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098274391 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07830757 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120489417 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126210816 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124665166 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092828413 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098014601 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083377015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099288306 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083062182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118602885 seconds)
  done (took 2.956809947 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105115577 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116683532 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114777924 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101051752 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109000989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116910751 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095799898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116291355 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120087346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090885766 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120484255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116006755 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089948948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110854762 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110337503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093590375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120453286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108458425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097730304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114915685 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112950653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095192844 seconds)
  done (took 3.201041119 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090815622 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086516657 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112300931 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080458651 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109678086 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080395844 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11654916 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083223564 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116262446 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088723367 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108897499 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091615257 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117234446 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083706741 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107759862 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083332986 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111482626 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086295411 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107445254 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080833301 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126216671 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.08121756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103839698 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083236538 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115718479 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087858467 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106689765 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086200574 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103698367 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086773462 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102720968 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089272537 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110569534 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084909921 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103380721 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086236526 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08607763 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101535396 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083929459 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110899951 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.081669882 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107189902 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093235968 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103916823 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08281468 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107785467 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08668201 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101318689 seconds)
  done (took 5.478961455 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11941583 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155135315 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085135097 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146830507 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121896274 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096241904 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107764346 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145067561 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080669407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1069813 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124527444 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100672186 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108427005 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111763745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090628816 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106722542 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088619543 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102779333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091538301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105982423 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112858526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09087939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121692591 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118890189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092785789 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105814087 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082691458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113266283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117725705 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094244912 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113805966 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093779549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122800943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108408513 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085934729 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109601549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124066317 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087331221 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109892423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081483868 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10979658 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09331577 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110946538 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12385206 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087538015 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109266515 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087369865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101092861 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119212823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090114919 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117873744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122122262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092137999 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107481888 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093048074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122946888 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108130265 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085313101 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111506453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118425064 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081470372 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111505855 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100707469 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108508507 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116401856 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101520255 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108507539 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090946927 seconds)
  done (took 8.190366993 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115149203 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112493302 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124403928 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104772192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112228926 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091209385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112578798 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111568485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092720422 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119344965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092016299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160693925 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109730414 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118179723 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.092822679 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112687812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092699857 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112366453 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111838806 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093012759 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11191753 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103838823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112511619 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123325195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124789658 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089802893 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11198904 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092098221 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123925234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111023398 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105556055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112708253 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111602474 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104571335 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124981224 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112483532 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086440384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112834048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092809049 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112969635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088604169 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126233318 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112105695 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089592047 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112595414 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112190412 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104946769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125345112 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11864107 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100581928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.1133915 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123244113 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091684154 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112566615 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124133459 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133307976 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104380504 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12584809 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112871994 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123661103 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104889437 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132782639 seconds)
  done (took 7.710394473 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083477663 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083089927 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101912771 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081653396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104346333 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081908145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083381832 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104529257 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083551853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10383557 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084364075 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101927858 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081884226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082899384 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103099887 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081826226 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102815359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081979871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103628642 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082374112 seconds)
  done (took 2.660915674 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093227137 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125210372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085405924 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111794818 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087063498 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112620525 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086107438 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108296798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087570028 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107637685 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117695499 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098218576 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105216786 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092371184 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118742385 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111857672 seconds)
  done (took 2.4952852 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105132625 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126608965 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.129858019 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089619167 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10329281 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092144745 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107566392 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080424394 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100141614 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092799761 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111035941 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090148855 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10717727 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083032787 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084848278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112653621 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079662375 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.108709847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086485572 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130031316 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109562083 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08735498 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108993517 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087068511 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108352141 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08957989 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111551892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081984934 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104538075 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088006438 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10906384 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092941393 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103051925 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08908002 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103997892 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082076145 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107900934 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087807915 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113502345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086920034 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103876477 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087676359 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110722193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090506954 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101101358 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088229538 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100825508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090491327 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108209335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08778921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110053693 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092882213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112191745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096143308 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117306727 seconds)
  done (took 6.319034628 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100027756 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109429572 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089900989 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102218198 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088305983 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113177497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089320146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107280377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087278113 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102340863 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087388093 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108909635 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0874899 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109544868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08829742 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109390211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080055255 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107521078 seconds)
  done (took 2.618658264 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090856029 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083960281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113660644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08391971 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106412982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086300949 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10097319 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082599241 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103650237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084950371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105167198 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087175449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102527572 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0876324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104459799 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08503955 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107173398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083717066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08439155 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102493271 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086241132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1053699 seconds)
  done (took 2.92881188 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101991923 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138505375 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104029952 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153262295 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.116551544 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094583606 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126524819 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09525914 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133524528 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088177304 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.11418833 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088415729 seconds)
  done (took 2.206586893 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109954381 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142992335 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086190319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108878525 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120534425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091089868 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109819719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090328208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124866127 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123232398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090033248 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125313878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124164345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123851756 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099824893 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119979495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110769053 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091487519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106321993 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133915789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090878012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124270383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090355224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111796848 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110697842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101987764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125305336 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124310906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090703832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125216979 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119156385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090308008 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125881179 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124649828 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087987392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125952644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110471858 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134376942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09930875 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1229828 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107511701 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099612523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124622064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118836042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104729659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112393414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118897243 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090459499 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112029714 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140209425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119860686 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102947484 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120465297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125425028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103548958 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140659421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124132043 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123418141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119370405 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12533916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102007745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120060785 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123220047 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124766708 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099650357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12352172 seconds)
  done (took 8.355709658 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125420279 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108316148 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090381242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125291039 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12283156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110970912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091185873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112194287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.33691196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109405235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159066196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090312146 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122614925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12233311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090309644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111489255 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111952488 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10191948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107360204 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139449406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089546328 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123464704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123501019 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123077501 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124390442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098959505 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110501544 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090097856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111361111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110090286 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098019594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111063981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122883766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0873013 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122924373 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090971182 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111551341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119548537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090842544 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120601537 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123160147 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133775201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091079683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111053855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125167124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090923127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111561312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087780487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111237437 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087421512 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125817917 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125120564 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125153023 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102707945 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111856219 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111273667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090866691 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111054731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090360725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120487698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123497184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090783922 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140109708 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110743569 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091152092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124245297 seconds)
  done (took 8.398887107 seconds)
done (took 157.009825266 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102626987 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141219612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10277336 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174391984 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085650176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14086956 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118539342 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121408333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084640372 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106056987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085505567 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109833072 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151267671 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106426662 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08591538 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109512699 seconds)
  done (took 2.684898571 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181873417 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.289897245 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105948259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112709696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09183096 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109815337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090264981 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113154828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086411098 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120262451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108294194 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087994321 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118877934 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08845454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107150856 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088444666 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117744303 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087541186 seconds)
  done (took 2.967910965 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117312648 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158959062 seconds)
  done (took 1.142140682 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120997423 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186154136 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304738147 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160091301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113720413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130994995 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162690438 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125651119 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204648413 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130886905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108516865 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114774525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139403666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09833149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116943393 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091716577 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14171376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115593218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.093990371 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115275148 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118088329 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117983053 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119459296 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095027032 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187807536 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13027065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.093090725 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114850913 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115201027 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093911785 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119294761 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127862519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107783625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.192863903 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098323402 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186761167 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100030126 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112793145 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09383536 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112772719 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097208197 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118771594 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129657627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092769388 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114397395 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099960115 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114592819 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093332507 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12273387 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122182712 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099942634 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119597093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164456241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122835892 seconds)
  done (took 7.689055421 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799492238 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158475229 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091671646 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.899119003 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14530638 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106154482 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.805850932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144486275 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24123544 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.821483724 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108487426 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129088229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237130206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255801678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.144793008 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340461603 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.681834639 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104930758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145252497 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15389837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120262814 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122174624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134103074 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430908916 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113763767 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091359131 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119702709 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103825135 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184990485 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092843003 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11603664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188042016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267521294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20812426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092171943 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112333007 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090349155 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170348705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272073535 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224021757 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181321613 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087674046 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112091544 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104478349 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13461441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109667317 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167099554 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177166513 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176651217 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117907805 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126164113 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101672537 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125237334 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16729051 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110431826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319029098 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350457115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113672045 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099849156 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135268257 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272563951 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091638991 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231276901 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141147208 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194851114 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113072626 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783132161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171274005 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090827023 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124471567 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120901019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098585962 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124884256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170274662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409426428 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108333851 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11903519 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089953328 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234746744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090723721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112586355 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169315345 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115026039 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101978057 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130760311 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12778446 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175691786 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255140356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128842993 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101024068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119672655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127986391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093162554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214888953 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225226637 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162477422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240513884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105934677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.19095417 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171124862 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103962036 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.198176396 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09969743 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133932667 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12646672 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197696238 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144928668 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.11452837 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097257824 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121642651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148673522 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093990944 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122542579 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172678594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485744994 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169730324 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087979528 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117308496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101253468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165184996 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121809754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267929851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10111299 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194530496 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099442015 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109973857 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100169296 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189768822 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106765135 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123312152 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127549689 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101244844 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.253600715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227789703 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129400275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226561593 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186119226 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125178058 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178822031 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122758443 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174394036 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123646143 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104787256 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115236345 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780119867 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104848119 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121870769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097540445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191297013 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114695368 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093049316 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.112731545 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088281144 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78593738 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093798623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110924754 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09200445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124382474 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099998565 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121447057 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118856989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166942376 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240267507 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105516381 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122550801 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090780214 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.187649194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093917432 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113120584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091640461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090783831 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124050709 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120014798 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093680307 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177210379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184471957 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203843395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.61056962 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090415613 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116151516 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238522299 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09090149 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311731066 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121432748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207761075 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.193188072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088975714 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34430559 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.173684036 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191577346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116763716 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176724158 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088593149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121216111 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166560944 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089634997 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12147013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16121162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132862341 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12921319 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.123701026 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114721408 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231783073 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110933395 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173971581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092144515 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128933073 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313794714 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091153108 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134082533 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166618719 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118340238 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091533295 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.877070325 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092416402 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124569449 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101103534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229845996 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191256862 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100663281 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122982952 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105642384 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.1901997 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217348807 seconds)
  done (took 44.919875633 seconds)
done (took 60.267005634 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317728306 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268390267 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.298937507 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20017987 seconds)
  done (took 2.048639499 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183459042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156076221 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126943472 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111385918 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157471373 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089699726 seconds)
  done (took 1.71834665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.48067602 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.379570374 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.350945036 seconds)
  done (took 2.107072983 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258962546 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.288659657 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325511669 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.434347385 seconds)
  done (took 2.30615356 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211155734 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129568399 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101442671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143111492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174997155 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180712339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14606619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156858631 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132773972 seconds)
  done (took 2.31254083 seconds)
done (took 11.386876233 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.259801691 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.267482771 seconds)
    (3/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.259535048 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.155962485 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.239029943 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.166416273 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.104247882 seconds)
    (8/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.144310046 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119041988 seconds)
    (10/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.23474978 seconds)
    (11/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.183212378 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10379726 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121142125 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094672267 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.129237455 seconds)
    (16/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105958741 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.212474047 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.24437676 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.188664049 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.176123625 seconds)
    (21/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.125791503 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.158831674 seconds)
    (23/286) benchmarking ("sort", Float32, true)...
    done (took 0.231868127 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079807157 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.187254027 seconds)
    (26/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118761293 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115398514 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.197819557 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.22453617 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127073346 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.24059424 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104921855 seconds)
    (33/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.187366558 seconds)
    (34/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127673223 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110576913 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.230674466 seconds)
    (37/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103400383 seconds)
    (38/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.106049239 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128057136 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.223941104 seconds)
    (41/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.153220933 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095119323 seconds)
    (43/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.112359423 seconds)
    (44/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.170491249 seconds)
    (45/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.238679364 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144464093 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120318193 seconds)
    (48/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199461281 seconds)
    (49/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125963771 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125327752 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118547145 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123817491 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09555517 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.110444465 seconds)
    (55/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088722713 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139910619 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.193047173 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092679053 seconds)
    (59/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.237669801 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184413896 seconds)
    (61/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076753387 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.186043868 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11622458 seconds)
    (64/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10376115 seconds)
    (65/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128006091 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09396801 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20828548 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120710734 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183434335 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160571205 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.23414057 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.136043067 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14001464 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163256386 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127686932 seconds)
    (76/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078217645 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101718216 seconds)
    (78/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102701107 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.113614373 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09451607 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117340514 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089075529 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.161757878 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097699033 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117285271 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148103931 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095885935 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123959671 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095342016 seconds)
    (90/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169888364 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117479626 seconds)
    (92/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094434377 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122071951 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080274113 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112087269 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082413472 seconds)
    (97/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126464617 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080593741 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20614936 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097231769 seconds)
    (101/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.183793616 seconds)
    (102/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.200233581 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101407161 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119989496 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127956084 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205908648 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093498989 seconds)
    (108/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120247678 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104466675 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115273347 seconds)
    (111/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103573123 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.145261314 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.127659194 seconds)
    (114/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.085595249 seconds)
    (115/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.174238133 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.10276744 seconds)
    (117/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.111579523 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198463537 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.187020706 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102178203 seconds)
    (121/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.193774295 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125787305 seconds)
    (123/286) benchmarking ("sort", Int8, false)...
    done (took 0.195737424 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09917566 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150110387 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134967405 seconds)
    (127/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.200954728 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101794312 seconds)
    (129/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121669833 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09463349 seconds)
    (131/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166243178 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10139812 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.152887018 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100749536 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09251106 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.198840994 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100832985 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187871704 seconds)
    (139/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126680044 seconds)
    (140/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183176637 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089697971 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121377859 seconds)
    (143/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08961887 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11878204 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081238512 seconds)
    (146/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094636124 seconds)
    (147/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139116783 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125551044 seconds)
    (149/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078520817 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.080098431 seconds)
    (151/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.182613515 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.163986295 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091627483 seconds)
    (154/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101584499 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195862466 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096842742 seconds)
    (157/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.107720255 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117707492 seconds)
    (159/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101492816 seconds)
    (160/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232161851 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078761171 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119689995 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096154295 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.188007067 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115433704 seconds)
    (166/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.165803806 seconds)
    (167/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.106418539 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093320316 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.122594986 seconds)
    (170/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187447601 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097507518 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138844171 seconds)
    (173/286) benchmarking ("sort", Float32, false)...
    done (took 0.177721546 seconds)
    (174/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2505799 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096347579 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.140132765 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097138702 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127871061 seconds)
    (179/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.128613399 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.092683272 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.177638075 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081446317 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104476366 seconds)
    (184/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085964293 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113659597 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078346602 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.22228798 seconds)
    (188/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.114836274 seconds)
    (189/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.096918175 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118503485 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 0.222669539 seconds)
    (192/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099832208 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125880044 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078594712 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103024274 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078552548 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.101644534 seconds)
    (198/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.130981042 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11920736 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103112983 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121430806 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.188751544 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078590346 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080678923 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130507692 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122003877 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093637823 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119097933 seconds)
    (209/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.084977126 seconds)
    (210/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.15343261 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094975098 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137155602 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097401782 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.103097821 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09246256 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10482374 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089984738 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116330588 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095077827 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128574878 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098589302 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.127248719 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177202661 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083714991 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185606196 seconds)
    (226/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092645134 seconds)
    (227/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.105108421 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096472012 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169588588 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095434414 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102690887 seconds)
    (232/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078488516 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118805751 seconds)
    (234/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079805701 seconds)
    (235/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108102492 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.147639153 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.160515886 seconds)
    (238/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079145871 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133605153 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097277552 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103240463 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090051158 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120646019 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096491086 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104586158 seconds)
    (246/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.085452226 seconds)
    (247/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127596434 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09864996 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1216157 seconds)
    (250/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079223963 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18584097 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103484137 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115505369 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128742004 seconds)
    (255/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097715342 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117745942 seconds)
    (257/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084467312 seconds)
    (258/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.103017782 seconds)
    (259/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081475837 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12012195 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097068083 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117012179 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.249958315 seconds)
    (264/286) benchmarking ("sort", Float64, false)...
    done (took 0.151846206 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.13027235 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08028112 seconds)
    (267/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.107399783 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100023033 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115209582 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091507616 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137371729 seconds)
    (272/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09524761 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128450478 seconds)
    (274/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077854783 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115812247 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104387376 seconds)
    (277/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.102505048 seconds)
    (278/286) benchmarking ("sort", Float64, true)...
    done (took 0.233182092 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09981223 seconds)
    (280/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.115313417 seconds)
    (281/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.077928372 seconds)
    (282/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118404223 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098382883 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116648714 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142730754 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096183449 seconds)
  done (took 38.540984426 seconds)
done (took 39.438526017 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104805472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155096748 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101709157 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14535072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129788494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105944531 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124273681 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103706613 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129335887 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106367511 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.128082368 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085591923 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124574225 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101333758 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.126464588 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144740978 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105783835 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121171181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093569288 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117146564 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093216661 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118405822 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.09586224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109132205 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102124963 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124765463 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096858217 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126132739 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094495089 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117946503 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092263578 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122711725 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091827961 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128352006 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096345471 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117853749 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101977901 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124115838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.09619624 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1195052 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098692739 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11768558 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097148827 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.123274635 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095815186 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116605251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093557524 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130499316 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144519424 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09469143 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098212458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125224709 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101877662 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122373614 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091763851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118546503 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.119348164 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120838574 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117962435 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095299659 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.140338837 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097649697 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117517851 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093827812 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117528934 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100600331 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124954509 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092935698 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124170323 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096006386 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113324428 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093613557 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115989009 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091095443 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123070188 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100582743 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088646779 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118321109 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097209852 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119597573 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093815604 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116446897 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096072733 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118699312 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093197708 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109528435 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092263542 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119963379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092931512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117224523 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09624435 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120739617 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096331549 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126518395 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094069757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119234791 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094304428 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118751532 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095875716 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117091304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089402256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116134091 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098524799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115451178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094743014 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127468873 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092191108 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120336239 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094268839 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11745406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107588325 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12495392 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094847708 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119125738 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091118448 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122000603 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091662177 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.115897318 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092630289 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118730073 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095194295 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119054607 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093505139 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12154417 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104894976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11440636 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093338714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116998539 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094317985 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12129802 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095060484 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.115948918 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093578869 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113643678 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0935375 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115947228 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097811602 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117132252 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093364477 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118487742 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094014861 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120707293 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095674584 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119793491 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092135136 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111834225 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096014285 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116693739 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097022621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119078666 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094415131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.114539641 seconds)
done (took 17.543938184 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101197499 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.192833889 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152413867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154918149 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151952967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111179325 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130347759 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150442389 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.103272133 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14868432 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151531812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141360722 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131552307 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127463441 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137216948 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100855652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125388159 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111320247 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.159599576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145412876 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150997044 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102498705 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147873281 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146504115 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100486782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.145535843 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129363476 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101870415 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128933064 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120905953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141999921 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128969206 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.103445855 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137906661 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10791722 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12514761 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136630652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097329882 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125891227 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101647907 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139762787 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137068944 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097963447 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132350688 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126216511 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105056921 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125222036 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1007028 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126766913 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096048657 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130208743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147318684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.099537059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128946745 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126765917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.102071579 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128707118 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105595836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127539206 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129247979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101804286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1293715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106680519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143371919 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125257769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104300576 seconds)
  done (took 9.282136818 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115548711 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152716241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132223952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107960772 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129063782 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090244455 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114507963 seconds)
  done (took 1.804887532 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091568432 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146145586 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123816571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148746845 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141305202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127330306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133314117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092251235 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140572569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126973698 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120631482 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172627163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11882771 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10391831 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151465192 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091153116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151954451 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091369439 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123930316 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148925914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097471093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138490093 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104094821 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119585771 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138555024 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094378624 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185593538 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130568019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09168206 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124251237 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097834891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187909331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140218184 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102405821 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115023498 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120247858 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.139249761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121444057 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117333237 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122158735 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.113533767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123894405 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099471163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122944182 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099039682 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.132593331 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128938791 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.100946946 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123587006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.121157708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128621443 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115097598 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118640357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096335679 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126820087 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122695091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10630005 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122321357 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1217389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124437141 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117501824 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142974886 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139014085 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11825611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135797719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14029201 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1141341 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12318523 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099897893 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125414493 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119192985 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12158749 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101914865 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.132825494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126018593 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119501838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144753424 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097007854 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.130407774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09639513 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120511214 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09273817 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13457018 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096547995 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120026782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110012982 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129433074 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122305741 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09642057 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139991722 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097286163 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129805965 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103203358 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122145289 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133205012 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121492133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128789075 seconds)
  done (took 12.791528583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094860059 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093812088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124376079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.094932502 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120948882 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095677548 seconds)
  done (took 1.594923863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124882812 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121936308 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109173006 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125481979 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161642687 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118292246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145566917 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102549485 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138552253 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133507188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.117590709 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144514246 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149529633 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101421247 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142472333 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101218531 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143410921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097993146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133568301 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097717515 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136971858 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126186815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097682768 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141137531 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101815043 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.127093393 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099913775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133599261 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133467792 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103806135 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125616887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102652457 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126629174 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103532157 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143881871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126617502 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09654062 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129444709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101718627 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127182859 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119392084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123745148 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10761094 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129095092 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128316347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101739551 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12913743 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09998877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14276797 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104006523 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128967426 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101103118 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127346774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.103733923 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126671922 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129166826 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.104615177 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144566347 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.101477062 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126970257 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098167517 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12910885 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103428419 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126777405 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128229332 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.103992235 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127243283 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09789136 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123102974 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100715745 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129623917 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097958666 seconds)
  done (took 9.619993002 seconds)
done (took 36.043571576 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676284398 seconds)
  done (took 1.646205206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.853038362 seconds)
  done (took 1.823511388 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.634277473 seconds)
  done (took 18.634190063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499666902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59747319 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.000254511 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169010129 seconds)
  done (took 3.239000401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973523885 seconds)
  done (took 1.969825127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.308184689 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272975123 seconds)
  done (took 1.562188013 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.819033151 seconds)
  done (took 1.802706382 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.542728685 seconds)
  done (took 2.523723611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.359699987 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204602459 seconds)
  done (took 1.557723485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.57869407 seconds)
  done (took 1.564464205 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.762408324 seconds)
  done (took 15.751359618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247778426 seconds)
  done (took 1.247195149 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303745401 seconds)
  done (took 1.293123436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63401531 seconds)
  done (took 4.623396882 seconds)
done (took 60.218721232 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103647667 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131771352 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107812996 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129260365 seconds)
  done (took 1.457262819 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109287453 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128030111 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105248036 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127107609 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109659559 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127931397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099522427 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184552 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126096956 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.10263068 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127878732 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101857928 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.129389381 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100365205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124822147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.103011236 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131399597 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101940633 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12985681 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128603497 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098943675 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128015686 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104337599 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125321515 seconds)
  done (took 3.847184743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103790978 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097875576 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125881054 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097423945 seconds)
  done (took 1.420132895 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108252176 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140773011 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113275349 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133058558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114259036 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1400234 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123113581 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097187775 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.125281998 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106613714 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124148514 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117798348 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140071132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.092600288 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134775804 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09516434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119954595 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113794951 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.132430161 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134672851 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096546298 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.132912131 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104463237 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137718365 seconds)
  done (took 3.878525723 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179153014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136820929 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147493812 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.103012328 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172782864 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149493677 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095332453 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149175557 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.096870178 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134239 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.1001721 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174868051 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131893566 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.099093738 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123501356 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12885865 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.105281227 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131470431 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098769699 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.135370049 seconds)
  done (took 3.59197521 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102981577 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122300585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093843558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094854853 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.129205201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099934349 seconds)
  done (took 1.64325922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093140226 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091919905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118182861 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091782705 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121759046 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09158415 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116699974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092256678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091461714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118797803 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091335577 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116427712 seconds)
  done (took 2.23962146 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385274051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121385849 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121072871 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096713978 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129396649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095703762 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134902297 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094619122 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152058865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09584867 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.12120574 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098592305 seconds)
  done (took 2.647783463 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215612475 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101822139 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270682056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379489019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138146913 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170238482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286320027 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169523566 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215603613 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117610713 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227782203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135981163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160974532 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18581492 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145167889 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182835374 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182553952 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20769423 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155064402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213465421 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170350681 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174452213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186637523 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158152224 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142237215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137014433 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125239726 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133340472 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180128327 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1779079 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182987929 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155360842 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117564426 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236287901 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220841903 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21344511 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312665287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138701323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.192631761 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189598526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234232277 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146755515 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202626029 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161503493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134458533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188852583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165276445 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189600201 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11062186 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146508223 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190518883 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183825419 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.213217968 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117140843 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333000225 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128256493 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153314875 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187880194 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193202622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222990975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174349067 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100248158 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190722536 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187809052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186079111 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151818065 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1735229 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1319311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182515879 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201073441 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185109943 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171760426 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219331942 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11307645 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171712352 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174886927 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161530641 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185773592 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167787751 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126296526 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130635292 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143129254 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133094249 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164816937 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128517997 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210332848 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141433172 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.19659036 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211691847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16641828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168734759 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173297336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173945488 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154854515 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097718721 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153976304 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.168130149 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167729232 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109825536 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163542286 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150425186 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133672553 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132949408 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130271522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166602159 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140394288 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174756972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144765879 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134646165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172507026 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15692009 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164995444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180039203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193213746 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110055163 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138679554 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201710471 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16619494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143274935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182772985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192585674 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.171946364 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115902512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203634169 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200596758 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120247384 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222012392 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120574097 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140693772 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158123493 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166297411 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163679092 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.135649123 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136177772 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162177216 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201557112 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133881883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115319643 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182592149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132978323 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106675973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149984963 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142642588 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148336073 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126865188 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147048241 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163928996 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168176018 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161088734 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166031295 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119843339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228241949 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110910904 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166954415 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154130668 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09703002 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.213989899 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19172374 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107243624 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233923492 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176407019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203544074 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17081381 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184874359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105992519 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126076421 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174163032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168180505 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169031511 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1897288 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199935904 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172854996 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160155273 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157613797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175479623 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180988661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163316872 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151224918 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141262005 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203223555 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101310598 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129895561 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105469931 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150205665 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109030182 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138342839 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188678286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172668104 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221280557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168990799 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120291056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187764984 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132351216 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173161675 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179739363 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145165781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191150062 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189131736 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1747382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120559729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211753548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09810921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130057507 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.112206432 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172941808 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139862568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111752326 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149496675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188524931 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183681088 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157739779 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234342318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176729836 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20012468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100295096 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170792833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17798053 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166000293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1903535 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113079214 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167386864 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184862093 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150270382 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197334656 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170613141 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176103404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234642861 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.137531981 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137175908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156213907 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173835826 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118351241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172225052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153490805 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142785099 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161486526 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113126771 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132762226 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189893282 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151415857 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187189669 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163735929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180496432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132235051 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121477112 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167312072 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154671539 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12170786 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178676901 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194544381 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15065887 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166527686 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182829289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108024451 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319757195 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194514746 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22267706 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114829084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150228663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170249341 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166174673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174663145 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186967899 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150589747 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186464531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165028415 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121345357 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142316349 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154455778 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129032227 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157597832 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139238942 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160306847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123052854 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223111773 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120007453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166239686 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172044237 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154613865 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.154885937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121229257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207244379 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166210743 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185183706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162514973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173268495 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235598315 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102562302 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134853179 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104876735 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186533951 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139300214 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166650403 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189839442 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204858047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165559768 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174645738 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145268723 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097609221 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167010877 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157108894 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204810719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147508476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143220684 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199682863 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158021511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107735587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170599828 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294687339 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148788802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181766558 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.123474044 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283561072 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103384969 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136844122 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166933473 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17877772 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115242825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190349187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172188943 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151303222 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165742677 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11572829 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22075434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213161573 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178750139 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183871539 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150782113 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165509384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172483473 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185063989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150256105 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123947143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16987583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190295949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194323513 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140763331 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172536862 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17223051 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167549697 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181060926 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111595303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236952526 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109035758 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174084749 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147115438 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130018214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16700048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191360991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112054781 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209949556 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136777856 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139055509 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131921871 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129412617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165611572 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150675314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134934144 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188819934 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102997956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170273767 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187252262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138133309 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161171774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123741377 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144971638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150102435 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123151457 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143476953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175879675 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189692956 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.108120112 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213451232 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184885182 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173838114 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169028643 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121592483 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674315777 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134385724 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188949978 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125254909 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219617859 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126735009 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174908903 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16887144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158509693 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176573969 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157295941 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227322694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174110637 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165510829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109210979 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152520795 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149514576 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109422977 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16034632 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17162803 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147921653 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.115359024 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165510972 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152780056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15314838 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116625892 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190900334 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155042278 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191000778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188293253 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146443626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17554004 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181533745 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13831846 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16898088 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180360401 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118341554 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157529319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138150679 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111670862 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18768476 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130987736 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169747905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168350691 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171095298 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142916628 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140438328 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16802721 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149798006 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168707662 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107846165 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161886296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16536916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13789318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105130021 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163294851 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167795243 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166377007 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103951125 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178313992 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190584062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102287961 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14068955 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294732251 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166385227 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197918657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160029988 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141101684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122786222 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162640211 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163032436 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168355799 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134674753 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109731116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138287434 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18591885 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16018557 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136031295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190506152 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169554038 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237674819 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112878719 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272317665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145209441 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132623026 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136014102 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136118441 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119779266 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141536635 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150891724 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197193096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187125106 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160331127 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14994212 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105498018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133989101 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111054911 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168481827 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162863844 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16749679 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149716313 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095431769 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151947589 seconds)
  done (took 79.873720769 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154880986 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138802481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155083648 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201138026 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173425838 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250843701 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212001197 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234446171 seconds)
  done (took 2.606996483 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105683674 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163128142 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145173726 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130593633 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096882824 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.3404031 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145297846 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129199258 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154061928 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.139507746 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097692441 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571787317 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099826842 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130876326 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120133816 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095940937 seconds)
  done (took 3.746344823 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.269285002 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543616176 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.089512914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254064567 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233575947 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15984669 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.760354293 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191862732 seconds)
  done (took 12.59484691 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127515626 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145684459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.14110357 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.170374233 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125158036 seconds)
  done (took 1.804437533 seconds)
done (took 122.336960518 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102167065 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13170732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102673099 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133958018 seconds)
  done (took 1.552786636 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.113770865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086225913 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118893888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085688288 seconds)
  done (took 1.492739953 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432430486 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.11581541 seconds)
  done (took 1.675252953 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122665264 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140290669 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113170973 seconds)
  done (took 1.470109731 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10976184 seconds)
  done (took 1.207167754 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103272341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105144738 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148100708 seconds)
  done (took 1.4537535 seconds)
done (took 9.947387185 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119043446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439766029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390934603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144125545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726862056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384660765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.056417727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162560128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144330639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125128778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113381316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704534855 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04226048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349814208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028123718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441842275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678868732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128390686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130479215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098362878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.035312312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095804276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097143853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12826218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676990231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430242545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096816454 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.482930098 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123922459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100883065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413635232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096972476 seconds)
  done (took 17.271686527 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102996625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186115747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10624539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127910943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100627444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127475523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107009732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138882337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188190795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096175081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144030901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095028352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13090333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096298466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14653157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095749252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128097804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098706198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133504252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098058514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145790079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096596966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127506608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09893438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125266931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109165393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12588034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10939603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125905824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101294534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131484907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096800814 seconds)
  done (took 4.943861589 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148762756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194537421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134476055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132100819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178066288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126593564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.181948156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165340153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190219648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127422821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114262974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125570213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132605845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126417663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11706476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12495914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098963711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12775219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1029914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127168678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116546225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124322044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098078128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127569697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096748859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139902872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097326795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139741213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125333931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102327451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130826653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097609099 seconds)
  done (took 5.278703673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10522677 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1340107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113912545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142466505 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099363734 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133797036 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105816958 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128612123 seconds)
  done (took 2.069925622 seconds)
done (took 30.660645947 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115499094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.102328593 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140278602 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.109176596 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.137345109 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.120660588 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124883699 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107804147 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.139022541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104886476 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141957196 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095980244 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12717784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095847171 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13927271 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104407796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140268944 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106351295 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145753561 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112052771 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.12701013 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110682734 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105588506 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14830976 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.146612457 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.117459543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141912628 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10358966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126759936 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098188114 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140757246 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.121751144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131994558 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114415108 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131514254 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101501903 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127047536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099635448 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141281573 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108092663 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.13243176 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.110129584 seconds)
  done (took 6.192041833 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.124797566 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.170533611 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.100661224 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.128021742 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098542644 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166190056 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162467721 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.104031849 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.127357195 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122056623 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.152610588 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.098784874 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127469669 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098012422 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126549868 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.098979665 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150575944 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.12249424 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.157825592 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.127918797 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.175387245 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.16089922 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.132392042 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.154155789 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.168732678 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.164179542 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.119444097 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.163393231 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.126119532 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.132086953 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156611365 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.129742129 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.129227798 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098678892 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.167533116 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135266113 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160184331 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167785822 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.157600828 seconds)
  done (took 6.478739973 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107077936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140709888 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120208414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194640554 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135936041 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.142804861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107672111 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146867409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11370228 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126860385 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.10739045 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159249238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146083659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105440894 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102459911 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142166013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146671842 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099840658 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132004304 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116979763 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145619409 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110523067 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139585885 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108344426 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126214946 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10721318 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129853003 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113383667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132355594 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105365877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131159704 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103193499 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134523254 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109741251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130732502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104947955 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149422034 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106422325 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139414663 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.130646884 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139558037 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102399936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149010435 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166764975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099448813 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134375702 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104864302 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135790108 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09682483 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11622875 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13807163 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097808576 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142842083 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127692783 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097223823 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142072628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099526857 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100823444 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135888899 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10465286 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147690693 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102073654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143993142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09851332 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133837843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09802341 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126855108 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102750327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149233954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101329417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167284389 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127197921 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.104992188 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134850229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104935724 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107029434 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129841101 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112583867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139165651 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102284978 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13838432 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102270739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132283111 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116183119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142676018 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134516265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.105113719 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133538918 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102379552 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098443978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143218161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099939691 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.13265204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115894808 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128191032 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100579412 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135155875 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10276942 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126413514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110550326 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133568434 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097149446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137997479 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09813607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132416552 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107133443 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132301536 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098479227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132294216 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105881551 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127222631 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100932225 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.131559975 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100828314 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141118864 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106428796 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129741483 seconds)
  done (took 15.45060443 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245081536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226846077 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200946193 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318860657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151097633 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124512389 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.224469962 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.179947757 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129933045 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.13744568 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.216996841 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.196741314 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.154294926 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195763487 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187381941 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130121638 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118216575 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181655901 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227018697 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.307465405 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.149238247 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113011225 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170743122 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169359963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148550796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114258579 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153132315 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149682507 seconds)
  done (took 6.144209549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115539884 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165879964 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105893295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155686884 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156171342 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099537525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.134798626 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100170516 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142710586 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.11396629 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.130575328 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106440781 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.136133704 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107916242 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.129647799 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107710272 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.139744538 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108339689 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132387535 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102533578 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143130865 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116682233 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136646978 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101019584 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147353751 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131635423 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10180441 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151510413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.136660905 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1246759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12700582 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107929627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144143424 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098747973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10140254 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.133835602 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101420983 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131515713 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100348794 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126771795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098895655 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.120474109 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101525318 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146301396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105735405 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.126660577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105495517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.133511182 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106163138 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126384568 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100892914 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101099042 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134635402 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109547651 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133294225 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106032995 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.133369223 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10071102 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.138505364 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102518056 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127145133 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100608074 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136842095 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103062145 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138344602 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105310134 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131416684 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101478939 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.135079448 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10596587 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.132444177 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.107820561 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.126560516 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100433192 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.641711762 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108126218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134143196 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100517938 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101678226 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129181062 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087995957 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128938731 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086569663 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133756406 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098220612 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130468492 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102732374 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104928198 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145970289 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139372439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106653073 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.130154018 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101773938 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.134631792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097230481 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133669572 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11639826 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149870738 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097363392 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128800361 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11518321 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131672314 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097557573 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121349634 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109418857 seconds)
  done (took 14.215301624 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140189417 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.180971161 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131097884 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118812395 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164952997 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.171703164 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108543579 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138535734 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099955371 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11917429 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135249619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107931521 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133043219 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114313028 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171107961 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.141170348 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100245353 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144748115 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104943704 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.184520872 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149377986 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138843905 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.17055426 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133122507 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10455737 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.167684026 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173731268 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113065741 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142299351 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140804492 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143774478 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.174118764 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172162527 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105341768 seconds)
  done (took 5.885335978 seconds)
done (took 55.465465447 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.206539723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426031635 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202831239 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203571944 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.278017743 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.245929436 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203928419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.398228897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.936382618 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.190712937 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.20277966 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203836601 seconds)
done (took 27.829927104 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.206920891 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365683757 seconds)
    (2/2) benchmarking "String"...
    done (took 1.522674843 seconds)
  done (took 4.015316513 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.203113904 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.204080254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448089597 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210788559 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.204545811 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222172689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203885523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.211434256 seconds)
  done (took 15.832918028 seconds)
done (took 25.38678244 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.273260101 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.391128948 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.458124008 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.236357584 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.206733595 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.21369505 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.20622029 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.243637497 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.215965577 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.209846709 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.211959635 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.464541647 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.226058873 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.585441069 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.214170745 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.214924865 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223060204 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.429612871 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.219027642 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.256559334 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192828499 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.215621505 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.224703947 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.243931935 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.214513243 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.223171787 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.252011228 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.207177772 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.419768891 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.216826663 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.247732285 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.21226277 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.257507852 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.2162681 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321345797 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.237027558 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.387506937 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.215138798 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.202916937 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.219441184 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.388954886 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.61776847 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.208173134 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.221905098 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.208903525 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.272113633 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.198772111 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.961849069 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.207856512 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.208490217 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.25066081 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.586867652 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.21099153 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.220136329 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.218236489 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.434645991 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.238125225 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.230948982 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237950167 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.220684066 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.210066729 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.218400642 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.236930256 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.210561713 seconds)
  done (took 143.979511707 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.207663154 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.2144614 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.213765065 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.222185989 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.208927274 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.213601573 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.208454876 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.20961122 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.213633896 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.234828718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.210663796 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.214721535 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.214106989 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19343305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211525289 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.227980018 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.211033948 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.210057261 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233335999 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.209823342 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.234259761 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.210105035 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.230875085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.215100905 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.25486118 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294077833 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.227901434 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.240682168 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.209593885 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.20978005 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.259286809 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.229967234 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847721172 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064317831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.219114027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229630098 seconds)
  done (took 80.594508027 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610475073 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210621389 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211503414 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21067799 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244194186 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.211142656 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790082009 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806738976 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.948809806 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.510545978 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.572360077 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492281863 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212487483 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307299111 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225013473 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212780424 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228540722 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239893696 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212166116 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213541129 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803811862 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.230555475 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.370262156 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412134541 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228040831 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245772515 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611697786 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212360761 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246565902 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.930772717 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549491599 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263172861 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211993402 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581897766 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328039023 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216161013 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246414816 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212771695 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496712681 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212863467 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214382695 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.222274579 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889248324 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213357673 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79206598 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214828894 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.16489519 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214511246 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213784481 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.384552802 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.90706595 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230785854 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214632437 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216963548 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21380729 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213486553 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247135558 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.449658484 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330217636 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214573249 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21432513 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218225552 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248341489 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216639742 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.409192145 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231604067 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.373835894 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.290185207 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320975579 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811850631 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219935574 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31368897 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337538028 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215911503 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.216692752 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214724386 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215987591 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327406141 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214888197 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.646232468 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394380765 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232674603 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.587876453 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216563215 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314534423 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.217206463 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616156776 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.217254406 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217326577 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97237177 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216166482 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313792543 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.216280781 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215898853 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216075013 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646678811 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815447647 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.475908446 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21693404 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.670051934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219129958 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653184827 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786859398 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90062415 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219312194 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332477092 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395093819 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234245591 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219376493 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.590572423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21921116 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277618808 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217745726 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218699016 seconds)
  done (took 368.916847747 seconds)
done (took 594.620504187 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.916543554 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.869366298 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.005227737 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.896667981 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.865638134 seconds)
  done (took 10.693734009 seconds)
done (took 11.833845518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.411831027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412411093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282153285 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414336044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250679331 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431098052 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394576736 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23902083 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325494174 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302609905 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323558174 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273401727 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251771537 seconds)
  done (took 18.453622606 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552118531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.220340721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301475014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612745992 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259352912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551275435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430143744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.238356045 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456480145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235156811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233027731 seconds)
  done (took 18.232760295 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558906764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.221336455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302809242 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559343446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260770149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563864383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431895547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.238131912 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441253776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236679519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233913193 seconds)
  done (took 18.190727776 seconds)
done (took 56.018727912 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260267819 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388866141 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.25048632 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23379111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230231225 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231770928 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233322893 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230467351 seconds)
  done (took 11.203149918 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227058892 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22823566 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229092551 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226177562 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228878158 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229411614 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22757935 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227905937 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226909853 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.2261528 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226739416 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231165413 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227277673 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228138072 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229917692 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230396349 seconds)
  done (took 20.795614199 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2294381 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227772232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225951138 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227005593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.227533583 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227308633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229074351 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227026359 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227634243 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22786578 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228655959 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227510706 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227725779 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227805329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228602352 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229724301 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228185371 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228278599 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.232379195 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228531081 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230194105 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.228372887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229841716 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229507709 seconds)
  done (took 30.628759132 seconds)
done (took 63.770840105 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.224118977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.224247685 seconds)
  done (took 5.593322707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289133149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294443939 seconds)
  done (took 3.730066083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231826892 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230447137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232347649 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231556192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231644648 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232073996 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.23248063 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.232406034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231987043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231249901 seconds)
  done (took 13.463903327 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231377043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.2310358 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229924068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232242319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231936424 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230260601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232599501 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232116822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232453863 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229991117 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232788155 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23071933 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233519034 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229560734 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231175598 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230631619 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.2303859 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230519999 seconds)
  done (took 23.309435512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.246625366 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.253852224 seconds)
  done (took 3.647119195 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.361419202 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271584186 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341949079 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32900394 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.271967462 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.252344757 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.273692867 seconds)
  done (took 10.249315838 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.234345572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.429085418 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.538422537 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.822676461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23574749 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237706278 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.099551028 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.239005985 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239616878 seconds)
  done (took 14.22405853 seconds)
done (took 75.36281803 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.226005647 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.243705696 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.262069203 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.239461007 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.525925221 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.247699225 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.226837619 seconds)
done (took 16.118902076 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.222843438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.230660792 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.216532536 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.232060423 seconds)
  done (took 10.05040896 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226161585 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550699683 seconds)
  done (took 4.925938935 seconds)
done (took 16.125089369 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236131671 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.235260284 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236616981 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.233325981 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234666928 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232416927 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234582387 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.235825876 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.232619353 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.235831507 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.235626525 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235510313 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235952854 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235867377 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233967419 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232851474 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236088264 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233379012 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23298369 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233232257 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236245892 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234090137 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234846623 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.233682319 seconds)
  done (took 30.781829077 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.236698759 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.234145492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.237276694 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237509789 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234779413 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237248284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236699446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236795228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236967255 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237904947 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235945374 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235262852 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238344342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.234807122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236618143 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235562936 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237700115 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235933488 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236962377 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.23579763 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237555915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236354441 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236315329 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239669678 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236963809 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235966446 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238248792 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.236039606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238318467 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237288737 seconds)
  done (took 38.253207495 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242966583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246552181 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239279282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238398955 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237859931 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239264632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238775748 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239059982 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238469898 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.240235228 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.239115265 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239252691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238596893 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239449461 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.239618657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239480503 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239638348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239849502 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239206532 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240158356 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240485091 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.239305604 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240234304 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240155054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.23968996 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239997487 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240482202 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240211991 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239937796 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.240903957 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240700224 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240024916 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240581585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240508791 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240743855 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240968116 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245653024 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248851313 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.240835615 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241788345 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.241348565 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242067677 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24164297 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242717248 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241115214 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242789228 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242386827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.240692042 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241364662 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241388948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240799661 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240703946 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.24146262 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241546186 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240460669 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241522531 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241678909 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241116527 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242877826 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242448294 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242966387 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243543053 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243151176 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243226706 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242976281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24294727 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24320783 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.242415554 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242558439 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.242472307 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243041819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242882167 seconds)
  done (took 90.519782087 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242247163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241468102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.240429454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240718757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241242401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243431171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241063551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242399114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240329137 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243331566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244225328 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241002774 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240860611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243635057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2438432 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241174499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243361927 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240568916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243503564 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244480079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243691585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242522203 seconds)
  done (took 28.485943932 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243551566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245748122 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240891448 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245384755 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243235157 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245606737 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243659736 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244642516 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244142265 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240856437 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241818297 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244731576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244473155 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242653482 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242100531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243951832 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24550829 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244712732 seconds)
  done (took 23.546183305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243254356 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.243827204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246675351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242738981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24419909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246193509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24349617 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245856138 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245469747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.243424705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247066295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246336867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245722873 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243453136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24593054 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243661911 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.247253224 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244189047 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246486995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243406416 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243193571 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245633203 seconds)
  done (took 28.546465536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246278108 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.24605813 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.245102575 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243376208 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243720392 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247956932 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246490614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244989727 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248250452 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.247917305 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24406792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247167545 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246271434 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245714817 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.245344935 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244525631 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248284063 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245310764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247970351 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245587237 seconds)
  done (took 26.079237643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249315113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249607868 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249316752 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250472997 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250193335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250432663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250830978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251118753 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250351378 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250558744 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249323509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251029727 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251188098 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251067093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249311404 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251002682 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250840343 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251142994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25116648 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250699313 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251635289 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251795882 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25189516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250845875 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251136005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251290427 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252005351 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251229857 seconds)
  done (took 36.181696925 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250276389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249169399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.246743254 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247626798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247925695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.247197076 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248023151 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248204641 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25075041 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248214724 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250456183 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250331203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250034425 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250630168 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249690864 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2510544 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25041453 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248405212 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249517994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248393145 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250896115 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250881701 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.251939666 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247491314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249356385 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252631774 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249325434 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250587789 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253177146 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249397187 seconds)
  done (took 38.652200656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294008305 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291572313 seconds)
  done (took 3.750606787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250380059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254070447 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252323207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250721222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249851705 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252914606 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252494137 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251063659 seconds)
  done (took 11.179002239 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252690057 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25478206 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.254254844 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255061348 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253762852 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.253064989 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262248142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272652199 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255193673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255342167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262366359 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260597016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257013121 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254404819 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253233433 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255123441 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253959502 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255331012 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256310198 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25373345 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254547898 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256759618 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256349368 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.251687359 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25615256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266897675 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259758872 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255725178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253920063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259096208 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254501958 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.252785734 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256058386 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256902536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254210584 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254378793 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264567287 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277914726 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262179641 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257087077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257438434 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253454131 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256992745 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258072616 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256741949 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256962552 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256817777 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252686099 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255785417 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259740079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262521561 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255874402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253686668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259230933 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258084187 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263374202 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277832566 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260821131 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.26684295 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268241895 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271672348 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.282472564 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258845836 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257783417 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269835093 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280408934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264678652 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275860615 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255315339 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257948662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265610113 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271532513 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.284296701 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.258022997 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259991791 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258645613 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258979836 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259859777 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267391441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280472898 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258661846 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260683463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268626312 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281784312 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259164305 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260885329 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260933344 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259451958 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25984044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268340395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280865347 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259676189 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259289961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259987352 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262580638 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260510545 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259298421 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258915557 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256422515 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260931681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26046357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264620236 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26966476 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259197385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260498181 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266799784 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260513325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259550765 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266684935 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259674308 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26038551 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261279004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267658926 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.258218487 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265029009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268809494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261077252 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261313056 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.2617488 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261821951 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272759718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287339674 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261725168 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261137738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266930911 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272940594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262258706 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263431965 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.262022887 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259136316 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259788897 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263022517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262067773 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262935109 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262584435 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260900336 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259462394 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262156367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262163266 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.263335038 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263671178 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262105673 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26366496 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264141762 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263566696 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264397517 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270037147 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262324357 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263542485 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263658545 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260305364 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264380708 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264175707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265040259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263466317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264385417 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263607497 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264003105 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264703072 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.264925567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263293759 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26586812 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26841925 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265474086 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26864128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264241862 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260772523 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263421421 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265106467 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.264989152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.265171707 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262297575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.268413939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272032525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265277152 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265734951 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.268154636 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266264942 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26591448 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265573909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.268189307 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272944218 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.266207144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27109389 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.265626277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266372761 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265275138 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265183689 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266078767 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266402676 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.268725328 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273789427 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277858182 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291341836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26653729 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270082252 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.267435346 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271423641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271172265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.267263325 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266780114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266937997 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266515976 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266775421 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269542261 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.267247602 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265189201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266527177 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267608471 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266887593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267017886 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267301328 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26766226 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264927138 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266911488 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268094461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267680292 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264216649 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266780355 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266633092 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.26750565 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268413389 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275025098 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264843757 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26882887 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268689112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268446464 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267309413 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26928748 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269508214 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26955921 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275457071 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.288563657 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.269149389 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274269852 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287267597 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.2683139 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270190025 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268824697 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.267317327 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272470832 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277168569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.26754735 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270878975 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270211251 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270051423 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270301603 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275563236 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266868235 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269258036 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27061742 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272676528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266858647 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271399547 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269583855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269605749 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27125843 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271059686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270660126 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270096916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27260193 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270646604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.270558509 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273657643 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279042848 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276824655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.269676587 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.273095863 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271312969 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273453481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271251523 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271832298 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.269756799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283744003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299173085 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278983978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.291876177 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271632622 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27814046 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29258643 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.274545412 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271850518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272492838 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271598855 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.271426425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268818476 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272701531 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27226321 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274320429 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274521582 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275730877 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273544085 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272643431 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272388388 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274181202 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273644174 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272065385 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273052728 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274912508 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27594752 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271849172 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.27259184 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279892009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293896753 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273759003 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.2726692 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.273018392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.272472347 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273163759 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274635955 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275848223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283706935 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.27784621 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.283801883 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275373131 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283873662 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275153357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278179319 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282930693 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.271787109 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.272750143 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274223034 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274761175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282440818 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296789005 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277910117 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280641562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276837135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276551498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274887776 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275675211 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275364633 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274869052 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284076988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298816625 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.278584323 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276085336 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271971017 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276288929 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275756702 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.274434827 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278659023 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.275949349 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276451688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.275941675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275648736 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275909778 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.276565493 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276190278 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.273277613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276121714 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284413294 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298150438 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280604306 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276781299 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.284215559 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277228072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283921178 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298250734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276646807 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275711901 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276283477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278699745 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.276907458 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278411266 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.278165835 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279460333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280447512 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277927784 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28050794 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278046592 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278396742 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277323542 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287925422 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301332315 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279375037 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282739394 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274072525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278722186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282499718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278797111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.277257319 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281842266 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288374527 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286837748 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279221393 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27963847 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278628919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280827871 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279125798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279720619 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280220595 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279072974 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2806383 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280034087 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282819833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278871169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279376653 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281891151 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281828543 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290165452 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282017497 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281237588 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281742953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280911981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280496059 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.280572997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281311914 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28263112 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280782747 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282248604 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288124611 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287846845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283545364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280117249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280416933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281256148 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282125526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281581102 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281980297 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282208579 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.280837271 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280227542 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.282519076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280100883 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280560762 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280998787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281691516 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283562129 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288362154 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281821638 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278445542 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281639466 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2816172 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281027078 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282202759 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289277324 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28466573 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292952188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290283661 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288595999 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283266147 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285939593 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.289744053 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.281635508 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282283107 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283115659 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283212618 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283357548 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287571678 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282326343 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290053875 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282284894 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28246364 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291535994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.306931736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284105044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285038802 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286812031 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283402479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28066021 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.284501786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283983208 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291523528 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305288199 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284829892 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28647465 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283454952 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286809977 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289406452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2838292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284602067 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281700038 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.2854112 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285882626 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285776674 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281464542 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28420092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283872484 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288054466 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291916998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282097759 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284474734 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284219684 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285668917 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285566437 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285212934 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282077792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282984403 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2837179 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285456994 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286463827 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286826329 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283344571 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287231599 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28701156 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287233438 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288981392 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297522006 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293287085 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283372787 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285451949 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285577975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287805437 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286515564 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287079879 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287060289 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287701826 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.286541811 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287182788 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286509024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290519945 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302173877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310002847 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287048193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28738416 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288451915 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287172431 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.28440379 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.286504414 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289055111 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290581726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295178385 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.288574887 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29274352 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308136348 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287777692 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291236229 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291504915 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294755484 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289690287 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28837383 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287643739 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29314126 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305468293 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28776274 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299511147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318321132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.308371178 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289671513 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28971139 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288907095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288355458 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290048583 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287928169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288739511 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288164086 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28889975 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290115574 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294583278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.290088423 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290281217 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.289415274 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289852251 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291712563 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286897843 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290832664 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290133286 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289680651 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291800673 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292131054 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289980627 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302567372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.316922843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291618541 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.291140022 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286842113 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293150909 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294118381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302727148 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.297684555 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291471397 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290994017 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292441372 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291536972 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289482946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29139137 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291592921 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289945244 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288403972 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303488092 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317290627 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295289784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290344959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292717292 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292916218 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292744 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291991259 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29241507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292348632 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295261239 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298033769 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.29285214 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.292274316 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296130667 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29952791 seconds)
  done (took 761.494389402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29061985 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290433916 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290519682 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290495501 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291290586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290597185 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290584269 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291587119 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290784738 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291099452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291389332 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289805688 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291359805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291088973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29164395 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290614756 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290711501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291094233 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291901804 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292417164 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29345796 seconds)
  done (took 28.315117529 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295362599 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290977839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292096903 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29478616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293367172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294051343 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292326643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294909125 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294867005 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292934635 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293806289 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294734736 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291289884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292941574 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29238835 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295117424 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29598041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29260409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.294438746 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2946921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29429866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292688088 seconds)
  done (took 29.662826843 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297086794 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297291559 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.295252361 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.29187944 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295990268 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.293325232 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296331827 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.296269861 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296601747 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297216378 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.295011955 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297345331 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.301833004 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.301040295 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.298624258 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.297518424 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297401576 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297636315 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296517508 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.294311321 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302183408 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.314587027 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.293002433 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.295485359 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298095471 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296754178 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.297989267 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296910059 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.297820755 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303835789 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.297930371 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297779818 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299907745 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.296642668 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.298332037 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302021829 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298634446 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.295062202 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.297232594 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30763346 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.318432223 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2986115 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.303632142 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.318464646 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.297693408 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301844919 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306678858 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.295480564 seconds)
  done (took 63.568129305 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298335147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298679891 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.2969745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298533903 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297408304 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298750551 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297878035 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299706172 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296764341 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296148703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298664667 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295705572 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296182121 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299560438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.299569393 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296135455 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296122121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297531873 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.29537104 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296561181 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296231765 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.29956612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299757051 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297620796 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30103447 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297590649 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297936299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.298886722 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298323874 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297587692 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299641763 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300555055 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.301318619 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298580531 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298770536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299919465 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30141702 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297762696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301548564 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.298450423 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.30091689 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30156348 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301424011 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301535548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297912055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.298315915 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29767173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298047972 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299379636 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301301406 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.300386548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298734576 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30127407 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299684838 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302203618 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30259068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298504167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299476162 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.302857602 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301162677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298840244 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301950682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299890565 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.303229091 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302869356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300487335 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299664322 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303243872 seconds)
  done (took 89.556670382 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302999719 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303681681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303550877 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304026566 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304434785 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304128736 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303858796 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304283147 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30293588 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304733867 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304001865 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302994251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303948729 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303958764 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304393245 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304556678 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305035915 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.3045317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304800243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302984342 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304474393 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304620059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305094488 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305707988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303206247 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304768201 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304204767 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305250632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306735853 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306504812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305267165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.305162365 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304194986 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305374055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.305535197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.304564716 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304933214 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305771323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307757985 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305637211 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304140802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30671344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304918725 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30642937 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305879781 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305960761 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306223764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306522439 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306642273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306856026 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305553483 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306485182 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307605403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305989902 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306671756 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306272547 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307018585 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305159928 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307907929 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306921588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306719855 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306738618 seconds)
  done (took 82.135639149 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306959825 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306499502 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303826016 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304059119 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306166206 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303981818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306343497 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306534295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305839518 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.307146111 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307965876 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305087403 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307642946 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30812866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305313259 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305193567 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304781623 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305258588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307482666 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305179485 seconds)
  done (took 27.331954168 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305634778 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30758214 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305520392 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306589672 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309535823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306818958 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308164903 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308594751 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306643219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307794627 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308158044 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310277138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3059905 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307082305 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307387826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306345463 seconds)
  done (took 22.132242134 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305949131 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.308093923 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309985548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.309506623 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307571201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30563181 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.308520201 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.307747208 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306456512 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309763407 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.30887802 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.310418647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309730581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.3098015 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.308524582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309696204 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307078248 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.308163622 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309068906 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311059145 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308215755 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.306302476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.310482341 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310344842 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.3081311 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309342049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309740871 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.30915883 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309102768 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310758478 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.309741474 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.3090588 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307966594 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308620771 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312097334 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.308355891 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.3114781 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310911465 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.311725646 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310088077 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31119535 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307331039 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310017909 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310584457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.30896583 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.311747611 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308687819 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308995849 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.308453377 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309610743 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310850032 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312360522 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312975397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312380547 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.311741748 seconds)
  done (took 73.236339251 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312331691 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311478051 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309960462 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312960374 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311762728 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.309072927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310853136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313418771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309220464 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312505649 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311518296 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314035693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310443988 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313002092 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30993991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313137664 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31065631 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30898097 seconds)
  done (took 24.82401591 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.3102028 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311093387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312839565 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311030628 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310293021 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313177021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310348665 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313550867 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314097789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.310914257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31123142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31412629 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313822192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.313836601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311542388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311357079 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314609608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314441539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31215984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311483073 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314635137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314325093 seconds)
  done (took 30.094500177 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.314284074 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.313136868 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.313732434 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.33198377 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.333185418 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.31545903 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.313723093 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.313893938 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.337787059 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368171904 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363164119 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.334015507 seconds)
  done (took 17.173419508 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313705267 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316264269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312865032 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316187685 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315905767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313555263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314937098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314967542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316187403 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313916864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314800199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3161414 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317253663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314762847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317035187 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317357333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313574624 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313432905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313561423 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317960924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315047933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316997455 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315572745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315892599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31595253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314178889 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317160839 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31704685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315396066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317081152 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317037886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315258025 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316800108 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31579702 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317293549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318296318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315692306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317724872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317028437 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315193729 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317278895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318719453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317602582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316433279 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319074443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314970371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316194216 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317268677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317506026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319533101 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319379694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31778085 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319789487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319243594 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320264842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319639975 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318398433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316559046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318863787 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316096161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317788174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320249034 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316444392 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316540661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319402499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316690078 seconds)
  done (took 88.121725762 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316627073 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318154126 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316653623 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316677022 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318051967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318315656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318510961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318076436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316982641 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317647935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321592157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318505285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317809509 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317636568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318619141 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317685635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317869009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319073356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319251567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322323993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318842906 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318756585 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319872627 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319729025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319854518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322568081 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319246878 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319766969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319319083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319399684 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319791718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32043638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3192114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319449824 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31976688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319867211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320335336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318491487 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319734123 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321881136 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320465943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322908435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320330336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32064027 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32061188 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319685737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321036996 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319995091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321383205 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319816792 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321691603 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323747045 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322032211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321489395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320782751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320916276 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319917745 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322451823 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323167811 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323979433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322259062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32218973 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323480527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320922568 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321802875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321904511 seconds)
  done (took 88.349943445 seconds)
done (took 1783.122407255 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488316136 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440730313 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322088148 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.337798338 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322644606 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.345838116 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.335902667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322578388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323014882 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323385197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.323090651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.513555705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.379695996 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.323544527 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322753341 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41646499 seconds)
  done (took 27.071856499 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352941728 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329459547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.451614252 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.351882103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.353908458 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.526342249 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388699811 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.328843455 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.51635899 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372967777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.319522887 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.371274033 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329400519 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.332050615 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.347509366 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527481224 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593752644 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.320017567 seconds)
  done (took 29.344245437 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824193633 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.357825002 seconds)
  done (took 5.413979235 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349273284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329708638 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330908936 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327904166 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31867891 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.338990483 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327610488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.322611587 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.329516626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465587235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330132031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338922014 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350391406 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330837402 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32692431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.369829624 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486917935 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.327216084 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32601638 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334235596 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329723224 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.425933884 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374563622 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.329279584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.465343001 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.332259085 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330392421 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336419094 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.467776393 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328869857 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329036285 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328665911 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330883738 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.289952624 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.885221861 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.325267655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376150681 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338965271 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328411355 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.504780058 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331596328 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.336220222 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.323643489 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.856239004 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.483655793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45955087 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.345969822 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.331719094 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332650312 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.397729627 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333564598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332724133 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376280883 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.149747563 seconds)
  done (took 85.347266337 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.339045507 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.323194454 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504428456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.344998381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324913044 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323736369 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.342750749 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645629329 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.349681971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325524084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630206094 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91495532 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351809671 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.357161496 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.165013239 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.372760933 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327934309 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.344960478 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.345490992 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.326067465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901272785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33916183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325856841 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.486011414 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366948644 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.855192856 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.326312484 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.326144113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348065842 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.325868116 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863390518 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.347692176 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376336328 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328893564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606260443 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736329687 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69676744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.328206732 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.329132055 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.336704684 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849361521 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.7238918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333734258 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345519137 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85256629 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327363685 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.338735877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.331220232 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576333237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.330085461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.340209682 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325502813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327343322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.325779639 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.435117766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390834508 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.854904657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327368995 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.325232818 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.365745094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32597374 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.334892828 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325252798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323895448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.728973467 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.462160857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328322123 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.728628676 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868959607 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.347122469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932441903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347894134 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.331145378 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.395227994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324919651 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323990961 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864528474 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353266628 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323997748 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.706485324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.334971431 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621879367 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.349874107 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325006768 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909911445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.336008216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.330223156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.325280486 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327464198 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325730175 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328085975 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623452459 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.369783026 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324457262 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.324941986 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.339631064 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324601228 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.323577207 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326759195 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925549574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.349245052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322824939 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325415365 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32384568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329571017 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.323733798 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325647863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.591248615 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325708355 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.324882443 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.326003971 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32516089 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.34529393 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.470772823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.330390253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.673651999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.331684683 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322871859 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328152542 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323142832 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336128978 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325448854 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.324910239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243224199 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.625330763 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343999361 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.325410686 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.327438855 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324185271 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354574548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324053631 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345261287 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329290009 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109857478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359653253 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.333618008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324054414 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330752619 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33447619 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334129569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326094591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62336825 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612206497 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.466801259 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325705344 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326147329 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.111054079 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.361919056 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50802088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348964774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32743573 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571165947 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521832588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.330210761 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.326260159 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.329655508 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587391373 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.332614542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657123562 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898916834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351312053 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33833851 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.1160381 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.0826834 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.332737739 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.329221498 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.618586803 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.351704923 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.326919548 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.327973005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327962546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.347027473 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.351815434 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328041736 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.327773429 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.327733562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.54154728 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.520325485 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.350767255 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.338210753 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865466292 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416543533 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328971715 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336265577 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33262749 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.328264515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405356214 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.331775031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.334479612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.330384683 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332230505 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.932636398 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.335409971 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.334868777 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.520947081 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040854406 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.353027139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.346701417 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329158269 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.205883332 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.892053095 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36812789 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.680249404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.345101901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370292837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331145539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.370680221 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88994031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341829796 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330193094 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003313291 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.353216241 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.995823817 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.330530867 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331028766 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971332856 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.353600295 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.334606576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329565781 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354960033 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.63252535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337306132 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.370411339 seconds)
  done (took 498.389506282 seconds)
done (took 646.795568134 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329596225 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337242944 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322078218 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32953474 seconds)
  done (took 10.559925833 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.339040787 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.33540232 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.337447462 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335684025 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337623867 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.335583596 seconds)
  done (took 9.25946652 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328595576 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.334139725 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.33291495 seconds)
  done (took 8.23471385 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.562476126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.355747829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.688582189 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365313451 seconds)
  done (took 9.211548615 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.339546485 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337864966 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338159934 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.338529858 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341375218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34094605 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.339415129 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33978546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341263832 seconds)
  done (took 13.294640321 seconds)
done (took 51.80124484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.332501661 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.322888809 seconds)
    (3/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.483183316 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.145476626 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.327824278 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754514023 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.342410416 seconds)
    (8/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.401873512 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597468561 seconds)
    (10/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.34240651 seconds)
    (11/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.489895779 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376486039 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357436858 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.441402324 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.355031093 seconds)
    (16/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417177259 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.984335323 seconds)
    (18/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.322700838 seconds)
    (19/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1834508 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.387968055 seconds)
    (21/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433322495 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.335674588 seconds)
    (23/286) benchmarking ("sort", Float32, true)...
    done (took 2.333116644 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.319199 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.17767824 seconds)
    (26/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.848386986 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.350250052 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.449871904 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 2.331440615 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44000703 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.318749077 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.119275544 seconds)
    (33/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.343870267 seconds)
    (34/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.347881255 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.257049944 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.327440811 seconds)
    (37/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.327005292 seconds)
    (38/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.358650527 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.107613511 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.341925 seconds)
    (41/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.999431482 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.451351701 seconds)
    (43/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.325361957 seconds)
    (44/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.495664986 seconds)
    (45/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.326910295 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.299952524 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.446183406 seconds)
    (48/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32211732 seconds)
    (49/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.438038488 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596424667 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.349817308 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.419009088 seconds)
    (53/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.322222019 seconds)
    (54/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.86949898 seconds)
    (55/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.159507599 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.33831052 seconds)
    (57/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.322031681 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.416375224 seconds)
    (59/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.322396585 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.603814342 seconds)
    (61/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.255784561 seconds)
    (62/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.207837639 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.398044339 seconds)
    (64/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.345245336 seconds)
    (65/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42286099 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401418714 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.322376271 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216681537 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.588970653 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.366958622 seconds)
    (71/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.323603156 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.368623064 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.366626108 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.323247727 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421674884 seconds)
    (76/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.323166944 seconds)
    (77/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174079676 seconds)
    (78/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.361628867 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.339480131 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.348080035 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401904217 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.867495821 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.131009784 seconds)
    (84/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.435637946 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.336858388 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.352126934 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.678307095 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.466425556 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.340520671 seconds)
    (90/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323322067 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.568004213 seconds)
    (92/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.364518497 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.354414986 seconds)
    (94/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.325505186 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.338276333 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.329360066 seconds)
    (97/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.551625581 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.323515756 seconds)
    (99/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.355955864 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.366077066 seconds)
    (101/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.326572835 seconds)
    (102/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.335542069 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.325549281 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.575510511 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.929554155 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.325336127 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.346488233 seconds)
    (108/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.375740485 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.341484478 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427012157 seconds)
    (111/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.339364669 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.749119799 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.374737709 seconds)
    (114/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.694209538 seconds)
    (115/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.326908693 seconds)
    (116/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.340422041 seconds)
    (117/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.338692039 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.256257994 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.889948369 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369059847 seconds)
    (121/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.333464582 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.60376186 seconds)
    (123/286) benchmarking ("sort", Int8, false)...
    done (took 2.340171297 seconds)
    (124/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367597832 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.366948678 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.355760344 seconds)
    (127/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.346654055 seconds)
    (128/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.342290666 seconds)
    (129/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.368139016 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.156604509 seconds)
    (131/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.330378902 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.638962978 seconds)
    (133/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.526153929 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.349573954 seconds)
    (135/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.328183166 seconds)
    (136/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.332258776 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.493699353 seconds)
    (138/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.328664365 seconds)
    (139/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426960783 seconds)
    (140/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.329312812 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.16282762 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368208417 seconds)
    (143/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.84383149 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.99163228 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.333077071 seconds)
    (146/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.410659491 seconds)
    (147/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.189887505 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383601996 seconds)
    (149/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.39883146 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.366606923 seconds)
    (151/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.335906408 seconds)
    (152/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.454279513 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.864596282 seconds)
    (154/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.332336656 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.331455592 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.241122735 seconds)
    (157/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.704587092 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.356708506 seconds)
    (159/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.20004624 seconds)
    (160/286) benchmarking ("sort", BigInt, false)...
    done (took 2.346883421 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.332482136 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.356508556 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.758331453 seconds)
    (164/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.472543306 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.287558899 seconds)
    (166/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.334218761 seconds)
    (167/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.336119606 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.379342653 seconds)
    (169/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.372156448 seconds)
    (170/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.329799505 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.444694598 seconds)
    (172/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.344733678 seconds)
    (173/286) benchmarking ("sort", Float32, false)...
    done (took 2.349233258 seconds)
    (174/286) benchmarking ("sort", BigInt, true)...
    done (took 2.344994637 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344165734 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.343875567 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.699433843 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.411800467 seconds)
    (179/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.352637673 seconds)
    (180/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.348725222 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.331925488 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.358860412 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.33530936 seconds)
    (184/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.349258628 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.616749691 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.357523718 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 2.369768463 seconds)
    (188/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.717430645 seconds)
    (189/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.363745337 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402112444 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 2.345798808 seconds)
    (192/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447645634 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.361192456 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.864092716 seconds)
    (195/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.257244988 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.356739669 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.849349305 seconds)
    (198/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.019247658 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360530919 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564011261 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.37262215 seconds)
    (202/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.331939983 seconds)
    (203/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.3374622 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.331711747 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.361663395 seconds)
    (206/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372505414 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.430245121 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.24763992 seconds)
    (209/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.335148614 seconds)
    (210/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.716670258 seconds)
    (211/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.476565953 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.345187621 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379640389 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.332959467 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370052269 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.331098714 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.196603067 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.386701459 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410687784 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.361486274 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370958452 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.377420818 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.336192999 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.334959014 seconds)
    (225/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.347543564 seconds)
    (226/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.333534026 seconds)
    (227/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.367860424 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.31310293 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.349605132 seconds)
    (230/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.455967625 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.333777293 seconds)
    (232/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.333951469 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.363143823 seconds)
    (234/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.334328488 seconds)
    (235/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.753995726 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379593798 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.350431709 seconds)
    (238/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.336358102 seconds)
    (239/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.361998743 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37514956 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.338778156 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577474991 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790166532 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.020667991 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.339128344 seconds)
    (246/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.197940621 seconds)
    (247/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43275214 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.371649184 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.37894704 seconds)
    (250/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.348485636 seconds)
    (251/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.472804188 seconds)
    (252/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.33556234 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.367638758 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.729940837 seconds)
    (255/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.46420483 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.375807952 seconds)
    (257/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.337223101 seconds)
    (258/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367789579 seconds)
    (259/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.374394125 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476192411 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.314480367 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.368113634 seconds)
    (263/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.349051344 seconds)
    (264/286) benchmarking ("sort", Float64, false)...
    done (took 2.349688035 seconds)
    (265/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.351161917 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.46300603 seconds)
    (267/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.337564783 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.43406871 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.432214977 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.496542123 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365261919 seconds)
    (272/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.475858529 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.348381617 seconds)
    (274/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.33720078 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.451642249 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.348534203 seconds)
    (277/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.005843369 seconds)
    (278/286) benchmarking ("sort", Float64, true)...
    done (took 2.351270028 seconds)
    (279/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.458918184 seconds)
    (280/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.35096652 seconds)
    (281/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.716301923 seconds)
    (282/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.395623269 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.349238804 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.394491507 seconds)
    (285/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.394240121 seconds)
    (286/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.360949707 seconds)
  done (took 571.291240407 seconds)
done (took 572.530947783 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383299644 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392764322 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361166053 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383715464 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472953861 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.537718549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370753636 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.3633581 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.410194749 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411068926 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359770767 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.538603468 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361982673 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362916877 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.36259115 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391906495 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349251022 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.364727292 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377920363 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.373447684 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37800335 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360383095 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411247741 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.537875398 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.36564129 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365664227 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.364999211 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381873733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474618634 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364930768 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365734345 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374050116 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.35454239 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362024181 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358572744 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381447898 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.372493783 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.371979749 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367364668 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394654063 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361787142 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.366724444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.363810817 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.363996404 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.363553737 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.370393588 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364936512 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.371398145 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393145363 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394127194 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.3616382 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381808812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366858494 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364700614 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.37510951 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362932718 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.368754769 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397371203 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384374419 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397819714 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.36873082 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370408197 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.367040623 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380502986 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37244401 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360360689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364407248 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.370063492 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359826085 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373155135 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.362803104 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376891434 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367867479 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.379128785 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397011263 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.360645541 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.36147899 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.366184093 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.372941374 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363306762 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377158145 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395755233 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371686602 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367426454 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394660249 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.541180305 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376616099 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366369563 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374939794 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385312372 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373150549 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377306704 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37065997 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363608819 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376692535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372917807 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369403643 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368362705 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.374428098 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378930353 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.363590607 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404077708 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364556338 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.365382569 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368067567 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.382342847 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364538757 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.371211451 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.389549201 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415880967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.370599932 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359589998 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.373712941 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401014815 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.378462896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.371362385 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364900033 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358471595 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.393775596 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386037143 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370573731 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366270965 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40159375 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371622183 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366774046 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360095163 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.37399572 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397703083 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.489569913 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.378502027 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401218453 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367499518 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373578902 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.406233002 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403140108 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.40004161 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373627457 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402329485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385391227 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367089639 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379766324 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381587706 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371955043 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376864912 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364733166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402128279 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399705102 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401793814 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.392370929 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491728904 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36846929 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358720457 seconds)
done (took 227.445400482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431235121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.367181528 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.47758425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368252341 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.470754672 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471433166 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366832587 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366081216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366526791 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.748151135 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365146561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366409561 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.366687222 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366393043 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.452676988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.370484485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36758452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708883497 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.371097258 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441066617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.369778006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.368730454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369031523 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.754083514 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.368946378 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363671946 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440842482 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369427674 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.719835044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.363341179 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.367213997 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717204273 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460622695 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386042924 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379543791 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37706804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471763561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390563434 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454742417 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.453710507 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.481897065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409356951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.36538574 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.370923248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372669207 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37127801 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369457405 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396856026 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369209607 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.369266327 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712553272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.38324364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.370057295 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370602312 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369751189 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.402964091 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37043191 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373008083 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.462937222 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373448987 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436146828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.757393025 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750815163 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371203353 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.369419655 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371502362 seconds)
  done (took 106.948816901 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.439731773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.448149114 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489129498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.394157461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423397376 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494542854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.393979188 seconds)
  done (took 11.354576456 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37860143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372506406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423021357 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422600415 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372939141 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.584655421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374755985 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383981452 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371440051 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449625982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.374600293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374465715 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379769321 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.370042842 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422736225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.385127581 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486918681 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373795158 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375214556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528678038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372511437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381118395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.450513929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384475712 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376266235 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.381705906 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.329728403 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37549702 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373321544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375584464 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372317777 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.483606233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376219803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371756535 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372937244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53445951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375037618 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372485885 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376344291 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.375909344 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374583942 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.376177964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375141865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.374859137 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375931373 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.399360555 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.377562192 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.37636062 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.375640428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378139624 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.452401411 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377121717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373537674 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374596333 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453821987 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383410253 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.378055707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.374212767 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377441703 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374929953 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52926184 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.425335101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378673721 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424269501 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.377572791 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37728911 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376827569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376665219 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469831336 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37791321 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426373204 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.374964784 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.601832857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402586017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380108015 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380805903 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.381048087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37955809 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.375135787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.385179747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375243866 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379549072 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.384606976 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375824444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376836204 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.562987844 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535718137 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375595044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390795905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.386123348 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377499451 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456418148 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378772893 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375844099 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43027317 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494201896 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.456853569 seconds)
  done (took 142.309923696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.385594806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.388099372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.383840777 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40127631 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379869431 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379213162 seconds)
  done (took 9.594427506 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.382834154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381730927 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380458596 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378580929 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378912936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382148313 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.381667049 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381856958 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.385546796 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380652182 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38144801 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382108911 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.382903591 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381591381 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.381763261 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.381662425 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.383752916 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380005258 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.382866093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383235303 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380083467 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.382963925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381390038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.383868852 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385728306 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383526314 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389642716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.382144637 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380730018 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.389212595 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40487026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38235321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.384380351 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387906087 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.387717833 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383663905 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38724147 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385019347 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379171956 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383755441 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384362512 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383207844 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383991103 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383143013 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.385367116 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.387597053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389376148 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39110805 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383639144 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386642894 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384438104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384594141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383993192 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384842278 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.38588078 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407441468 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390848932 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385382149 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.385406142 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.387494869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.386395153 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3852546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387992856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390061251 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382716315 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385684547 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387724803 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389627688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386752214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.386020609 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386430598 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382349861 seconds)
  done (took 101.997499995 seconds)
done (took 373.47287282 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.376644414 seconds)
  done (took 3.65944747 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.4760957 seconds)
  done (took 3.760812515 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.18454751 seconds)
  done (took 25.470577028 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.405506683 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.445037371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.398591432 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.386230945 seconds)
  done (took 10.917315425 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.683162586 seconds)
  done (took 3.964610279 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.378046573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.377544086 seconds)
  done (took 6.039254596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.724550978 seconds)
  done (took 4.005499186 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.796445952 seconds)
  done (took 4.083239908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.39563252 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.390217864 seconds)
  done (took 6.076478271 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.379831885 seconds)
  done (took 3.661378815 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.044121856 seconds)
  done (took 17.326886597 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.381969201 seconds)
  done (took 3.666550936 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.421226654 seconds)
  done (took 3.702369225 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.391167469 seconds)
  done (took 6.672594476 seconds)
done (took 104.289143864 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377657449 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.380140012 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.380462068 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380490606 seconds)
  done (took 10.801545348 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419546948 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418854051 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42242486 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429631696 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42244403 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.422177938 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.414340703 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413436315 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429895404 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422472124 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422410658 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420675734 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419915063 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411891929 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.423576826 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.42241308 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.430623708 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.422388746 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412647302 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.4229477 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385706697 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431607962 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423417807 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387776187 seconds)
  done (took 35.336724026 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.910241742 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.461680174 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.542662992 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.441295756 seconds)
  done (took 7.639244061 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438188893 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.44155139 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456422264 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491677197 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518511137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45039629 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415011595 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409316829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.39525857 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441712414 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516563283 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457406951 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527228091 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387780061 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581150934 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.389679415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387677757 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439480914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490877878 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520759324 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388603297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439114089 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446093394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456967396 seconds)
  done (took 36.172031249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38788631 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.408391232 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388620046 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387237227 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397996297 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.387341922 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388794378 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.390139519 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388275745 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394230959 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.387733636 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400295695 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387619231 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388081561 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39475852 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389911216 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394970868 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387996374 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389022284 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395147091 seconds)
  done (took 29.120817031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.382062552 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.382007775 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.736468519 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.63979427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.382255607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.382968125 seconds)
  done (took 14.192640244 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.46920047 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.646911396 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395611382 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.787890537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867976719 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392486857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392935177 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666931142 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.043015194 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012469835 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.460003462 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470786532 seconds)
  done (took 20.895368274 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.393610422 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.383264593 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.395271146 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40142023 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.452850987 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.416181741 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397023007 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.383451597 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.456856467 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.476767071 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.417084569 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.455528406 seconds)
  done (took 22.320383279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473241373 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386493106 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389572445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431897571 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385970208 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599332346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44597455 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134351861 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411861737 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661066692 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385740481 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480175834 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642101862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38919628 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391614329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.380263096 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618013149 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93740961 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3922677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392675753 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417531728 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386540401 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420099014 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631811633 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387076678 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386940657 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647719261 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387168547 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707714567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406154865 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398053039 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387682268 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662447854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096299356 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505698097 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623748112 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389234852 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389618358 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.391473899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.39918454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401316753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389442612 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399382563 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388477306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389406084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40319907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150780904 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415789056 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387125496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388567794 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681877147 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487798452 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393018392 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389820254 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391731754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38976825 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.393555118 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490470496 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958373085 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389708472 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396096042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396545104 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387781567 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399362416 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070640273 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396708327 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392840779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394689371 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389422561 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395369284 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413557969 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390239408 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416784535 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389506273 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253075137 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412762179 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396099072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998667428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398685123 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.398338919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6209816 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390934834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390635359 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388894528 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390878752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198977572 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405602195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.376122425 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417402085 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16517628 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652110317 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412209928 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417370706 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61742388 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.377764389 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391341212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.407618432 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398774614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41471962 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145725774 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414222215 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.39709061 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649470549 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603785698 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396508399 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394887882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917599547 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419050437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.412979684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393746744 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64172611 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048145745 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417168548 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410256846 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418333481 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394163672 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236336579 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410083196 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499055654 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406700127 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689231448 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.280412414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400354576 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461842233 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398210336 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394886313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410050264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402861408 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394520127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.628194592 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427241304 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410323788 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.39608659 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393780964 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.392967848 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400805218 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.396070392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619713703 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401958441 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676706361 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395202404 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394340874 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396169777 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61966039 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.40492717 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.73179198 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656388703 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402964465 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408252921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41275978 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414863601 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495602268 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417627548 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.396436351 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658732013 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400967181 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401648125 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41178453 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402590105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404886493 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403709782 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402227731 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044353165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383914079 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399252107 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291149976 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.413406306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465864758 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404369617 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638277947 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.394976019 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400618379 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402812256 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395096406 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626796988 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408084157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.408476413 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483441809 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.918580033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065428516 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41313136 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.398667309 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.395899911 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.395000915 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397757015 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398238462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39865564 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639322843 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415950172 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404282334 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044176565 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400509976 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409299496 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40905186 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410549021 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.405551603 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398176847 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.395522647 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398392926 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40733787 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.41606585 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542571522 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413909066 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400350177 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917326816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405048286 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400642185 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400059124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433895473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414023962 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269887943 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660035457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399065015 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694000602 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416481683 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422241519 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.398762669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399775858 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42094614 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412316186 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409560094 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412399065 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415173052 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409139869 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968634235 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208457926 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998219077 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403860079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.422774282 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40767272 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158995329 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423864943 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403548163 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661085981 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180905168 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423039699 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927632174 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.431279994 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242844738 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697860801 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638135535 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404051882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.422835706 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718871246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620915608 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437805267 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404919894 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407537833 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.388642037 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01728881 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43780596 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480794951 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163509396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423733641 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403965207 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.427795132 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412681116 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861321827 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424764461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402689711 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409442386 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409020834 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287347339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405299442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403443552 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088626217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422222696 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.930385987 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425245639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645936913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41766789 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.409415639 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.415633148 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.403978128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661655631 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701523033 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411557431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404947024 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026056303 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266989582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.410817784 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40719799 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256703348 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419709517 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734536881 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.427649973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413739604 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41350486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405432257 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405682115 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401983703 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411318504 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39226473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946176461 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.427335647 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419296935 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423403561 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264190054 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662449734 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.420247538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053777116 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633044339 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413979315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429784166 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409683935 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4133597 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.394907948 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407917982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643305366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480082423 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632618588 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427571051 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.398693732 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455929223 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620185367 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407550442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406766838 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675971921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405549138 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.420574045 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197572328 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436259301 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407889386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409811232 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411325106 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429684314 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479922183 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649995283 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.421473638 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418755205 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860902079 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429695987 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409669392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423342789 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502974391 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425216276 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415547453 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183840915 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062219332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255853398 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061378456 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709650428 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417130378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412250997 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410548668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558982045 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40984631 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68439073 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40850823 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.412917517 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456449491 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42062808 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411719757 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629899936 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685870421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409577979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417198495 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417388523 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410543813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423206975 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623723296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957267602 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017169647 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414060366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410309413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198915141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707292979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411473064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413822361 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412354898 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.427851847 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419430107 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424190244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421261111 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560542895 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7105681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131109267 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44433083 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.439736282 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188359766 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413415935 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670817282 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410765624 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682137117 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070429331 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190580469 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678498039 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483616448 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655901669 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414777074 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561427386 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.420202143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413384324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413545732 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261028178 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.410642896 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423202688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068994136 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677045029 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417134985 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.420527555 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437276378 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.424706713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639334403 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230304108 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645734043 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425899876 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416913028 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414892758 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071802704 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717513737 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421547996 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419163272 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680580529 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415476965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440618874 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867461425 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.411583977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02654137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.392168441 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437009584 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416724659 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197765415 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070987834 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427717717 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967804698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420249151 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415095199 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696295598 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.420831951 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420090605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697948841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419035344 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416206523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68896241 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.073933829 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26884129 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.431121335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419098498 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417351034 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416618676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419859203 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417953007 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424411502 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.897990405 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442978822 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417091438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429551936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.428711729 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42472431 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.420278935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418072609 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.423774945 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.404879881 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.414818768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423481519 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522685958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030507652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443080324 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.08514048 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.749677315 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674505145 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434354334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.410085482 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423201994 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41859131 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419228879 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419904415 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433756012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0312682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.437695405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.435004728 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423674479 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.636728763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631379911 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422309832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670397065 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425010174 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441484499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.40470914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420449702 seconds)
  done (took 992.851627929 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.469818404 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.443048795 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.450117975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.449802311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.483310207 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47612232 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.501654752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.451702506 seconds)
  done (took 21.045503389 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.426781523 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.429928918 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.423482795 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.429628499 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.426252583 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.945779211 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.44003177 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.431022639 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.430532717 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.428420745 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.42138938 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.168093334 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.451279128 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.436479147 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.415329421 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.43079082 seconds)
  done (took 33.462334188 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.622762772 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.671527473 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.8692953 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.491484534 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.461370321 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.422836155 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.792270497 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.453886491 seconds)
  done (took 28.107852118 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.434095198 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433022152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432808798 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433293877 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433529877 seconds)
  done (took 8.489510688 seconds)
done (took 1261.719156255 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427454473 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.429153907 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426526486 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428686864 seconds)
  done (took 7.035004863 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.409916285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.410241942 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.410730727 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422398611 seconds)
  done (took 9.97483295 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.246707101 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.138781767 seconds)
  done (took 5.707638458 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.425829827 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.187863796 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160996088 seconds)
  done (took 8.09736416 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.742445601 seconds)
  done (took 3.065945526 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.836406354 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79211386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616292562 seconds)
  done (took 6.568614234 seconds)
done (took 41.771949164 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424583964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.679747633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.580516776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42807533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.585271695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578393259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.214139699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423894402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429709177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425969403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422122769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.603999811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.199529034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.681170769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.199323797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.775309826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.585562811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429760291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422906546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.446697824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.213587809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423912593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444078542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425655599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.586791608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.570823933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.424642319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.776069166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.42275086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424112713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.570434951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.427739151 seconds)
  done (took 84.575018094 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424113723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424752687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426094733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443638211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.425396777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425689382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.462178928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42365987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429753444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427133743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.424660612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425243978 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.441151179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430791654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.445147587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433393179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427007099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.446286341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425657004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.442015922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.427140574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.463893559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427414265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.444670126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.460071775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.429077263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.446527759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.449400423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438777249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426702088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.444813268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.44365655 seconds)
  done (took 79.281785734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.436847275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430317259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.435468612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427026071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432966003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.43509351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429395207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426167798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428021165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.445161237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444989685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.43242086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425521615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426857567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.446880018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431925238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.440423698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.442612938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438972673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426743664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428869699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.441194088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42887838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.461867535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436759273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.441391333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42861819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428807696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429343251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.448544776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.44273841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428553415 seconds)
  done (took 79.256594488 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631632889 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435461646 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436599948 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370898614 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436857689 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435693439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429867486 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634568256 seconds)
  done (took 15.140283711 seconds)
done (took 259.58648892 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.43209898 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.442954883 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.651509649 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456871009 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.43737489 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.458192022 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.458577369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.670599831 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.449843707 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.693072488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449447298 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45522412 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.429058667 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45623108 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.728935595 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.589198378 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.430208961 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.433212026 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.795274058 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.454108044 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.718234108 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.435360387 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.742752165 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.42365733 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.452828257 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.433142926 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.450935109 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.434378131 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.478549262 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.80367705 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.449926152 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.419055274 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.527222952 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.547614649 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.660487793 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.601899692 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.431430441 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546400748 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.668811426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.449200024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.431772352 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.258991887 seconds)
  done (took 86.069459633 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.43896694 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.560182652 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.438868653 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.439575468 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.43967278 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.562709508 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.536364242 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.439750966 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.438940866 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.440656226 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.439486074 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.440517907 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.439698556 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.440996199 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.44105906 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.440926971 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.43993404 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.441968896 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.443184319 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.486852507 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.56815402 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.467312115 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.435300035 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.441012875 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.544351491 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.581148381 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.442533079 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.433358213 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.484679765 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.441774966 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.443128958 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.489816741 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.440309978 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.441974387 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.562344329 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.544043982 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.465331215 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441383658 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.555704879 seconds)
  done (took 58.748000822 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443778473 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.706270219 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.897076366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450035886 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.443651303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.447006691 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.53016493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.445292914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.447215418 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.447076064 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625603439 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448931676 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479949746 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.926573374 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.448613034 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445463023 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445098903 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.444841904 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.718222866 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454516134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.556148155 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445615703 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.532839031 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455376328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471151954 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.446888674 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.450261958 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.045374314 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.448138107 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.626189991 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.349172211 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.533636775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.001452756 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.911537256 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.35251072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453429527 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.446653383 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629090283 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.447658877 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.4460189 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.533684073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447685426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.909696468 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.145476671 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.467956143 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445913212 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.075158874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.628289072 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.723285512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455986453 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939555218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.450598286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.448650716 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.448573129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.723459207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.454377336 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.44711166 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.087923679 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.471934797 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.534826796 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448422269 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.447925556 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.720817516 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.448431961 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708522894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.450716373 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.456177306 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471352812 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.914457424 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450576408 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.170101942 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.470549128 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.449507136 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.626277208 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709984293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.103940961 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453399353 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724730586 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.016342457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.533585656 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.45299201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.039353935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537637186 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.45409621 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451274418 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449466078 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.449095034 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493728758 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.534231043 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.107007356 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.166723802 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.11372377 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.557496154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464350446 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450065807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.091136302 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470245784 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.45005008 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.906188137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.171541449 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.471868878 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.458236738 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17392173 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.472438618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.538795966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456243943 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.921198084 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.452889518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494562565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.450938154 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.455993806 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.477877243 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.537892688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.454699209 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451716733 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.143501533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.659143779 seconds)
  done (took 191.582065902 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.44375139 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.465851905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.461754289 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.453948482 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.444483821 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.452779805 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.445379885 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.443783293 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.451964862 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.444361944 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.4452199 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.446955338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.446631998 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.444564977 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456767086 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451522635 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.445511248 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.446427673 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.461605354 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.445584794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.444879773 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.473423363 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.446843945 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.466921407 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.44667598 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.447008493 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.44991551 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.448500643 seconds)
  done (took 65.967174419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452673162 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.083951014 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453293544 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.600784678 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.477161956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451735086 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.599580552 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.519050568 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.457516369 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.449342703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449504442 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.790475131 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455064593 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028699042 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.672160949 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.623606604 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.032479598 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.475419571 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.452232834 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.451482336 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.602564482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.467005108 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.791994223 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.104913209 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459171032 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084680123 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.445306517 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453416101 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.454447951 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.112766707 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.457835516 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811336815 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547164379 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.520267827 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091086592 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.033138822 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.051157772 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.625878869 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459212069 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.452888369 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.454595799 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.451239282 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088612085 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456535925 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.456493339 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087033729 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.476174566 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.457502607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460234435 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.454033317 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.523770337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527295145 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.79980447 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.09465336 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.542813858 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.470477086 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.608132143 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.873883425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462988817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035267407 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.465800529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.093023651 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.479802505 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.446324204 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.457097408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460731691 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624153823 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.61145269 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041532489 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.478829751 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035618015 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.644786188 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.456673822 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.456523667 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.457313178 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113695054 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043420476 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645199262 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.608765711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.678409892 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.450329296 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.457331422 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.44850374 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.543536237 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.458027423 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096404064 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.061576403 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48042769 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460219682 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458501384 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.459539925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.659132127 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119677413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.545308593 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039409265 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821524433 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.803050823 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.461204659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.527204517 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.479775792 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805366021 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.461104366 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.524828525 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.956131707 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.81073131 seconds)
  done (took 174.819941309 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.726330466 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.491427706 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560132346 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.622779285 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.108691643 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.078090552 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.455512357 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59223154 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.58531126 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.744379809 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.47597447 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.551198183 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.690751283 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545711399 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.23903326 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.536498998 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.561576623 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.622617786 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.610656847 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.466955042 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.143239251 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.788184757 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.663398462 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.478054484 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576535576 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.328444898 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.087662856 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.012534426 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.648034258 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.45494235 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046220339 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.467107328 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.46043033 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.182118863 seconds)
  done (took 67.955475948 seconds)
done (took 646.470911685 seconds)
SAVING RESULT...
DONE!
