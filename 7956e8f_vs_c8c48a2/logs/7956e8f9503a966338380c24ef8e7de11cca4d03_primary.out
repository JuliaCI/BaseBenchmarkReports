cset: moving following pidspec: 11674
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349244438 seconds)
loading group "string"... done (took 0.562905882 seconds)
loading group "linalg"... done (took 7.725334367 seconds)
loading group "parallel"... done (took 0.173326262 seconds)
loading group "find"... done (took 1.192517266 seconds)
loading group "tuple"... done (took 1.857215738 seconds)
loading group "dates"... done (took 1.278769096 seconds)
loading group "micro"... done (took 0.238300089 seconds)
loading group "io"... done (took 1.111307944 seconds)
loading group "scalar"... done (took 42.494726982 seconds)
loading group "sparse"... done (took 13.612694955 seconds)
loading group "broadcast"... done (took 1.040472483 seconds)
loading group "union"... done (took 14.567518554 seconds)
loading group "simd"... done (took 4.831278072 seconds)
loading group "random"... done (took 9.838933788 seconds)
loading group "problem"... done (took 1.996351167 seconds)
loading group "array"... done (took 22.6917312 seconds)
loading group "misc"... done (took 2.053411693 seconds)
loading group "sort"... done (took 3.452242222 seconds)
loading group "collection"... done (took 19.68106374 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.462219743 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210064104 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260722875 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154403608 seconds)
  done (took 1.99352861 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18915296 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148201734 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131911226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.076612748 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.139636499 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094017493 seconds)
  done (took 1.508326078 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330730915 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259864804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228026445 seconds)
  done (took 1.506123944 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305771704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.258516668 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445501415 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283134219 seconds)
  done (took 2.080600056 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.191329727 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117359614 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095874089 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.09442155 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177897888 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.223099561 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129217736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182953463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092278377 seconds)
  done (took 2.040225741 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.217266674 seconds)
done (took 10.043415691 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61981994 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.423902272 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.244410249 seconds)
  done (took 2.02020983 seconds)
done (took 2.721653149 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.711657041 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272430439 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205399193 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464671476 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193889766 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217628889 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67651924 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369203439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25574293 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099334396 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143556769 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388526052 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137959938 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680733462 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090829695 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127473113 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179556201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467981602 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082715112 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110295986 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117814295 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145345185 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131533712 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093886014 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187594062 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082166056 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197954743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111822907 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083219015 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28306709 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202167674 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684716847 seconds)
  done (took 10.933879144 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101503209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.124070645 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09767044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138704928 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135593862 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100014616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08733386 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098408497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125464852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17896923 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115375927 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139401863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097035248 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097481136 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118903018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248327465 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120757969 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101285572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103169928 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089622781 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141344126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115310168 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111895086 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095517178 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169338138 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225992621 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114353967 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129618222 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100840801 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114647954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14488088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145782495 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097048976 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082392726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17677743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127473883 seconds)
  done (took 5.220108565 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.096215306 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190220991 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124768528 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175409307 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082269191 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147988556 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097622555 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116529145 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263866224 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119311473 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.477230689 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141966144 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10227159 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100136449 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08455003 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098962883 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.623952775 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1563456 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156427102 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09783125 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106358607 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102276265 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365934947 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082245921 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096397367 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084186284 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083138612 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164999057 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08376295 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138963328 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122099196 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081241539 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137246077 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.218525101 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126903098 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118295655 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098625087 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079588087 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195842631 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094583867 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098900013 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105628944 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138214961 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137690371 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099834483 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083381764 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21879552 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08192836 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11669905 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927253151 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180411296 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.113498457 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100971328 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.309019929 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098079235 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098017762 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076907936 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.120676304 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269828169 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197124303 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125712308 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099577214 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083584027 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09777775 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083763695 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384928947 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10020783 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.636704209 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085401597 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108386879 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085191147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099734173 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105182125 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089696353 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117571075 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078504254 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098976241 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083088651 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09926656 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080408637 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101716687 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108395193 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219521657 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081706495 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099989656 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078693326 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119889404 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129291699 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085693053 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098378148 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133072516 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085667109 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100307552 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136735297 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083604609 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111804013 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102769539 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144790005 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083673148 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146313177 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08250355 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126790825 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101295803 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117365058 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115027207 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101205723 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171053377 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079279492 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098100335 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079495856 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100127253 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079966921 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101113266 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083612656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113413023 seconds)
  done (took 22.915852179 seconds)
done (took 40.864992031 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441027891 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.517684442 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.892147102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161498676 seconds)
  done (took 2.744382065 seconds)
done (took 3.489292631 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08862796 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107586487 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091645372 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.105206622 seconds)
  done (took 1.129385815 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104192599 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.102090904 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090220917 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.104226783 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109286168 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.087665337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.106726013 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.091392795 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.10340433 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104500276 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.087639671 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102816395 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089677408 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10592227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.083401326 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107702734 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10730706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086863579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106907296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.086396405 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102035247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.087902966 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108816803 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101802731 seconds)
  done (took 3.111017457 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09993733 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10071035 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.087941981 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.101668055 seconds)
  done (took 1.133063834 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.089822154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.121652666 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120560041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092530913 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.123338351 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115246056 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.082735649 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100000886 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.085977769 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108169882 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08149488 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132365317 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.121413326 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089955575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110849629 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095664166 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.083976419 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118965762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.090247229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1098676 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.083937207 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108544912 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.080661828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.123517835 seconds)
  done (took 3.215950861 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.159105415 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1285341 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.119331668 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.084487759 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.14397847 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13351908 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.100731405 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121619124 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.121621313 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.111957052 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.083190819 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.140419387 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.092116039 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095082322 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.077271129 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.096728028 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111729001 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095979968 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100222746 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106047503 seconds)
  done (took 2.967791862 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097291666 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108889236 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078675308 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.100762007 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.090244007 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.105054627 seconds)
  done (took 1.330284904 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.080697816 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094781248 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.080352464 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096495155 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.085578961 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097511152 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.079979082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097881078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.081517119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.098190394 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.080358912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096581405 seconds)
  done (took 1.816415941 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.442708604 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.103127199 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.101095912 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.079084037 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.105149446 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08002944 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112633498 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084828828 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.125564711 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103587226 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.081332808 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.099500486 seconds)
  done (took 2.304449243 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22368856 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116738752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261674533 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249752995 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142567192 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154153568 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257800558 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146804363 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199611352 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142350129 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185623279 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198217229 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134673707 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173201325 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121830627 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137386 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183582352 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213575644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137245315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186288495 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202744193 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150670524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16406806 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133818571 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103381875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173422807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.087177833 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113434137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204764293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158002138 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170770912 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144240783 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13095936 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211743312 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230062421 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192777492 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264119932 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102055698 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14531138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.154564276 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241372062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104953303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205835856 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139311569 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114740085 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175873664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149971895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.15925354 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134700807 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124070694 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197452523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196275818 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196304732 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102585934 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212407915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143551841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152081735 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197423249 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206517122 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200205031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162218071 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103096363 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174230849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176414975 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187843582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152227647 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164446928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131732833 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17350106 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190656915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149146408 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168869825 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189646369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105356179 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168744536 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156400872 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156850996 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232020579 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160238321 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086275215 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15169265 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132263254 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116763613 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.178006651 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089677182 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215558385 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131789561 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.148013516 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200699534 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142836624 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144382096 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200097626 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175774506 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130945433 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074438436 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136932077 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.139774101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17220755 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123903037 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141888349 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144358292 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.113621901 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161979119 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107017361 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158604411 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081995766 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174228805 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168184262 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.092295808 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144848091 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135015942 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134413702 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154858397 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202183619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125186218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100210069 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21119362 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16183603 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134569601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161053742 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185195425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128355279 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135169189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201641939 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200745898 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123442203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292862026 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140794745 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121658067 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114594989 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164891843 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137165668 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.144251644 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098169879 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184213638 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188171903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.11096358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121766793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167985775 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117174316 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09739378 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144001974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132194623 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122699379 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129215877 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135890903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16670336 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160040121 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138323852 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147258278 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135886364 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228069937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125872305 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135548034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131288045 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.085944011 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192572091 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183049514 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113660052 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189282216 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153757432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206657745 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156038929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117016295 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1601236 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0952167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104334502 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178234809 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151157219 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144185108 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198055702 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186499452 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183010615 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.168660019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156620748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156073959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.149884813 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140452265 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.12280683 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145707386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149837297 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087354258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127280586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.118246569 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131715805 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127331567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098181149 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19842328 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1530885 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175996211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14357064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133085866 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166077824 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111716491 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157343944 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17948903 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112443062 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201955278 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178083249 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16820008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126260017 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203490153 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084691067 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109691249 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.126175138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154038377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097489274 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120412849 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150277397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167413568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183644488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160354808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216899552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157678813 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175454023 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.105941962 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133789137 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18790022 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16096026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146308146 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124840582 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.134462255 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161504287 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142889565 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23061322 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152166889 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158820309 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212252323 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133980841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096708588 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135128075 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188272635 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13831177 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162125646 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130596785 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106170249 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146068548 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117258034 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146664269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184830664 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12851884 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193527017 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.133455356 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169411873 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111699387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150599167 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14328366 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149100051 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072627581 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1570709 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208341793 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133530917 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152103995 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17314597 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116745827 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.284751247 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21646277 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174002371 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12153139 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142062236 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144853294 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148524598 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155868994 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161706647 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144073577 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172427765 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143021976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121356796 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123492577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112204115 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131792645 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.114025854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132773851 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162289117 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123361653 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168049648 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142279895 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139431432 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151599527 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.131881345 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123264422 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12998159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194804685 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154891566 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208799826 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13099827 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160879658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183189942 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106921985 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111989574 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094386756 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156644251 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119012542 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19301831 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174144802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192997338 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186945224 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171110155 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124734363 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082779558 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139103405 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153491167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206726741 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136891538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14381496 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18605061 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127512035 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116105391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154795484 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184872118 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131984842 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18083898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091161559 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257668103 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093533239 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11779726 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148525084 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210125094 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.118388483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.141555592 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154345347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152099527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148334224 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134017498 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196273786 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206055912 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204830917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164796672 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.115641812 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118938695 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180775604 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17806018 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142553998 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124149082 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188532768 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196962579 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183474542 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.125822766 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155450041 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152502003 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142882077 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171199894 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119461583 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189324075 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119928935 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197999 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138169218 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107994556 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180413777 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.174749715 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127813436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173932898 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157445678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119728668 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115981375 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154593902 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16244841 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142218667 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.11033202 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164165161 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088642254 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197311456 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234522742 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098853381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139214298 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132208734 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120057771 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141120128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142377993 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124291906 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12308759 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207747607 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099639521 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195883032 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186134948 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171268218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160428606 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108676446 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696052475 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095999164 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198915233 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119694575 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209630115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133208112 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157672467 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142633319 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153022014 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179467187 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143805214 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2144403 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197529196 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163587557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116117161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142635742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147448076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129688602 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114937178 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172570879 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143612057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118105851 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181249391 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153972501 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.116594707 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105564381 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203064862 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119894931 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187442854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16286527 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101998245 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178228469 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173720365 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117700328 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163087169 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212197558 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105461376 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136642035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118143961 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140845206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238995829 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.088857394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204538184 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163130438 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143928468 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152080166 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131959915 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174308932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142567639 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183009698 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131621051 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143638563 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120866684 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123001917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115382191 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141113848 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153608361 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133394636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143448645 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123179638 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199344669 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.088733681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129578604 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184926451 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19571642 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199131386 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120305665 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117669176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142944981 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111144363 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176768504 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163476102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.119289956 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100677199 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.121322067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114124208 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124053401 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140883798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184442125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150172483 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212702157 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.099836222 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261931785 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125422295 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138606766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.080896308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.117304071 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135490885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130847375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145112886 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180134769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242327972 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.131168615 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097595063 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13393684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.11008306 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118840923 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130572999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167206691 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16153677 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130666176 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.073451389 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143864117 seconds)
  done (took 74.418644351 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14434994 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.115490732 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.129617809 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.290491052 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159472744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250552071 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.191526469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23455325 seconds)
  done (took 2.34712169 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.167696401 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109699396 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.137405501 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114388993 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.080915204 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.153752046 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.315032851 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112071954 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08233497 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.131529306 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130880371 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.104374547 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488699388 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.102025976 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102811674 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076111806 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.103558747 seconds)
  done (took 3.344405381 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.454413988 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.589472919 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.484716356 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.087007007 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.631300912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105743692 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.812677086 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166853167 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102950179 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.412566606 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.75480747 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138889224 seconds)
  done (took 16.57936381 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088781353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.104542973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098906311 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.119955633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087927582 seconds)
  done (took 1.344405209 seconds)
done (took 115.790524834 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.083399694 seconds)
  done (took 0.918193858 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377735016 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060970945 seconds)
  done (took 1.311568284 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095444049 seconds)
  done (took 0.941166136 seconds)
done (took 4.013733032 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.260792877 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121535597 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215363411 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.121761486 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093268146 seconds)
    (6/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115347021 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127791532 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.227686125 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.206904054 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094490619 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.247624823 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.149770683 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1462024 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117989621 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.214441504 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140566218 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.092541046 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.242104227 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.230413188 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.088289109 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.187819614 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.117223738 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.206809644 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.086695041 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112967934 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.175982012 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103814059 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179597316 seconds)
    (29/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.185324836 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.145665409 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110021194 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157980791 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133494268 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.134232669 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095410814 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10890938 seconds)
    (37/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.148129323 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15464886 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.189841304 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10792221 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106535232 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.110377108 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217138319 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.143632932 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093102901 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084132862 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.207645836 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112876247 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.132031871 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111345913 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092788328 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.186631896 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.209550238 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093273534 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116374836 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114771247 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.116293654 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.174826488 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185545813 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135692131 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108732381 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1190929 seconds)
    (63/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114686989 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.178583883 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.163360768 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088869388 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217047033 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132410218 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135341109 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152243601 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082942423 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095374538 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109714106 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088221115 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.207776029 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11195929 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.0841201 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17328431 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107361348 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112219748 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084679534 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.162285092 seconds)
    (83/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065178348 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.11942677 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097399556 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.138324216 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.226380222 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146985364 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.102590509 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181730227 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124593858 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11095256 seconds)
    (93/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.131916822 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112629083 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085873326 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.179528413 seconds)
    (97/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132300894 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.18775932 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.125749993 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195968032 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105747314 seconds)
    (102/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096914764 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106806521 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.204614057 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063538676 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.073433181 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114230886 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063100306 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105999052 seconds)
    (110/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097988761 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08516262 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 0.175807094 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.08980573 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12744054 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112008143 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089564997 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.108455029 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112718098 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10178492 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.173085667 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.087182873 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.126270455 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080733037 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111912937 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062449405 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.185915873 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079020923 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.107290077 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104998009 seconds)
    (130/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153266836 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.183685945 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.108862268 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151011889 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.187479962 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.205059932 seconds)
    (136/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099392568 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086935974 seconds)
    (138/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064002842 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107815604 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091450661 seconds)
    (141/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136459544 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.133056376 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093455449 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.149274348 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155353523 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10764021 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11079475 seconds)
    (148/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065913918 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084514787 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124900417 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102816603 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.088589582 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173112568 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.169518285 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.218341121 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.16038196 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.116280254 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083342196 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.202277068 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.085556078 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064384192 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091400039 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.108124355 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.176840864 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089943863 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.107556687 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.074612321 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174455027 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.127923333 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06467444 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.191007344 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066549939 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106810969 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064988264 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116658795 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.180830406 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113480638 seconds)
    (178/309) benchmarking ("sort", Int8, false)...
    done (took 0.184966136 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111702985 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064984344 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152204979 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065488675 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190346899 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.113810209 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106276513 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122960286 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094966238 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.104534451 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066861418 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14906876 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06642404 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066435335 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.096509255 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095252552 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116991949 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163880043 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198518905 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.088219421 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064435019 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168247036 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091194872 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089301552 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083453841 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085082538 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107831523 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.106992011 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107346712 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08715153 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.083328549 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.095827328 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066221041 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.13234481 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065040444 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.112423831 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065549213 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.074271133 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11208797 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 0.168977532 seconds)
    (219/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09302513 seconds)
    (220/309) benchmarking ("sort", Float64, false)...
    done (took 0.168408039 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06538841 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112196977 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11297988 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.127731294 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063592882 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.105141814 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083653724 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106608361 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.121366814 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.184052232 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114567814 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085950574 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.087724799 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084170233 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105841769 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065594866 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118404227 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087350821 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134280889 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.201802023 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090959188 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064078796 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115077974 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.064186306 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112971532 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109597132 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238740554 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110741048 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108253399 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191487145 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088931476 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065377895 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107346845 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084499465 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107207023 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094900318 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.085822458 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.092776213 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111885164 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065065615 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133516238 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098693378 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.096594669 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093587219 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126617702 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090042676 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.106853998 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06547303 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086199337 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064882067 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.130841636 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214545007 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.082789415 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101906021 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089068006 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060963732 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121537363 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061989607 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139651924 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.116925027 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082662757 seconds)
    (282/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.091890075 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083578001 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.109982708 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082079793 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.129198826 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08045342 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.129445631 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080592307 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085322773 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099790144 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083895491 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081161932 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083577686 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090648415 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085516847 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067156305 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132027911 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087917825 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064704118 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131028646 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065324562 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.134711563 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065444129 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107650255 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.089785415 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.097465273 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065069409 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11417567 seconds)
  done (took 38.344474102 seconds)
done (took 39.186675215 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214484314 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198663186 seconds)
  done (took 1.294497597 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.116288328 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13528224 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.116626258 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.144188177 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106790078 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.116580836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136424803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.114339642 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085162884 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103454922 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086133626 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108727837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151026099 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10457956 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083989471 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106076725 seconds)
  done (took 2.743250977 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.116414712 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.24027506 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121989581 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101956972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087777132 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108520249 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084413953 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114184182 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08975981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104838374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088792591 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109446567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085236171 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108238407 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109587999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089943745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101901422 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08676073 seconds)
  done (took 2.83776702 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111440444 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144797289 seconds)
  done (took 1.148248814 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241444098 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160082892 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230085878 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.481133771 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.282796462 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.372582568 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.207940863 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217602446 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169072582 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.206345715 seconds)
  done (took 3.45463902 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117590829 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177611607 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.331296269 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156292113 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10826258 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130443141 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159805235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134135147 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.125133976 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124703854 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102729138 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121781059 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14186046 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097114236 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117933923 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12007702 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144632183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097108059 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117566361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09720138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142162208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107367379 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096407456 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116955664 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.121163039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100441901 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106016604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085568869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120244304 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116096209 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094864573 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128689525 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120517585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157679917 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123666271 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158010626 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116084238 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088879531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11679957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108747345 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096795599 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117262341 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122836098 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097556088 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107396597 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099526219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109721492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107037201 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09640796 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121946763 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116015507 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095886902 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157968569 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12199639 seconds)
  done (took 7.510439293 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.781404292 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154018318 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087882291 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868262476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1326266 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102210343 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762829371 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109409599 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250783335 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.741576516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129806968 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116511229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201542241 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253762814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.006401594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288082629 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.628565166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126347974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149893083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151516103 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114606238 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114189562 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133230706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455661008 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11335865 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086227506 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114767379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116488008 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156368136 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122049916 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089426364 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193947704 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245173916 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199369413 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090837982 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107972067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086840706 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187532957 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259704914 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188585075 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176424361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105335309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086942545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118453032 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129949615 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083358809 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180907102 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17213286 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.164299251 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111595993 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117591861 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096332087 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118917694 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16447147 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118747543 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311527067 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305291768 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087452415 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119501532 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12695753 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241948268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120196856 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220201833 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136005438 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205261223 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08854259 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801754908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166315439 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107358715 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095544019 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121782543 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116382617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100457704 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170444197 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393505222 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125849604 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116013393 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091867891 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236247789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105338598 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11445414 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162936831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117987649 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122925489 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10483689 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123970903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170624725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257072569 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102622594 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122710539 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117006881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105431527 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119148649 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213751288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217378338 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158682807 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226130461 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097324943 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179655091 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164761585 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114658673 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168314813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115016536 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100477554 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118984965 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216327201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146265338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124571631 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096359947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120591226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149550741 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128323064 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.099190022 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193516164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485689719 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170607868 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109483016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128127287 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095947346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177076081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096491752 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253354251 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118119397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165785385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117812111 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089296689 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122026402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165786147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123795293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12210437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103430908 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121318207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238335744 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216253919 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119764298 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218675116 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180655412 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117476775 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172212562 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121931917 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17042013 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119151403 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115509146 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094598362 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792516491 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119998797 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096154198 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113615731 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193198038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087072115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12195295 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122358587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084911052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771717234 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124250171 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.117301297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100463399 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11486315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117125461 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094793987 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115136672 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163354789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228220452 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120105613 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099119684 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126740703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162479751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118611606 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1275897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126334297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105697899 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124630517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11688756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105128736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185318264 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160294021 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216072551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562947113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109818987 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.120991058 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198540209 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109239868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282766576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11604324 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198356464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179599126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096949603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302341198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160433758 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195383081 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125472237 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168092756 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106335631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115060407 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162418618 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107950986 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093186328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178993912 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101356328 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119613727 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954901332 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087838154 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241525089 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086288698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167037725 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114186047 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116514868 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287697284 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088849958 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125136122 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160833919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112440673 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121249597 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706263897 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121995784 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097756182 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11530631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216258444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161058078 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116587252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116402865 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096264823 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179132566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204245173 seconds)
  done (took 43.607375083 seconds)
done (took 63.485007104 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097104171 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133822203 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092268388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119805 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.116262204 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08820088 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.112786301 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098753202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12203394 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.1220159 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099005216 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.090405894 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098375472 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119072649 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097066915 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138602691 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11947139 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09123576 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11266788 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081982904 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112358993 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083113738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.106232956 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.066227063 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.114969028 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090359244 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111272417 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092427526 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.104834229 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082037663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108103562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.088669568 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103701188 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117053462 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090599252 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112230687 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095104282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.115691887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08363841 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104725208 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.089596362 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103908626 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088521044 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112254076 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.108690756 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091057952 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11475681 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09974886 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140029177 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09261216 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117899623 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118195964 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096967315 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114978239 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091882679 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117720161 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092420509 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138594575 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.115851728 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091797748 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115949703 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095901713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113577064 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095360538 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11701487 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096501025 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114516914 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108539048 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09430056 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.108537046 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082942894 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112320453 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086563177 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.104702177 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092717028 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.115253931 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082278589 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.110442357 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.088856299 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.10928332 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.082371665 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107380447 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.083676191 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111200029 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10525964 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067087193 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087260264 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11162471 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086323672 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118367384 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113788894 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095608221 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110549963 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09923385 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108890527 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09245963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.108823983 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088223636 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110913582 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091391805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108655131 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090634656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117300295 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08933454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11456641 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097780251 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108301399 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094244478 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.107273193 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08455194 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12070848 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114385713 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084073171 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109317423 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.082421917 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.111485197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.082796766 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104351758 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082285685 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104206769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.087552137 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.10463547 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085262435 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11133106 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096027611 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105180646 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085959179 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107544741 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.101963282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08974429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102868843 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084369969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.105619741 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074644647 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084820965 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.104458934 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110359725 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087397703 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111744838 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.084734533 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112701994 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088376879 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110370292 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089596427 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103754624 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070234892 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108718255 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087451079 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.106129253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.084247015 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106537291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082894312 seconds)
done (took 16.30663332 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 0.104054662 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134618938 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.150013629 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120115649 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 0.089129255 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135065799 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.090828567 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107664246 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.104464855 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.128031616 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107644037 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0949931 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116326943 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094167971 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 0.106615307 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.109015194 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.086963197 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114591253 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.084137545 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.115430334 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090201238 seconds)
  done (took 3.279427183 seconds)
done (took 4.206970502 seconds)
RUNNING BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.988004494 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.985227048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.966268461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.986704178 seconds)
  done (took 24.845089439 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.99415501 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.990517957 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.992416495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.990277328 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.99367499 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.990679001 seconds)
  done (took 6.870307528 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.001344857 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.984812257 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.986449052 seconds)
  done (took 17.89206833 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.151863068 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.997869289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.269360565 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.61767616 seconds)
  done (took 7.956062447 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.993218291 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.992599597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.99411491 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.994780492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.995740667 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.996805365 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.994700124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.994640103 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.996816313 seconds)
  done (took 9.871285772 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.063987749 seconds)
done (took 72.420954176 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.677803668 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.688148302 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.987717573 seconds)
  done (took 10.273615203 seconds)
done (took 11.195359968 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.005973803 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.048764711 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.996062558 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.966838578 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.081542318 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.006614474 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.33407434 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.042730299 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.000885129 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.973110569 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.985859927 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.997196253 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.990165611 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.49730067 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.988474406 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.006091721 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.015805556 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.573217316 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.323157657 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.004277509 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.014150115 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.004974693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.004551859 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.989663055 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.026206611 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.98724658 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.003121332 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.002701397 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.556911896 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.993095312 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.056899685 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.571762489 seconds)
  done (took 182.969737905 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.987760922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.98742302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.032386606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.011888974 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.271459624 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.187053191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.122482941 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.473737542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.005438002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.009914488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.165923915 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.98704717 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.221376155 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.99794756 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.999064121 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.988768391 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.198226937 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.238492999 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.007930305 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.208205668 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.998475762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.092009507 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.026829845 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.134239783 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.024672305 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.097894078 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.032249086 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.031621957 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.156263515 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.122086513 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.020601572 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.022461463 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.457537233 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.849163671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.997811043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.995806576 seconds)
  done (took 141.084564398 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.251239388 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.988933565 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.989748737 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.98876843 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.013559498 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.992061144 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.41618928 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.41936041 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.474648146 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.020852029 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.048285336 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.16068787 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.992372595 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.076560166 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.002918147 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.99073716 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.005718433 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.028596422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.993874632 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.991149516 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.417719475 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.005620903 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.144909278 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.999459269 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.990363013 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.016045091 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.37554758 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.991701383 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.014984206 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.299545483 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.029166728 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.990978542 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.252794732 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.405151489 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.099055308 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.993841532 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.016265129 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.99452351 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.256132448 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.99144226 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.991896428 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.993891811 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.536586856 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.994661257 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.41961228 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.994591516 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.828962378 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.994236755 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.992398946 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.82736067 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.445350109 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.007685534 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.991145115 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.994165386 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.991973014 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.992677516 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.017123343 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.995330573 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.746024863 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.080450286 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.007324511 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.993237597 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.994976725 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.015976056 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.995379907 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.045322235 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.008896512 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.707381722 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.04703623 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.098165908 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.421318678 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.996102593 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.082563765 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.106438785 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.993872662 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.993293624 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.9932216 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.993285302 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.99273711 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.096769518 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.993474353 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.317986098 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.999687032 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.994549888 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.04970831 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.082631465 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.994406979 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.266630289 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.997118872 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.994318194 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.674834882 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.086623463 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.994556229 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.993683065 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.994363612 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.32598297 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.42448275 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.123157786 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.997290707 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.697628907 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.997729573 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.341411882 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.415369562 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536086352 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.999076227 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.098435431 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.999232153 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.994992981 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.996699466 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.995193995 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.02395002 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.008155211 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.052523863 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.995700974 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.385725929 seconds)
  done (took 321.072765282 seconds)
done (took 647.298356328 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.028441606 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.058899774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.008919654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.997050453 seconds)
  done (took 25.022486572 seconds)
done (took 25.950528749 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.996421479 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.998951533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.99879334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.000210818 seconds)
  done (took 24.923564651 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.038202076 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.038206948 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.040139786 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.047804511 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.040529751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.0379943 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.030433953 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.029304892 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.048399641 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.04141324 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.040053763 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.040062482 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.036988878 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.030147681 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.040244487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.24843979 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.049018384 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.03901656 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.030827814 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.041118304 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.005492009 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.050152171 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.040877451 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.006301736 seconds)
  done (took 26.021902265 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.526088424 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.076101818 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.158219172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.057282701 seconds)
  done (took 5.748732394 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.056828422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.058849429 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.069392953 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.108651941 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.142834075 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.068377607 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.034430278 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.027226077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.013992122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.058643872 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.1346887 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.075482403 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.157649613 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.006028059 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.206371857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.00635126 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.00649006 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.059229866 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.110384367 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.122962948 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.00764582 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.058035117 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.061864825 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.076622395 seconds)
  done (took 26.660540878 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.006567603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.014149544 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.006184038 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.004796198 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.015268346 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.005963993 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.006465119 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.007493083 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.006429032 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.012181017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.005091926 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.019574167 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.006702812 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.00654203 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.012011912 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.007313636 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.012738093 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.006391549 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.00687216 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.011588757 seconds)
  done (took 21.113318269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.003507644 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.931364882 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.353076999 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.256306558 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.001732071 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.000853843 seconds)
  done (took 26.481295355 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.058264632 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.183694898 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.009653675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.265041008 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.357501821 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.024127878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.007916797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.195613691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.421018731 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.393662233 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.055420487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.064455353 seconds)
  done (took 14.970204135 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.001071078 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.018064751 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.004177898 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.020806371 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.04839876 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.027125336 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.015372718 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.0020341 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.051809418 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.068525119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.027976778 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.049059326 seconds)
  done (took 33.269398088 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.090047197 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051244047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.730102665 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.002128577 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.739560452 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.215164604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.013880899 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438924207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.010703585 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278489036 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994049433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.109634881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.260215254 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008722359 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.008150564 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.80868344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.246287167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423690393 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006804473 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333162453 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.03381136 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.012132749 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.48069988 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.034574225 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.216585929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123005821 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.391158668 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.780623313 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.233184317 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.020076416 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.01587871 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.00433059 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279419818 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590729472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.120237616 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.01592134 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014664636 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.63913204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.989686711 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.339684477 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.773649559 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.01154859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016490291 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006568802 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.94129255 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010436531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447993076 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.015813454 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.718036634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.006622377 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.018140204 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.101704012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.010188582 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.577615877 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.006939106 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030596197 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.007109654 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.031510816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590753214 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799997155 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.0136299 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.94388391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.02114189 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432959003 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570756614 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.128263796 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.011208421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.011787151 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942499172 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.428801228 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.027735944 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154346516 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.030601595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657848423 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678640436 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.058079502 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955697265 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490224281 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.009765207 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.945759303 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.236165459 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784013572 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944566354 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.955145241 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.943604133 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622490752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.016585189 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.271361423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.027684745 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.455650135 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.023019665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.026605416 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.033039797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.232275937 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.887627177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010035589 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.769013539 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154503015 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.02995901 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.442368704 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946822074 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.013885742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266155352 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.22167242 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.012942649 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.80683107 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.21254951 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022746238 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.033237822 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.010263926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.024014394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.505646175 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.040377144 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805032349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034955493 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.786443351 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662262755 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013194817 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.115002706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.02713784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.230677135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.673921194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931711982 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.078713306 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015841272 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.011715722 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.426649047 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.606441081 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.892765454 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.006873729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.018178016 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.024561555 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.012488421 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956676056 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.012356783 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075810547 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.793478016 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.234648198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.014235497 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289954814 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945496713 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159503698 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021691344 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.234697149 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.016138625 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.029249754 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272117674 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012476603 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.017197274 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.027451102 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.031307351 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.113987414 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034212078 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.016589373 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.271327466 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.016647544 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.016130703 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441548958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.793548814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021141812 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.018961903 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018382657 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518968199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008053424 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.017210979 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903889174 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.028600306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.080470617 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.019878672 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.023779763 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.396937189 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030188539 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.02286487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.012610755 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.240431638 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.024180108 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.43167757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.09835653 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.193192574 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52031597 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.046315477 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.948652795 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.725678038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.707949362 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014968438 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.204254724 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.014907099 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.025423787 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.025115432 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.015963744 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520252691 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.035998026 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.352176162 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.024550602 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.025700884 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.020730197 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015050402 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375923467 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841664968 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025923357 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.029740316 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.158655617 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.029218161 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.949753376 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.53316849 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.02094586 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.015588929 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.793187841 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05015037 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.353271573 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478439379 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275471147 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.019250613 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.045019244 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.507469132 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.049817131 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.063938863 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.827112963 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042039354 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.028908936 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.04351797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.028479227 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.410532979 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38260649 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583068428 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701885512 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50005416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801290063 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.024613961 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.917592277 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448022924 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954416538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.673780696 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.16334081 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466007553 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964844364 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.201015704 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.021350579 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642782588 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.032355176 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.245580069 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781786363 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.829534531 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.047284077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.229245928 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.052235993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.019226755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950376423 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.535793179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.253440347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.855676137 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.1014074 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4544193 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.846322919 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.815675691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.081215842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206129195 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.175112053 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.566439693 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.406156685 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.025930172 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.075021596 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491270318 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.022321743 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.545373301 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57380623 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.040221732 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.215511873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958427702 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.030298837 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.03044093 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.015703869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901447273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.018607934 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.290993886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.031089227 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953970514 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.025900437 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484076604 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.893998475 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.026831903 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021512841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667606992 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02573771 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.252346438 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.026248022 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386180093 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041605274 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.956407628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955433079 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.715354031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.030800351 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998003506 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444234073 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.030846379 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030435759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.027460055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870149496 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.277005467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.036520007 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.527393593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266281431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025122021 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.063333741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.122220132 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.868198053 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.021244679 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.918951471 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.258485435 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.025981817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.251630312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.738271192 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.922539052 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.039295815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.254140946 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.918762756 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.085900201 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.249974971 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.751860544 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.024517785 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694739643 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.067511971 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.065130819 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052249395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.022803469 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.062302378 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108442171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.034094655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.033930722 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.034627942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.166556306 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055858295 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.044383404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.037866486 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.117688448 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830568339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.376595297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.800414721 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532040784 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731067271 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545718917 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.055266324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.025831481 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026381597 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959205018 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.176163945 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.550570928 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298897015 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155106948 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.039391419 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.050961283 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878120994 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.046064461 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241086163 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299994001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99785081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031457159 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814388084 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.184396183 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.035960066 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.236779159 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44884983 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514714874 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140751727 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.025432503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.457543966 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304206727 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.116760173 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025687042 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615777515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.040447305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207863406 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.046197442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124237933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.178916227 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.036560573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629581074 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.054708434 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.182668944 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.800305581 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.376467997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.286909563 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346773709 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.042264178 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53556539 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653500024 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29474402 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.097056131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.038388965 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.138790062 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.176880465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.043634775 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.937474619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.02737682 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871218619 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.737573797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.037642121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534589246 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309301094 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.025992375 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.079378178 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.067205528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.038293917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.251798113 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631514938 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.251991737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.038848522 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.037884711 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.598581055 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536007133 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.05999859 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962813978 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.032645696 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.234689272 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284675126 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.054647582 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.48102322 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.739501587 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504615035 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.000851123 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.051506974 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029336747 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653522472 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536775165 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407289371 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449755436 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.68778876 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.037062288 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306617865 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.034843967 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.035579486 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310063482 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.03322973 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.034285425 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.044905611 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.534369807 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655042144 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.046510167 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396221886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.970690135 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256496969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.037607609 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972493495 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031644345 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.180371231 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.034367412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161294074 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.043624734 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.101281298 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053839357 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.782646472 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306579801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.038933685 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.019063877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.949375796 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.044226184 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05914689 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284396701 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036650732 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.707055237 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.382431279 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.287179243 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.032694473 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.028612017 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.035692034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03166743 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749887568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041474362 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.031831859 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523738157 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.041592568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.046235958 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.036410202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.249156087 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.244597905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150318894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.06355605 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033971995 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.052313367 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.933805191 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.801397546 seconds)
  done (took 1444.988324981 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.081432886 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.053870087 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.066245609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.104966007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.069484078 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.089658199 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.053824437 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.080148125 seconds)
  done (took 49.563129251 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.041032147 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.182904423 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.062658471 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.033222544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.060016326 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.033558026 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.411556959 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.051215804 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.046155512 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.044263036 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.034585319 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.041575296 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.613475651 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.046675673 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.037188983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.020103344 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.046237519 seconds)
  done (took 59.7780524 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.035274367 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.435900857 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.080164152 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.038093091 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.13018634 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.050686567 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.031086767 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.083145258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.034793885 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.121950563 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.684898406 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.054436328 seconds)
  done (took 77.745570652 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.043472314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.043590651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.043353997 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.043671589 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.04402013 seconds)
  done (took 6.184135976 seconds)
done (took 1818.377168257 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.016689378 seconds)
  done (took 6.981882373 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.560099555 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.540005868 seconds)
  done (took 4.06678825 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.328789524 seconds)
  done (took 2.294380681 seconds)
done (took 14.307976052 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.36288374 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.112159023 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.788706829 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.33963513 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.062900791 seconds)
    (6/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.153922531 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.034977618 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.088015583 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.371090656 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.140078119 seconds)
    (11/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.926128232 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.060972048 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.265813478 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.250250364 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.151775928 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.75013085 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.080748557 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.228422682 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.302083683 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.075244957 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.054119437 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.159843755 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.623918055 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.167581471 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.062372292 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.201981208 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.06414212 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.90231604 seconds)
    (29/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.720207722 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.036751732 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.939253527 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.132292141 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.745073199 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.286646011 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.055158738 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.049517336 seconds)
    (37/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.690514508 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.671350163 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.343475328 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.105126018 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.037497559 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.187204045 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.549150589 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.080862376 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.069647098 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.12925766 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.018836174 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.360295153 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.889164076 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.061138727 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.153629704 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.018411044 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.056766254 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.310022994 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.123458811 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.122940426 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.338647382 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.02161286 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.077642018 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.042145226 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.09611223 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.372391706 seconds)
    (63/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.170222234 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.978662611 seconds)
    (65/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.071232658 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.452365353 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.023340002 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.533206494 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.343908586 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.036298555 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.261376417 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.082295617 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.124815727 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.262109524 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.125400597 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.755486279 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.077885861 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.739147509 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.104796647 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.596451432 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.731063209 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.030202988 seconds)
    (83/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.359180088 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.834729461 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.046963442 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.085165201 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.423362778 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.124520929 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.352430643 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.237756817 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.077949594 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.070898561 seconds)
    (93/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.076483492 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.25851809 seconds)
    (95/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.123119365 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.143771487 seconds)
    (97/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.124366469 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.04131062 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.021366944 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.046049497 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.093258718 seconds)
    (102/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.052031795 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.046349742 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.188432577 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.052531666 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.548032156 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.64043167 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.246005976 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.428288355 seconds)
    (110/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.127667025 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.338322528 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 1.561295771 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.08392243 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.743157285 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.052501675 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.146658269 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.299758561 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.110705197 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.417346363 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.783584131 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.648366212 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.318295317 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.61653247 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.308020121 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.15139339 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.048079129 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.036208924 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.055861977 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.546747599 seconds)
    (130/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.276907088 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.550369313 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.150460534 seconds)
    (133/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.069558104 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.047598166 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.056120819 seconds)
    (136/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360601886 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.069878022 seconds)
    (138/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.520654676 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.670010317 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.075220439 seconds)
    (141/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.347370362 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.519325908 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.047652723 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.080103433 seconds)
    (145/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.408870602 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.113234427 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.06672253 seconds)
    (148/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.354938667 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.850519146 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.704157718 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.842718381 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.0808944 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.778959879 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.02933929 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.063925158 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.151050845 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.09352931 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.428158752 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.363126293 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.255433241 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.166871416 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.144410688 seconds)
    (163/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.080612771 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.051448753 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.066935403 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.150642447 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.65936898 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.082961066 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.56050155 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.301871719 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.064380422 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.02643971 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.07179764 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.175696129 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.150556858 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.568763902 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.076612283 seconds)
    (178/309) benchmarking ("sort", Int8, false)...
    done (took 4.044810514 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.077392398 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.339963856 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.064807343 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.23734125 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.589832346 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.525925541 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.420564627 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.047819063 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.093635513 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.145642922 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.027640696 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.118399511 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.321754915 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.032631819 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.07888689 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.078568516 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.158040058 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.067601646 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.047163216 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.150689953 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.489355177 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.072962599 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.081065766 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.518925449 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.110380863 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.750204345 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.116974205 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.153103771 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.345875627 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.401676719 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.148094731 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.036054224 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.372767544 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.709636064 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.485463341 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.261794585 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.933797071 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.077830582 seconds)
    (217/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.071688645 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 4.995377978 seconds)
    (219/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.075499808 seconds)
    (220/309) benchmarking ("sort", Float64, false)...
    done (took 5.24404786 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.221177444 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.089634984 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.000135847 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.148735144 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.488146851 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.094276834 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.43014983 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.442125639 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.288827833 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.068351302 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.078246225 seconds)
    (232/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.208509698 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.589253995 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.786113513 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.689330042 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.040562829 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.081335981 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.171186218 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.219225784 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.492047381 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.669511289 seconds)
    (242/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.667622282 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.081301309 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.124875193 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.174648448 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.094813688 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 6.050308062 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.110869849 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.156900708 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.051331932 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.964731501 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.041923195 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.07194843 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.234979691 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.250089397 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.078052252 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.345408312 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.081450538 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.077557907 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.333701901 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.068463346 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.214640704 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.259282744 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.450883476 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.053921408 seconds)
    (266/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.082673838 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.062329267 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.564091923 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.445479146 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.507682617 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.055737931 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.069537517 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.473118193 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.849345591 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.213851703 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.491248204 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.229649103 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.03972101 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.128904033 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.886441083 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.842503858 seconds)
    (282/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.680334973 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.05712215 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.180499991 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.059413512 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.038690598 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.140923976 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.849416189 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.188506469 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.033076528 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.901953747 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.17383156 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.182317677 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.392052959 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.100638175 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.032414988 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.045168241 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.086916357 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.113160895 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.263585748 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.089231301 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.544819133 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.853733048 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.77447676 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.683712936 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.081593401 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.367472976 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.170733805 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.085054234 seconds)
  done (took 805.702699279 seconds)
done (took 806.668357733 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.06829437 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.142830046 seconds)
  done (took 13.193928753 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.225788748 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.176703285 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.060038628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.07545477 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.059755707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.079997008 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.068803343 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.059969219 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.059645167 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.060158256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.059164468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.247322693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.112809235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.060244902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.060132116 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.153857699 seconds)
  done (took 38.614093843 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.084006449 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.065318996 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.156424489 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.082568922 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.083477659 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.218348509 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.115400679 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.07022563 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.202873088 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.102662175 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.389263481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.088565347 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.064485875 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.999245493 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.084097598 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.223932958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.280524712 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.395265501 seconds)
  done (took 24.691623552 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.419441715 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.094318653 seconds)
  done (took 8.499059029 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.087655271 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.086993195 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.072037196 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.088766391 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.083879008 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.132244622 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.078069644 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.09202103 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.089808198 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.057351084 seconds)
  done (took 61.863378131 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.08169474 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.067762908 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.06683834 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.064447719 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.057782046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.057958722 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.064186364 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.072297487 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.904360621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.173483088 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.072663644 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.072846536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.080918134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.066660527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.064318456 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.097728642 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.213551683 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.068248866 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.063496437 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.070496245 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.064956062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.145326934 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.106287889 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.070276393 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.168537915 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.912888186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.074137367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.07312477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.192825161 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.07040661 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.065725491 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.066784382 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.067261817 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.642598147 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.487664633 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.078693164 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.085991183 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.077134968 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.064412826 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.220674446 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.071562646 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.072401121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.059451969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.492862319 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.201032202 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.176109135 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.099710654 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.088198841 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.06824087 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.122057442 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.074446182 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.068825757 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.093620866 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.777426264 seconds)
  done (took 94.671947874 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.100724748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.450345857 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.226042563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.082680156 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.757657816 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.777557649 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.078935671 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.291895891 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.113140817 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.062009869 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.368976826 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.519604193 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.087425445 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.13742828 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.6208355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.14129875 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.062304976 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.800810972 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.080707473 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.064159321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514914575 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.068568342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.078451519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.091316218 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.097120779 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.4686506 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.179875415 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.415764222 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.083793092 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.062530198 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.476107265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.085137675 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.099667262 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.064557537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.302044476 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.37084645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.361094211 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.086823153 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.109605766 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.064435737 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.084525453 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.460067685 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.36965149 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.085535455 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.069159728 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.46827656 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.081432233 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.072229744 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.065680513 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.265266906 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.894192155 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.069665482 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.170913858 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.070547973 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.351331759 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.152881404 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.110367077 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.494418984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.082671802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.107706263 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.116039509 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.066990658 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.066914834 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.067598396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.066371499 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.360607381 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471061398 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.064341994 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.357807834 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.49160635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.08331451 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.545411113 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.945908822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.081523188 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.124995441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.06510945 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.642109193 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.506657043 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.084452473 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.065579986 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.345237991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.084611298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.36385293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.083903197 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.067572429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.532794664 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.076332229 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.1369531 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.06898489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.071170015 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749819823 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.075265054 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.314277908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.140172653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.066020388 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.067341069 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.069472386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.067591753 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.070273947 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.073257544 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.542653302 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.08919972 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.154003379 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.087935948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.045607995 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.072685638 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.066054354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.067533442 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.286933878 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.435597293 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.092132006 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.067393783 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.067150483 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.074668625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374194504 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.071895479 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.320087674 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.085790684 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.067767975 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.07405188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.753256549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.121910656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.071991543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.073003604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935936063 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.275702471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.08791671 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.081476167 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.067725039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.096285838 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.121853643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.089851616 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.094407943 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.070875892 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.71345605 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.089244227 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.11017334 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.54980512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.082204223 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.768771909 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.094624476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.069259372 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.345782699 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.314175795 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.356253778 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.071269307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.075066525 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.706735099 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.098837462 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.205460062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.089481991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.052660082 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.263892893 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.249822049 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.07043269 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.687250024 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.069909792 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.283796546 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.075292196 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.354661961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.513058071 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.089019506 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.073590039 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.722772704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.770724587 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.700589652 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.075023284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.370853326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.013818471 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.55234596 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.06985476 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.071392966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.584379496 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.075537256 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.074641833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.070868893 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.072304389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.130612871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.24180189 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.300552585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.072876636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.468654996 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.159851443 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.072694218 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.082330452 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.076598598 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.419880994 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.158618678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.076167469 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.10940724 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.074176984 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.074658527 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.491553444 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.976624737 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.07808229 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.220862214 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.651382697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.092080839 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.073033169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.647850053 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.400829786 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.527109429 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.133470544 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.325961128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.092895812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.107237348 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.676439371 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.153727241 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.531091312 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.093867868 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.078571447 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.621675491 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.092884094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.146418445 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.074302511 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.072860193 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565788115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.092344807 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.078234036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.12837542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.093815288 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.326915933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.079997133 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.088798916 seconds)
  done (took 1048.397957782 seconds)
done (took 1290.914647893 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.108328852 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.10417242 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.085405415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.108257 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.197337821 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.112518364 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.096797619 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.088062031 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.134182013 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.135925432 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.084928192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.113146855 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.088192612 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.086082992 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.085906225 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.10102265 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.961100865 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.091955808 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.103841938 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.097133054 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.10346852 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.085576242 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.136396321 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.112372709 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.091065412 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.090137149 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.090778462 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.106722622 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.199552438 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.090617607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.090485834 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.098516039 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.963381912 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.090709839 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.082561539 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.106413533 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.099109828 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.097026381 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.090588233 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.119279163 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.293505164 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.104629098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.089944665 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.089273518 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.087976084 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.093080662 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.089899255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.094514642 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.102619811 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.104008318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.265113726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.116460848 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.091945174 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.088776398 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.10074089 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.088473891 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.092841228 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.105878922 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.109182617 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.107390277 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.951746933 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.099482297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.09207378 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.105694771 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.097758607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.304318039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.097750101 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.094610243 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277715639 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.10976565 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304246046 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.112174121 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.092002963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.103594322 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.121638362 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.967303896 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.090016586 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.089372274 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.097942282 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.088111877 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.100184106 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.10507633 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.095449014 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.091694415 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.105625346 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.116851615 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.101831544 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.092165466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.100530079 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.11214898 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.097711303 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.10280389 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.094790593 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.087633115 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.10199505 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.094978845 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.094972406 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.0949694 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.09686583 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.102868308 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.299175638 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.12894004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.088891793 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.088552677 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.091612548 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.105736012 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30219988 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.110076026 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.11479548 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.13941644 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.093754091 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.942937197 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.096437299 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.110213785 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.101598332 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.096167775 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.088596039 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.95797711 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312089654 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.126749952 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.094984981 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.090928158 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.111530826 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.094739235 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.090073523 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.974111176 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.099690774 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.109312342 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.215582813 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.104999736 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.124756277 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.092086237 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.097107839 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.115709384 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.1118933 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.125544964 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.096768558 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.111397999 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.110209274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.090902036 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.104572702 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.104849845 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.095222251 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.099824529 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.088730284 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.116998605 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.10825135 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.108513049 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.115997589 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.215878553 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.093513906 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.96105597 seconds)
done (took 185.213579027 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 1.454106146 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.469787507 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.098791191 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.244481954 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 1.155978257 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.255036062 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.464496578 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.097558903 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.465030795 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.463875351 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.096378694 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.240531837 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.25085906 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.47148623 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 1.094858647 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.094354754 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.092782671 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.466069204 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.096976769 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.24346136 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.25288187 seconds)
  done (took 27.580203679 seconds)
done (took 28.588766244 seconds)
SAVING RESULT...
DONE!
