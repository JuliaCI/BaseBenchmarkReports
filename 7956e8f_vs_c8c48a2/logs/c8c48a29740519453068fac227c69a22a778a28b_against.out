cset: moving following pidspec: 1982
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.367531369 seconds)
loading group "string"... done (took 0.565811444 seconds)
loading group "linalg"... done (took 7.779857467 seconds)
loading group "parallel"... done (took 0.173988158 seconds)
loading group "find"... done (took 1.196797961 seconds)
loading group "tuple"... done (took 1.88264088 seconds)
loading group "dates"... done (took 1.277896504 seconds)
loading group "micro"... done (took 0.237438864 seconds)
loading group "io"... done (took 1.117740528 seconds)
loading group "scalar"... done (took 42.613122438 seconds)
loading group "sparse"... done (took 14.204823276 seconds)
loading group "broadcast"... done (took 1.110602203 seconds)
loading group "union"... done (took 15.201965702 seconds)
loading group "simd"... done (took 5.190315769 seconds)
loading group "random"... done (took 10.474006749 seconds)
loading group "problem"... done (took 2.111194448 seconds)
loading group "array"... done (took 24.860821252 seconds)
loading group "misc"... done (took 2.202318706 seconds)
loading group "sort"... done (took 3.807712031 seconds)
loading group "collection"... done (took 20.242095783 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.467084665 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216942899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268979666 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.156371735 seconds)
  done (took 2.030536345 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.191371387 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148352748 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132663655 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.076853769 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.139995858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094107682 seconds)
  done (took 1.520235133 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329469901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25743575 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228935415 seconds)
  done (took 1.512720614 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.312775235 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266728799 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454811229 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288811556 seconds)
  done (took 2.126589992 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196781573 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122187367 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.099467956 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.096704174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.183926708 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.229511291 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130511447 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183974859 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092696202 seconds)
  done (took 2.084273752 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.218097871 seconds)
done (took 10.199445983 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638489884 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.437557358 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.252406163 seconds)
  done (took 2.071235455 seconds)
done (took 2.785585693 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728039395 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284931141 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.209583205 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.474238216 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20070628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219715247 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681622153 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354245893 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257693227 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10229625 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147944455 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391977985 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143021231 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68701833 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092554847 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128573237 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180433806 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468278566 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085335266 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112452881 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119861366 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14435399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129729366 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091584695 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187460218 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083021798 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195568121 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111705647 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080971619 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27959677 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203098883 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689505056 seconds)
  done (took 11.013754245 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102088838 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.127692632 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100551633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141001029 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139786773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101697493 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086763859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099952581 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12520744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180700055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117873479 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140067848 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097677729 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097412076 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119014875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249959098 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123735926 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101293434 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103195789 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08873967 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142486136 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116186797 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112209315 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095373669 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170568179 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226561716 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113015323 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.130180921 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100537115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115732541 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146884771 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146219084 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097778386 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082847099 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178194957 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128023179 seconds)
  done (took 5.269227912 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097595174 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195620981 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125376043 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175994582 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082761423 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147686115 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.098486531 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117469716 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26460828 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.139032957 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.474055363 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1440739 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10178574 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10068497 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084951785 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100248774 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.622527419 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159179723 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162407348 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099636144 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107594919 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103820886 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366436413 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08249155 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097080054 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083494525 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083021392 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166063694 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.148667168 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083697614 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143282734 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125674844 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082604168 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140096784 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214337463 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13378861 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11988737 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100074379 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079105416 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196350797 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090799499 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09899137 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104741496 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138999914 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138351378 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100140172 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08280436 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220373215 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082722665 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117733229 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950793844 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183928032 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082012803 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097999229 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292385832 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121067931 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103626439 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080668159 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283067418 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197177331 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10207902 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081294479 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09972416 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081978786 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401709457 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083486489 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.686778886 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085868839 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109955479 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108168192 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100092734 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078132283 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102167361 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097848654 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089625255 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108028785 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099269131 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10020307 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100112917 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082324142 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098484056 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08398403 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110698553 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.22167359 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099765873 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081983528 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097060207 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101861909 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130963786 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103081685 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081086641 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134656343 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1031662 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082385256 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137653905 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0999721 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093883167 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103502922 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146809851 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099743852 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137775786 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081562096 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127571332 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102273664 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117023286 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115845739 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101869505 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.173135232 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080362554 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099095346 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081494042 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099035236 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082619984 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102590591 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111750577 seconds)
  done (took 23.118217132 seconds)
done (took 41.20962726 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442887356 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.533684198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.917725468 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165811763 seconds)
  done (took 2.799958846 seconds)
done (took 3.556079261 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089371043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.111492917 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.094440872 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.108984619 seconds)
  done (took 1.147435514 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105234403 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.105144933 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090591854 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.106031474 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110250958 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.087741404 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.107738262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.090668637 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.104900424 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105471018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0877718 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103831489 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089407658 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10622163 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.083829021 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10804174 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108690147 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.087113129 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.108470757 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.086307354 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.103283083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.087472419 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109084344 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102540282 seconds)
  done (took 3.136456564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100101621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.103049288 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.087468124 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.102563591 seconds)
  done (took 1.144470482 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09053302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.122216331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.123021306 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094336628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126438987 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118865678 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.084155331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101039616 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.085499063 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.109491788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.081358204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132979336 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122172029 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089356929 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111431297 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096925144 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084432466 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.119872014 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.090619764 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109742563 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.083218939 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108503397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.080866831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.124053903 seconds)
  done (took 3.243980886 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.158270512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128044151 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.120567846 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.085268689 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.144439481 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13580719 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.102630517 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125674349 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.124401916 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.11527373 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.084848373 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.142214533 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094719108 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.098073493 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.078753147 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.098106755 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.112575518 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095828776 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100648432 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106430695 seconds)
  done (took 3.012192902 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098253801 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112210373 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.079824253 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.101059804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.090793731 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.105970526 seconds)
  done (took 1.35041338 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.081218843 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.097368807 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.081564564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.098007534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.086976418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099217436 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.079455796 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09821187 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.081070513 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.098955489 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08016984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096627515 seconds)
  done (took 1.838974529 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.447477357 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.102481114 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.101249422 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.078706281 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104439364 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.079046026 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.113445267 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083595395 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.125687993 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104687774 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.081984548 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.100557465 seconds)
  done (took 2.323232654 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223084232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118536302 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257940921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244255571 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138895196 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150918082 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256940497 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146464371 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197956544 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142784443 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184478845 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200456336 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135240278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171811944 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122136308 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137963149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181490527 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214007391 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137606132 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186388544 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2001869 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147118558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164401385 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134059608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103566218 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174787659 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.086403137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113677031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20688469 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159357519 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1707496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14563624 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131426908 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21222283 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228176598 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192507801 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264048619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102019359 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145897531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.155680826 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242349191 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103596396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208751578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139601253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116157772 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17697619 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150612349 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178250228 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115318093 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124036259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197978873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196826264 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197495728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121059631 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1943331 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143917157 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152752581 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198540063 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20412157 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201138435 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162247531 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.10448476 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174199159 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177322345 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188359037 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151550977 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163463767 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132062637 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172499714 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188354668 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147141885 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168951088 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189980009 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105641764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17059288 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156407833 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156919958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232721818 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161163614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086115924 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151788737 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133583182 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117105161 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.177945324 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089313301 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215785676 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131996817 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146570604 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201204263 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143235504 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143205024 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201217768 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177103161 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130962626 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0746152 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138174057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.140665762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173851579 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12419277 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142976196 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145575281 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.114187041 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162893182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107853166 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160325592 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082519929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175111884 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168529226 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.091352385 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145037328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13513337 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.134346802 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15648395 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202865726 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125695115 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099172167 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212368276 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161621887 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134610203 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161542626 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185520622 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127402918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134976902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183234804 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218872681 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231370478 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181954582 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137545695 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11973456 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113773598 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165703686 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138642907 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145561483 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098499533 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186723125 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185594238 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109571189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121860399 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169142642 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116704759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09609448 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144002092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132120849 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123693421 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13014751 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136091113 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167690159 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160512818 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138360719 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147375685 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136130029 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229053846 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126569832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135895572 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132195451 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.08609437 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174624479 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203209889 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113498541 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188662923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154266247 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206948594 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154895422 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118392997 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160938407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094885503 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.10436979 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17787832 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151209344 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14413336 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197274398 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180182469 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16022283 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182725862 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155097431 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157096818 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1499367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140701038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.122225657 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145583132 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151472005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087176295 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127870588 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.118270315 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132414086 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126689268 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097951448 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197986027 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151967789 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175715816 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144767539 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13373068 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165117265 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.113777948 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156322653 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160485792 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131479747 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202798627 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178504272 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170046403 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12784361 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203547383 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.085746269 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110104578 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.126869955 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154406704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097319498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121373085 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151487612 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167713713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182838739 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160024193 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217343346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157077119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173375514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.085478828 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152721574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187422068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161406696 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146301339 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125183257 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.134356174 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162174806 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143307927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228348115 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151640306 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160075009 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211650209 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134166201 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096461294 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136239477 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185729661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135889573 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158664693 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109912743 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126445214 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146194401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.118103554 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146533239 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164616817 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147407285 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194377586 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.134158646 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169688029 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111411017 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15068006 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143570241 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15003845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072461953 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157912994 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208389648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132899896 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151745192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173260629 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116671372 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.285725277 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215919564 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173957642 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121282105 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142759011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145470279 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148225726 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155374089 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162250314 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143433967 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171498865 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144518262 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121650467 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104814475 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132722744 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13492136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.115518863 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.133322641 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163624203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123348651 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167567248 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145179123 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144755501 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157181085 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.134343972 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.127157879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114239771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220401284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160322309 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213540452 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13356757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165044517 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186088728 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110278155 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115394002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098518446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16125222 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121595778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174498505 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192578949 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19365699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188860144 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171350416 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123826247 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.084568563 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143006901 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158508522 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214362937 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139921876 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142379035 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183829095 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127137052 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115299688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154603401 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180819326 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129096592 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179461899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092088729 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259866138 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09258471 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118455453 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148650958 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208744848 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.098537011 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16241642 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155269308 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152976222 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148564137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133781263 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196972996 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205019481 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20377805 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163261297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.115127527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119436562 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181735742 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178331589 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142391906 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12432725 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189752148 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178157519 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202259802 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.126671471 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156100072 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153500341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14235493 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171520583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119876513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187673192 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119656345 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194765869 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137430739 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108403064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180301339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.176050645 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129549832 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173793129 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159787838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121059544 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117316032 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154737694 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162444074 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143441118 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.110381513 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164741145 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088934281 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19765527 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234067492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098268516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139645451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133563757 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119604201 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140958066 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143010423 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124361015 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123357873 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209178676 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099559408 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196041874 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18520585 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15082083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178573411 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108297147 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693942143 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095135317 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177691943 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136161262 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206657658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129909864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154032111 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140220482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150385619 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176372593 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140581042 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.212046472 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197177191 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.160764099 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11698175 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141904814 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146161291 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129897395 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114741426 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171795988 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124638923 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137615536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182416931 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152792223 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.09786736 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12551395 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200659865 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118362123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181953667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159021617 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099496498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173312528 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169576986 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114823274 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160454143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20625142 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102483626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134616814 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119484354 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140390069 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235915839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087740918 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205036215 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161527931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139291574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149361062 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129900228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171296835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137875684 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178305299 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126314506 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140834573 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116818604 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119152623 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114383986 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139711565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150804227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.132818751 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143232276 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123160176 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180885256 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.109524863 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13008167 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184486939 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194632393 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196173485 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116490256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116569553 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14232518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111534901 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177302847 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160784842 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.1178631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099815517 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.122401815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11483935 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1235371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141935643 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183490724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148861879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208314227 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.098259797 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262143167 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126918019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139912347 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.080582019 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.117730898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135178114 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132134503 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144031047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179173123 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244529318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.131674804 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097289698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134582208 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.110806089 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100077533 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150901242 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146524672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180259643 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128417188 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.072973965 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144381164 seconds)
  done (took 74.384215463 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144750011 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11428911 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.130334292 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.291251894 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160000829 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250143997 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.192706549 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235383582 seconds)
  done (took 2.362951533 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.168934779 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.109092765 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.142318711 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119734788 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.081125047 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.157236282 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.318521275 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11605102 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.081048321 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.131430179 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128564516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.100236102 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489939134 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.103416702 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.103739201 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075488121 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.104185419 seconds)
  done (took 3.370486512 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.451747063 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.587068598 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.47564593 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.087808892 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.657117671 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.102172699 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.873120151 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162681812 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.100336112 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.408065628 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.751837519 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135865031 seconds)
  done (took 16.64155104 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089041194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.107728088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.100111771 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.11987377 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087963269 seconds)
  done (took 1.357364493 seconds)
done (took 116.070936416 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.084363541 seconds)
  done (took 0.925502179 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383925882 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062774084 seconds)
  done (took 1.327449046 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095364452 seconds)
  done (took 0.954519218 seconds)
done (took 4.059286698 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.251525392 seconds)
    (2/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.237732151 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.159085185 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.237932162 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.220289724 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.212896905 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.255336514 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.213634916 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.155446249 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.14955003 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121577422 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.095840539 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.182673534 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.217927152 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117626638 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116622657 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086427378 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.210068517 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.131852652 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16698161 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.206374351 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.086819007 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.148303471 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167645708 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.063387295 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186298538 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117187743 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.246042328 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.207819913 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138896233 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.173060266 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116332068 seconds)
    (33/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.227226191 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142045054 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11034981 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.124358994 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130356049 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131164085 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.17647222 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.191939678 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15577986 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.087220954 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.186966307 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11047011 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112826667 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.172098984 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06761018 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092489811 seconds)
    (49/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064474205 seconds)
    (50/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.122852121 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15123533 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.133741532 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112723465 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132061374 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200411298 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169502827 seconds)
    (57/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.074375032 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134579752 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095531631 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.192002627 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217984675 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121522604 seconds)
    (63/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064523694 seconds)
    (64/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086730417 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11085178 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169916387 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.111469754 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093219706 seconds)
    (69/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.153350943 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133072214 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13444977 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118514663 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.140243609 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086035743 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.190404796 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133927545 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.120355419 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.103576148 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.185330428 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220846519 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110251372 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.135016202 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106342157 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.083228913 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.221210882 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.179873066 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.122076733 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085735901 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0753908 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093604026 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114954708 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062858276 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157557049 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177357367 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091537152 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086691988 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.063627064 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128665514 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.162687731 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.096346603 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095726201 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.1069883 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089927366 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111395791 seconds)
    (105/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091655106 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.111475767 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064313214 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132520268 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.130700925 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065429116 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.179915779 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.105191671 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148058041 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.1320225 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.073672387 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.073238694 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127345611 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.145306243 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.162408956 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088551907 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090587853 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126249665 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093592601 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091889493 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133483053 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093936786 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064062866 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089196741 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091456873 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.130342672 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180449659 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092294901 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173341094 seconds)
    (134/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140713327 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150685288 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117488158 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.190578261 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064241637 seconds)
    (139/309) benchmarking ("sort", Float64, false)...
    done (took 0.168267359 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.208984647 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081999991 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143396842 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.143085922 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06469178 seconds)
    (145/309) benchmarking ("sort", Bool, false)...
    done (took 0.178248353 seconds)
    (146/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.113711016 seconds)
    (147/309) benchmarking ("sort", Float32, false)...
    done (took 0.147850642 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.087354099 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129869001 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115921377 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.195169061 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.186533865 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063844975 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112518713 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089256205 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113819491 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116459965 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085143401 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.133637015 seconds)
    (160/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.074423254 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064095463 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.114190267 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108797659 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093493804 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.191394295 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090282647 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134601939 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105701836 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092699664 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113414757 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065991151 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063637045 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.108499606 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092085361 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181499904 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106159963 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099124931 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.188004778 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.127265635 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09701341 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110746497 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079694292 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.133747838 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091202917 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114897863 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.064708763 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.086662805 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096204093 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112320123 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.089695308 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143295123 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.086505961 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.151744913 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066477024 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11793482 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065731387 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106816387 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065080298 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106880481 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098149054 seconds)
    (201/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169455608 seconds)
    (202/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109577557 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091342875 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1526281 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064448102 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.098691057 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083789499 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113519266 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.109434483 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117185976 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10574715 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065803534 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08344799 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171298254 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114010248 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109026417 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108522885 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065497485 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.138379966 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.104659256 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080938809 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083019709 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.088015566 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093164789 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164381464 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113742721 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086645311 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110964649 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065984393 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090382602 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107177068 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220409524 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.091798953 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117285905 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111938327 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086348021 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105030186 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085200632 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110870463 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085677396 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.128225079 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083345915 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086743325 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086544323 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107198449 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091269869 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13293716 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085716923 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109698499 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064682729 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186722129 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114178078 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086426532 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119814026 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065740798 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108353792 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065793995 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.104995501 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088189946 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06434721 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.176664142 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.183180559 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064458136 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089765017 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068506046 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108020754 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086124629 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065799043 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110400427 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065691757 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.209469209 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114628079 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.085748396 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110035324 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093926789 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169225558 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114220946 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063093944 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.175741311 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.215297368 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.208402508 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081995003 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10417184 seconds)
    (284/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083697796 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105629336 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096598767 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110860632 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082684485 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.112190389 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06184558 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106256311 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092073009 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106263358 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065624998 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126942758 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084381265 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.088277176 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066728632 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110668294 seconds)
    (300/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066545952 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065154241 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122345152 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065809966 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.112763062 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108457543 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15105297 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122678829 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085941536 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115603485 seconds)
  done (took 38.523995654 seconds)
done (took 39.378613426 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218785419 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203542875 seconds)
  done (took 1.311049521 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.118648281 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139971063 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.121380459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147862154 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106710637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115727232 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137955295 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115670973 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084631803 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105113793 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084207783 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107425836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148240942 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105105068 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083231917 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107644886 seconds)
  done (took 2.765622066 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.116273893 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.241446711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12775467 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107444817 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089270643 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108556256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081595111 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112243516 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087037869 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103306878 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086187002 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107107283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082644827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108521046 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110823936 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090049234 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106697718 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089391107 seconds)
  done (took 2.852504304 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11159398 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146887889 seconds)
  done (took 1.168997407 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241816929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160876031 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.226659543 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.472754966 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277132388 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36267405 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203145762 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212455055 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16171471 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20959392 seconds)
  done (took 3.42314057 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116933813 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178557038 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.332859866 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155601072 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.103597118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126148256 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155401156 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13027901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121273944 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.120279695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099823832 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117281631 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137701951 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0917193 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114477804 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116902153 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140244931 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091887942 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113929604 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092956284 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136894884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103815223 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093550527 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113863398 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117623842 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096915436 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104628154 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.082560232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116442184 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113458054 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090391951 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124428383 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117528124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153240578 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12166118 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156216875 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116680055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088604218 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115579046 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109249415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096410934 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118304346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122321551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094319079 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104965591 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115552154 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084094343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103504686 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092290936 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118848461 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111983103 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091827055 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15278621 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117769653 seconds)
  done (took 7.360941817 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782680234 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154847454 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088617134 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.87108991 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132821139 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101600148 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.763867066 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108994685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252084341 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.74182942 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130612561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11882225 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207470409 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25795253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.002965775 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287852507 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632506244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123832871 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151121876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155136501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119526726 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116521888 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133182616 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460388214 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115458569 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087028465 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115631039 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117050716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157522009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123592872 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090434182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201742425 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252527812 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20130161 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092881251 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115064274 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091185621 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195519431 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26910782 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197377649 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181511902 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111417418 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090599725 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124257302 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134957668 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087944889 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186924143 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178913098 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17371026 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117136341 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124446177 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099548019 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124193386 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166426419 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124442878 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323823247 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313383882 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091939593 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124409846 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128144452 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244493201 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1268668 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230339476 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141768218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213819444 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092401249 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801069496 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173890819 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113635561 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09659839 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123283122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117427421 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101508477 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17133396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392545603 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127036144 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116608818 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092354432 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230889758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104866288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11545126 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163794598 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120491797 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121964407 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105569195 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125313348 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172531854 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259898944 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102849144 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122775202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117019451 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104796817 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119417703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21529648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223465878 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16599088 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232288037 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101857058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188382544 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172409257 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121725343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176059015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121707089 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103917094 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125746546 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219749201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146998894 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125065075 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09716995 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121308199 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151584671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130506058 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09781715 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195236906 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486497192 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171656115 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111787332 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130108266 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100564086 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186040814 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10082435 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269563639 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124130872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172608345 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121711888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088783711 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123609934 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165624008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124497854 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121947333 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103620076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121747508 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23827105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218894267 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124322367 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221726112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185884305 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121743091 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175064608 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124592203 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17041205 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123096626 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122699909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097842227 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800318009 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126102803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100696974 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118441708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199595531 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090277759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127714546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128853365 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088319445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809978266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131912496 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123961866 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105551275 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121275582 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122702974 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097756984 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118731579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165873831 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23333147 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122751428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098423582 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127496835 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163092259 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120307129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.128697414 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126563325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106664743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125429881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11755775 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104500799 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193859231 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167485398 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223534663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569260061 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11528135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12685481 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207973271 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115505595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293258946 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122260001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20641049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189006243 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100732328 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313488308 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167076238 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199283396 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.13365596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.198596142 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0898916 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121375465 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168241894 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114325439 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09809881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186607137 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106312413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126576435 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975225103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087957322 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248741591 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090149906 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173420598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119543133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122671744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301208451 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088501889 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128673214 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167828761 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11727848 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126918491 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718494808 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129864027 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100679891 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121780491 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226492346 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167991964 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123271247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122289 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09917242 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187001366 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211811451 seconds)
  done (took 44.557507164 seconds)
done (took 64.337396739 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097147741 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137103343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096018296 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.125019446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122374922 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092222874 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117845675 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09815193 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123863329 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123606118 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098044759 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09189666 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098106114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119170869 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097080618 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137860461 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123371495 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094122139 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117917823 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086986502 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11957523 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086548408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112303278 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069609976 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12090815 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094234497 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11613395 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096201513 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.10986318 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085236271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113580589 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09409482 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.110130495 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123205745 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094325673 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118724179 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096888813 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122305608 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088798148 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110466301 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.094894789 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110583811 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093283881 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118855216 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115177219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093715638 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11701216 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09972096 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13874853 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091881969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118987588 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120761817 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097412971 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117276326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091376999 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118970505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092451685 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139361712 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118020316 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094089247 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117266791 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095758829 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116010628 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09583839 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118956979 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097185772 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122837444 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115620016 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098622547 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115981208 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087202272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117639551 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090499432 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111445506 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097299676 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.1216779 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085742579 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116950014 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093538089 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11582864 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085540709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112809133 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088902321 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117532053 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111676276 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071218357 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090584282 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117633077 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086191015 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119518982 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115403303 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095106278 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111354332 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099522781 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109647995 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093155059 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11086885 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087351742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112292028 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091539091 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109709328 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090344822 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119342584 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088961685 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116609164 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098627979 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111465694 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094669196 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110231539 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085754613 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125016836 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120600481 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087685489 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116960387 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08607569 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118194921 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086618806 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110507719 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086699535 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110299271 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093031688 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111013061 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089919192 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118079104 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101290282 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111749364 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.089831582 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115271301 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108841222 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094865435 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110176862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088351215 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111653098 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079519301 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090110678 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111849874 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116486365 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092129262 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118275034 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090054202 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120528025 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091821875 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116825197 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092368971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109711242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074790108 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115948032 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091005966 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112010863 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087622872 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112464694 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087330433 seconds)
done (took 16.891932197 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 0.104364576 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136143285 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153740657 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12019128 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 0.089329032 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136113378 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.090837731 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108427428 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.104676585 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.132564538 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11414042 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097673352 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123764973 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.09830845 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112026756 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.114647264 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.090133254 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121178527 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088436552 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.121027691 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.095102146 seconds)
  done (took 3.362612157 seconds)
done (took 4.303013705 seconds)
RUNNING BENCHMARKS...
(1/10) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.003012145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.998689393 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.984455132 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.001651744 seconds)
  done (took 24.919962484 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.011954755 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.005914347 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.010217582 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.006990353 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.010437551 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.00653562 seconds)
  done (took 6.987464821 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.124438563 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.001774017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.002075679 seconds)
  done (took 18.061369769 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.178991202 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.06528796 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.287538303 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.739300831 seconds)
  done (took 8.206257756 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.009399877 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.008649724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.010370543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.010908909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.009345182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.011366512 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.009120756 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.009044419 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.009946321 seconds)
  done (took 10.02332741 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.263545306 seconds)
done (took 73.399037358 seconds)
(2/10) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.688416493 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.697981179 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.017518144 seconds)
  done (took 10.338629311 seconds)
done (took 11.274969597 seconds)
(3/10) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.019660301 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.073537806 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.043333981 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.978268549 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.097276642 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.019843403 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.282630634 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.045922212 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.018349943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.987439494 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.999457207 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.012018513 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.025988332 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.281243099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.000671545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.002112185 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.06691819 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.530470213 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.356051553 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.006125064 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.002145695 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.008694588 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.015132897 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.013374819 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.060780664 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.999597447 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.002436755 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.023569031 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.815926448 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.005150946 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.087514632 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.484935972 seconds)
  done (took 183.30002918 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.999731171 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.059711591 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.122266175 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.04181526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.687045232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.195875432 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.119647314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.739447617 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.014742413 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.015844463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.214771406 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.000869483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.27724406 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.007776882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.01785855 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.018439275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.18355824 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.292472315 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.025678381 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.223866614 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.019453278 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.082023468 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.041381032 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.200852762 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.047395555 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.007546938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.009766257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.023088083 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.209107382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.122888169 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.017965149 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.015221631 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.505174364 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.862939904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.020005565 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.016765414 seconds)
  done (took 142.396132633 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.286995823 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.002237583 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.003022021 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.002787144 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.029169899 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.00413757 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.468721413 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.471810374 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.497273863 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.028773288 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.058901689 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.172315565 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.004836454 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.09171341 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.014676832 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.002301809 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.017775772 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.043266852 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.003156287 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.002892699 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.469255047 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.01792631 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.014132262 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.028331925 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.004815199 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.02877419 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.390513984 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.00312541 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.00222811 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.029426934 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.316961122 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.043661133 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.002137405 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.299121543 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.719224986 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.11401798 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.004964516 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.030006776 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.004152598 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.273571063 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.004769489 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.005273645 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.007833443 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.573753311 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.007154579 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.471528286 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.008797908 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.86513646 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.004726012 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.00574916 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.286295571 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.488015946 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.021765277 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.004529386 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.008226367 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.00570034 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.003327611 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.030811153 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.294422633 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.096191574 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.024491247 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.007659011 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.031907115 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.008900087 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.090658925 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.009140021 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.293047783 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.065423417 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.117616736 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.005998316 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.007102792 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.007645576 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.47641464 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.011062447 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.100007916 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.121163653 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.007432966 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.008761386 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.005926834 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.009032068 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.111346021 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.006667427 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.366003412 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.01470786 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.006708419 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.063042651 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.102020662 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.006909149 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.295245152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.011539395 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.010180952 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.674224695 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.098363832 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.006607699 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.00837753 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.007865525 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.36867227 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.479492658 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.171536762 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.011850037 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.343736596 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.013644748 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.383479212 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.462225675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56129849 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.007825968 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.11378204 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.011470439 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.009098742 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.009332083 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.040015584 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.026304711 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.070214119 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.008552168 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.403012478 seconds)
  done (took 320.548994475 seconds)
done (took 648.465846344 seconds)
(4/10) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.074996638 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.038123068 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.019551405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.016855289 seconds)
  done (took 25.091729274 seconds)
done (took 26.033139502 seconds)
(5/10) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.009790565 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.011311957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.013613932 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.013906548 seconds)
  done (took 24.99074684 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.051280584 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.050720499 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.070284637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.062770577 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.0534878 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.05046297 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.043682669 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.042558868 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.060733595 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.054489352 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.052814047 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.051976813 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.050552919 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.258902804 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.052570802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.053875702 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.061858437 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.051378332 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.042160097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.053211025 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.017423907 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.061807794 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.053301699 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.017756989 seconds)
  done (took 26.365339736 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.53885959 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.088279526 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.171118439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.069482586 seconds)
  done (took 5.81165124 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.069772513 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.071977036 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.086406586 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.122438055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.153866077 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.081629348 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.046203663 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.039451507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.025459669 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.071554996 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.147713041 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.087443239 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.165310287 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.019631004 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.215316914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.018618124 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.019987398 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.071493019 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.122295158 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.138350738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.019151841 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.071146015 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.082839387 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.08837839 seconds)
  done (took 26.981979054 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.019490369 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.026211633 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.018288941 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.017593266 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.026771613 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.018557447 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.019137046 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.021445175 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.018814488 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.025159127 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.017868146 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.031591701 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.018240078 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.018682153 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.025647432 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.019315889 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.02569147 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.017738699 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.020304922 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.023734303 seconds)
  done (took 21.377090006 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.012504791 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.918832839 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.364781069 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.269539794 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.013539577 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.012711769 seconds)
  done (took 26.539287574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.074458196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.204118596 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.022148083 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.298190115 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.392179152 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.038576297 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.020285647 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.218824826 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.468335907 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.446064985 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.066871087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.079419445 seconds)
  done (took 15.28015961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.013855513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.015738425 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.020400451 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.032701575 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.063907389 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.038266026 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.027668582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.012796259 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.066479448 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.082922245 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.042110532 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.065160752 seconds)
  done (took 33.430184945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.102989729 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064994997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.80407 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.020789234 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.746429046 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.228683084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.070310517 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.467722056 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.023606013 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291681501 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410331738 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.125806536 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275061598 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028138015 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.021549748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.862494882 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263842906 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46211212 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020951268 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496461433 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045631399 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.020549737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.651821287 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.050829061 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.230290349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.165734143 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.279613921 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.793706467 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.259263404 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.03244234 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.029262589 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.018360415 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29216307 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620656628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.129996269 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.02719984 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018194195 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.654026631 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.01549646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.496963048 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131504308 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.025656487 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.035118468 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.019750816 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.953966393 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.02572312 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479283821 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.030166076 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.73548165 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.019308766 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.03496175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.116923603 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.024387265 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.59271356 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.020139325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.033412932 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.021906871 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.049931185 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613173919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010357605 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.027641908 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.962198946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.026960704 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602692105 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600397938 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.139249283 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.027229416 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.025677842 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959145458 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.593334103 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.043574245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161508105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.046509448 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68617573 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681062481 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.427209752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973757283 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533101291 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.028116143 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.963675224 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254059564 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.800568642 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964689335 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.97159244 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.957967475 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666917381 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.037113771 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.324889715 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.04901287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.487207478 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.035985309 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.042539387 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.050219733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.251247239 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.903129025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026401231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.166994713 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161206366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.04772154 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.46659053 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961665713 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.027293834 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285302295 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.237847489 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.033607193 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.88044718 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235390229 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028863588 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.064036869 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.03299894 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.04010591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.546782958 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.049916166 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.015748708 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.043513992 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.80079194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706096087 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040671456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.129679687 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.418738609 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257484621 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.718787346 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913399541 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.091664844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029966843 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.028449536 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602858261 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622912381 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.906109363 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.021858916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.026096602 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.039287013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.029423018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990719876 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.025398608 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462459662 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.807583409 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.253106627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.024711767 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307400875 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96415297 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186417326 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.062348944 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.245984166 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.086822415 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.041736577 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289484521 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034159206 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.039442239 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.043382703 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045037327 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.12969253 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.051704294 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.02772438 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.28651786 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.028014252 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.035310967 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.611618458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808656093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034501167 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.037304498 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.039681118 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55770047 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014661904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.037293279 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927309247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.044368804 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.09892075 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.034451163 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.041579484 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.502154754 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054379188 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.037150439 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.025138339 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.255369763 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.038210083 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.590519112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.110651708 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.222718257 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560705463 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.056667028 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.96269373 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.739648076 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.722966472 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030542186 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.222794537 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.032030945 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.042889708 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.044014541 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.040174536 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.565165327 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.052322601 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.523756571 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.040705003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.045010266 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.034010587 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.032356088 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496454722 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041757338 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.04319688 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.045682885 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.177947865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.047817416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.967231993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.548415087 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.037738556 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.033114552 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.816426366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.065300369 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.514296452 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504781216 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288418189 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.040725107 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.045519152 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.679218167 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.061144461 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.03333566 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182200217 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053564748 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.033753857 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.053897099 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.040440273 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578663948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404138685 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592214171 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702700714 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526879263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862425201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.037737524 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.930198722 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.473163267 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968148141 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.688820632 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.186536227 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487827579 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986369826 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.223890886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.085588149 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684968975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.041977097 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259563304 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844254663 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.19637611 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.058949904 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.243304745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.063029911 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.034645545 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963742989 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.548267678 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272335833 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166443264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.111614033 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476576468 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187564496 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.828325244 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.0533019 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259378016 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.198698947 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.57818901 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.426594387 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.031279998 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.449975566 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525655074 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.038875986 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56153843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599610071 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.054602501 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.227089898 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976320492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.041138952 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.042253183 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.0288667 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.985864445 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.350487671 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.306891965 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.043903732 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967468171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.040525036 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506794767 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.902186121 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.040888843 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.035739953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704087291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.037187197 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.278061759 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.045128205 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.446276906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057811687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.969433508 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968783942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.721296756 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033712415 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999792302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464830312 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.030631489 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060599661 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034557506 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884267685 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.284885893 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.042457179 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543811074 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.268318196 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033262619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.070238714 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.131326658 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105167618 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.021791497 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.926576573 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.260921072 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.026790641 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.258490433 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.773520992 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.926865066 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.09132178 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.243849436 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.92578955 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.306604836 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.260889635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.75677619 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.044119937 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681512575 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.065693891 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300429317 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061844621 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.032576373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.055761698 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.117315295 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.038535353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.039985943 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.039204383 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.182146251 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308041744 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.046452165 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.041944516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.127912243 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93078761 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.421580898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.804721604 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552759543 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714614414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.561963887 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.057987674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033647596 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031761212 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970054891 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.182864662 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56069409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305197394 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152446137 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.041489715 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.058448401 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121013735 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.05064836 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.249459432 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306167878 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011357368 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031953861 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826571455 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.19000978 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.041964655 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.242311122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468688706 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540661082 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158588059 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.034657954 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472056996 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30912046 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122603243 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029617928 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624816812 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.037129799 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240201055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.053719751 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324527609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.177265904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.040187798 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634366016 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.062009016 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.184420676 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.801894016 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.41921195 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.290767617 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356059479 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.044002704 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542211741 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668200546 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30000935 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.09938761 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.041512955 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.144149128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.179135271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.12847747 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.943312177 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031131704 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872607881 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.738646949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.038524909 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538262853 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310823818 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.026176682 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.138709172 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.071593477 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.039380397 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.253087404 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641468171 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.257084675 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.039948894 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.030197587 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.59934406 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536830193 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.05962776 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963604372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.033750053 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.236915322 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.285569513 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.050780223 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.496479793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.740237616 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515236813 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.004724711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.051513869 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.030207838 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6436847 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538439844 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.411456266 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458431782 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692170313 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029810768 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321758043 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.034941489 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.033015708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309638543 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.033206905 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.040261896 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.045816777 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.534242851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656301043 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.046118405 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391974292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.973141635 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256173415 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.045043888 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971460689 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028046278 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.179254012 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.03388615 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159393124 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.040590466 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.031055514 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044853756 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.796936916 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305062785 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.035096019 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.021278901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.942190976 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.035957968 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.057693098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27902619 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034794056 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.703927487 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.379740881 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.284499887 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.035896259 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.013626413 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.032290636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028023601 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.746289898 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038751874 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.040482418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523492728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.036406374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.058354852 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.035609315 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.248058611 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242119645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133197675 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.062344672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03397159 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.049930988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.931631916 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799200746 seconds)
  done (took 1459.479570736 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.05637574 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.050427243 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.044306884 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.100793013 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.069142934 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.061765434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.079647726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.040609551 seconds)
  done (took 49.464506775 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.030378378 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.195348662 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.05698041 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.039770453 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.045224629 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.038320371 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.394911466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.050307905 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.040036223 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.042033748 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.034134829 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.04202113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.601114296 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.042007447 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.037818656 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.024870996 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.044855307 seconds)
  done (took 59.724627957 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.040642522 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.261354062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.068763375 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.035238779 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.448349951 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.057556438 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.700831764 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.076666604 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.030440773 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.290068878 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.694253298 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.04883662 seconds)
  done (took 79.717961487 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.041020285 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.03924445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.038809738 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.0391708 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.040073371 seconds)
  done (took 6.162769429 seconds)
done (took 1836.268353241 seconds)
(6/10) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.01492401 seconds)
  done (took 6.979610867 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.539746135 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.514988598 seconds)
  done (took 4.020654264 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.329892256 seconds)
  done (took 2.297192095 seconds)
done (took 14.26092757 seconds)
(7/10) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.182690708 seconds)
    (2/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.372143443 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.98042389 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.025194633 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.01674515 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.452548105 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.246598934 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.061265146 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.26211811 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.036961316 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.147789996 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.076391876 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.044074154 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.142825696 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.121138942 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.062827958 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.121551884 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.059628372 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.874769442 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.071131853 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.02107485 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.17418887 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.264343675 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.020537939 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.28729018 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.544107016 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.125363547 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.036279923 seconds)
    (29/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.523667034 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.134676676 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.516664622 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.039315203 seconds)
    (33/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.904983599 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.737199891 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.408125057 seconds)
    (36/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.485912868 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.312704743 seconds)
    (38/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.711062606 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.040461482 seconds)
    (40/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.388285848 seconds)
    (41/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.7745783 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.02754832 seconds)
    (43/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.0220324 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.065302706 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.168328505 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.01714746 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.040258582 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.032425148 seconds)
    (49/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.023084387 seconds)
    (50/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.609397933 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.106182 seconds)
    (52/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.046348436 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.486256161 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.447135135 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.022652324 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.022946689 seconds)
    (57/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.021834649 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.382342219 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.05453226 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.060185775 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 6.038070944 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.179603081 seconds)
    (63/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.496736709 seconds)
    (64/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.026429705 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.889317262 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.103289932 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.153423151 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.295904857 seconds)
    (69/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.678937028 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.00462497 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.134352047 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.057810887 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.08377011 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.097167219 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.039651683 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.13467962 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.337413498 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.313529437 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.043269 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.116318695 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.583456874 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.380955296 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.10799806 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.203137836 seconds)
    (85/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.051443474 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.896706778 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.989902731 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.928607419 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.714836563 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.070198916 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.06564986 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.170433077 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.022040759 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.779793241 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.080433969 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.280760535 seconds)
    (97/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.671186131 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.088579848 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.020892173 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.024213472 seconds)
    (101/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.131125578 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.054759961 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.059114309 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.276547576 seconds)
    (105/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.078327037 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.0662592 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.022526627 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.057019695 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.446621413 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.056478683 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041113598 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.00856978 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.874260026 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.096630679 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.176161697 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.048355106 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.923319158 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.047926879 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.311159107 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.35164209 seconds)
    (121/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.128572748 seconds)
    (122/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.017095253 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.131735615 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.022998886 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.412836396 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.053929011 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.367033877 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.022653982 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.070119808 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.825056396 seconds)
    (131/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.873745082 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.278383363 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.023440841 seconds)
    (134/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.344745516 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.145760503 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.042859186 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.062126818 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.328965165 seconds)
    (139/309) benchmarking ("sort", Float64, false)...
    done (took 5.163680688 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.095497258 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.402624071 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.023146728 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.63111057 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.793932655 seconds)
    (145/309) benchmarking ("sort", Bool, false)...
    done (took 1.55226153 seconds)
    (146/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.081963043 seconds)
    (147/309) benchmarking ("sort", Float32, false)...
    done (took 4.968264257 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.023823684 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.023449722 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.388059017 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.293382599 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.046106839 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.899632876 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.633779127 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.623479691 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.305783452 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.06962878 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.539891051 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.271688998 seconds)
    (160/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.00077329 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.3363055 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.159587971 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.10793486 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.068495564 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.043466477 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.072195549 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.793764322 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.64763441 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.070620052 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.071341126 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.57671563 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.024824394 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.150357479 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.066719403 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.025372295 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.729642282 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.929417535 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.031362642 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.104680486 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.054196104 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.108908546 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.025979482 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.832197922 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.074662783 seconds)
    (185/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.153141807 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.108259856 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.266173721 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.073807799 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.070327434 seconds)
    (190/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.160593289 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.114776951 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.06300993 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.043838219 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.237370317 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.169481207 seconds)
    (196/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.026823795 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.422445573 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.222160187 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.3935598 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.787577341 seconds)
    (201/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937618313 seconds)
    (202/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.144628448 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.07236375 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.036642137 seconds)
    (205/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.032894659 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.029845515 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.792232973 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.645077117 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.047428536 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.109728264 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.418172969 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.03945827 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.750881039 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.029020207 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.178143796 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.062891574 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.792294337 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.028012544 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.846590392 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.124341954 seconds)
    (221/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.570448961 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.797704775 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.212761953 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.086977802 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.073490924 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.143506508 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.052086606 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.11661085 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.025812298 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.073024887 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.129402537 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.045328166 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.2486365 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.673157231 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.129721772 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407436032 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.136980669 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.219173708 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.080698439 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.584543662 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.30096029 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.103709341 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.027162821 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.053535151 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.047650627 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.203381001 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.647034746 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.051137969 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.202352678 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.061021975 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.049723027 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.074558208 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.046213124 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.102246801 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.302118109 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.064811503 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.034706502 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.135298744 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.152402305 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.863592169 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.062737162 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.1451147 seconds)
    (263/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.029049853 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.060801196 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.597457334 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.060535384 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.227789791 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.039825582 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.162668196 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.028455979 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.061197347 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.08929353 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.076719089 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.06174109 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.437428201 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.084915941 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.057992295 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.14311621 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.047429555 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.057169407 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.04703128 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.060986697 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.364464931 seconds)
    (284/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.105988765 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.322263984 seconds)
    (286/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.688034125 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.733381233 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.142848711 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.12579918 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.02331391 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.125128995 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.053147112 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.152201492 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.024564182 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.870384465 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.648866677 seconds)
    (297/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.33263705 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.82607574 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.084497649 seconds)
    (300/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.502002408 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.812455459 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.81356107 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.028268344 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.064938163 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.037296634 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.11634628 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.156027038 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.632034682 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.050074041 seconds)
  done (took 918.271529741 seconds)
done (took 919.238926531 seconds)
(8/10) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.036296261 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.090265526 seconds)
  done (took 13.099619014 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.209598717 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.157864839 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.045097097 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.056370911 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.04364436 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.053229967 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.045772696 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.042629227 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.042818085 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.041871103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.042752592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.230019599 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.093869729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.041400302 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.04044436 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.136079642 seconds)
  done (took 38.296493013 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.06146196 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.043453756 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.131083457 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.059212743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.060689905 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.187934177 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.092166435 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.043154845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.17171184 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.073835487 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.261480593 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.060695693 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.041766469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.902172487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.057757328 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.190766802 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.241275778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.260944524 seconds)
  done (took 23.911677556 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.377070958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.031868351 seconds)
  done (took 8.373649884 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.039804247 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.061203444 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.050534065 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.039167991 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.046273394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.054255931 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.072909661 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.068128473 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.047004641 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.035228882 seconds)
  done (took 61.475840986 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.051083127 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.035994394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.036744081 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.034999679 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.039150616 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.029294622 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.038916577 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.019131768 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.767385788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.130379984 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.033753857 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.033165379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.04054439 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.026948462 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.023329316 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.056908256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.16756315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.023711731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.021423203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.029355923 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.025101264 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.104555481 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.058239199 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.022864746 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.12194249 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.777939309 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.031570783 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.028852593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.149309184 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.023197839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.022846222 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.023763889 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.025204915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.585982331 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.423341522 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.029172799 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.042784601 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.030460253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.019769726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.177773492 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.023545855 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.026665047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.019793992 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.40980449 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.147535363 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.11579552 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.998929925 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.038926212 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.022254104 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.074084828 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.023583598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.022449007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.046118172 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.710231991 seconds)
  done (took 92.006760912 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.024233862 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.400958773 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.176149332 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.032623346 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.769436959 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.687075914 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.024196125 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.230076806 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.035135599 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.011325021 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.304165354 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.449283905 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.030865389 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.067324544 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.595572434 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.035045638 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.012536405 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.705647825 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.022985469 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.015461735 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.449692373 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.011115922 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.010371098 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.030580334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.044409094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.393650148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.061780211 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.461579155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.026895644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.010748551 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.407968052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.022386969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.048388928 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.010163189 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.239264028 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.29167605 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.284220288 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.026527053 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.020427595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.010649391 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.022808801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.3895348 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.292929677 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.023127536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.01114399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.406966037 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.023720307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.015401085 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.012630843 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.211036656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.829531127 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.011607431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.118486619 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.016782522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.295490019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.088881332 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.063684714 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.42212543 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.023476312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.072794512 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.030103614 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.013748883 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.01414692 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.011581678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.020743547 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.283915582 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.401739651 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.012859659 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.280029081 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.410384916 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.018791201 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.473706141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.844750945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.02200854 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.060053939 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.005221764 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.573517889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.42002475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.024805851 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.005130906 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.266544004 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.021066846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.295136391 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.016219278 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.005094084 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.456278302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.014307536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.026051975 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.006215561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.006096715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.770388906 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.008136144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.243015599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.071312461 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.005829787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.005085266 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.024046097 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.006282085 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.020792677 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.013713328 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.46379296 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.023278825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.083763911 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.019573977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.911996763 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.012532155 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.008635886 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.006113722 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.222648739 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.421408423 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.024918783 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.008650803 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.006639877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.007313859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317846307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.010789233 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.242660681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.022168748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.006679781 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.025258669 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.692788109 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.051999113 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.007745953 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.013507506 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861918635 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.206973403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.030139881 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.007370635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.008247745 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.021207521 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 4.985652756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.021571211 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.026995343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.013751959 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.642624538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.036264874 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.044759702 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.48148753 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.018028792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.604022852 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.027357902 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.009461229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.27623277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.241402769 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.292546158 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.0222041 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.013566797 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623261187 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.071654752 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.144547635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.022485389 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.989492572 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.202270937 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.215109701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.009328081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.617842969 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.011389023 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.220904253 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.009628005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.289308525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.431358689 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.026054358 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.012114946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651739183 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.7017526 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.638921117 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.01157952 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.302834306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.949907933 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.49264571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.010092968 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.010904098 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.576515033 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.010933575 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.012557289 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.0108497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.010068096 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.069782784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.181018008 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.243055279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.014421026 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.389544765 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.091618393 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.914232204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.015581614 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.013482743 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.35807808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.089243605 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.016302498 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.060920228 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.011043844 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.013395155 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.412209211 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.847024149 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.010917586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.157571167 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.567776888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.02838372 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.013035619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.597403937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.279846035 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.450701878 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.050782877 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.251452781 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.030812639 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.044509705 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.668992529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099140992 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.454449441 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.024573596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.012497824 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.535830406 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.024090773 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.079085815 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.013123699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.01295397 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.476984869 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.023706332 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.013084265 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 4.981715374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.02641087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.270496253 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.01256758 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.042324231 seconds)
  done (took 1033.797006353 seconds)
done (took 1271.933372517 seconds)
(9/10) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.045799091 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.041274712 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.02405573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.044925401 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.135072143 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.049960161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.034158352 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.0257839 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.071818016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.073014274 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.022422433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.050253389 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.025057752 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.024639804 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.023749925 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.039392627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.850723247 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.024944635 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.041279901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.034222777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.040722544 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.023897626 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.073882861 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.051018372 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.02738527 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.028508777 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.027371104 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.04390878 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.136474448 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.028152731 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.028488178 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.035916569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.850476424 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.023526901 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.019965322 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.044499116 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.037699749 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.035325602 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.028739886 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.056965544 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.158188276 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.036480663 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.027503506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.026672506 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.026397081 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.030471848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.027053071 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.032943141 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.040262175 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.042026886 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.150275137 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.054002659 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.029330591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.027645351 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.037846553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.026395871 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.030743836 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.044405401 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.045496375 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.044997565 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.838631481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.031104655 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.02883096 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.043536692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.034362888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189145297 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.035343819 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.031579549 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.163873742 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.045109964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.189037857 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.048483136 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.029619626 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.041453986 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.05950612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.855955989 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.023017156 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.027354105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.034918095 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.026564715 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.037809554 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.04196014 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.033415345 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.028978719 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.043028003 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.05481269 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.038405643 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.0300145 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.03791107 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.048863307 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.035856178 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.040564739 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.032679233 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.024652115 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.037763888 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.033235079 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.032122785 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.0329285 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.034307636 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.040180772 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.16466172 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.059928552 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.026030329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.026614363 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.029031091 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.042761288 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.168771982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.042184662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.052043313 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.077331983 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.032006296 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.845610622 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.033742067 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.048436348 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.040439413 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.033294167 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.025351252 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.846274069 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.161445373 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.057754682 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.032138926 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.029654052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.047833498 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.03348868 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.027723872 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.862353519 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.032999842 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.044813882 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.15195211 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.041250731 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.062417288 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.030615031 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.033647795 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.054214596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.048473119 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.062382037 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.034349622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.04925856 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.047614152 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.029840798 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.042382064 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.042909757 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.032696279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.038574513 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.026155213 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.054391408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.047233519 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.045510469 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.053122594 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.152830767 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.030317055 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.848766617 seconds)
done (took 174.71693048 seconds)
(10/10) benchmarking "collection"...
  (1/1) benchmarking "set operations"...
    (1/21) benchmarking ("Vector", "Int", "union")...
    done (took 1.374432944 seconds)
    (2/21) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.382725053 seconds)
    (3/21) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.032382952 seconds)
    (4/21) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.177530159 seconds)
    (5/21) benchmarking ("Set", "Int", "union")...
    done (took 1.085621986 seconds)
    (6/21) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.182747309 seconds)
    (7/21) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.382026761 seconds)
    (8/21) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.031933764 seconds)
    (9/21) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.384473421 seconds)
    (10/21) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.387077433 seconds)
    (11/21) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.031235629 seconds)
    (12/21) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.176729777 seconds)
    (13/21) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.181212287 seconds)
    (14/21) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.387199865 seconds)
    (15/21) benchmarking ("BitSet", "Int", "union")...
    done (took 1.029639374 seconds)
    (16/21) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.033121338 seconds)
    (17/21) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.032203177 seconds)
    (18/21) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387303005 seconds)
    (19/21) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.033401443 seconds)
    (20/21) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.178037412 seconds)
    (21/21) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.185944453 seconds)
  done (took 26.029526239 seconds)
done (took 26.980648027 seconds)
SAVING RESULT...
DONE!
