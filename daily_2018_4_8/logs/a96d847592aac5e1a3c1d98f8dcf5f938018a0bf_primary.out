cset: moving following pidspec: 12028
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.107556929 seconds)
loading group "string"... done (took 0.498417738 seconds)
loading group "linalg"... done (took 8.498501217 seconds)
loading group "parallel"... done (took 0.1740176 seconds)
loading group "find"... done (took 6.132361821 seconds)
loading group "tuple"... done (took 1.896689239 seconds)
loading group "dates"... done (took 1.349229413 seconds)
loading group "micro"... done (took 0.18994161 seconds)
loading group "io"... done (took 0.508477576 seconds)
loading group "scalar"... done (took 51.200591257 seconds)
loading group "sparse"... done (took 13.698284536 seconds)
loading group "broadcast"... done (took 1.293662122 seconds)
loading group "union"... done (took 9.230932433 seconds)
loading group "simd"... done (took 3.029059135 seconds)
loading group "random"... done (took 11.484265029 seconds)
loading group "problem"... done (took 2.21029963 seconds)
loading group "array"... done (took 24.308507536 seconds)
loading group "misc"... done (took 1.1133365 seconds)
loading group "sort"... done (took 3.709987893 seconds)
loading group "collection"... done (took 19.296778645 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615586353 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127448096 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205354681 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.23183296 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.223281232 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163039765 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158543603 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236670116 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.622404341 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.194314601 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155629644 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421093878 seconds)
done (took 6.173767131 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251113513 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244082464 seconds)
    (2/2) benchmarking "String"...
    done (took 0.165987402 seconds)
  done (took 1.169416184 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076508192 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155378591 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109325142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094541913 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092867981 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109626908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092968396 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110052334 seconds)
  done (took 1.529699076 seconds)
done (took 3.789507724 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492834869 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.857184499 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.498551828 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142198208 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310716989 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.289614112 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264271883 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200522233 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093299645 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090665222 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177938309 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.39001333 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.394122689 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.942444975 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088863842 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109922258 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.118073905 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.757432907 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078733094 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124684196 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512725142 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19866517 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11527123 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108763711 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186583352 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.143267758 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162459399 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103091319 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657111603 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132457499 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179183198 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099520122 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159112303 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165235017 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197413204 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115490873 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665197588 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199781809 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098120368 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101268637 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671477929 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117829308 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186948522 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105699416 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090640532 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181548586 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100975121 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093833628 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093870178 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086479714 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165608052 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.436194896 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106957535 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168975352 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092118827 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.678619827 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096393096 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274109251 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125659458 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09433839 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095194419 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088452126 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158484956 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092374612 seconds)
  done (took 19.924222984 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145321213 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165703616 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077860633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158810339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123393066 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07955912 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104647287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078746143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127614112 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181736052 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139315519 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154582283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094401702 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092447033 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129317579 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250995777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108591826 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123810951 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090310867 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090829454 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143222303 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098366774 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108581211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094390234 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170581927 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205113386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107088338 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121074905 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08866088 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094041823 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143884789 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146452838 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096994921 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089895633 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190275108 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107875181 seconds)
  done (took 5.303656485 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223630327 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105776847 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.232492247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.20064574 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135086585 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189468542 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170206228 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253011928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210231664 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184302384 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17679176 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114493353 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112035547 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078266552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08076137 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07811683 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487111702 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14882189 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.19963457 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168905349 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114377018 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084639821 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364869734 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103432132 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085747759 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113908021 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06543659 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.204624951 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095243397 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139461136 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085658234 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124956533 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134435786 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196510719 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086536458 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142242749 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124522958 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116460882 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088882619 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226654375 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103194308 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103403292 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079837668 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115431528 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136973 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11824488 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.112981064 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128301346 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223288628 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090271684 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112446227 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.065767307 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196665884 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127850483 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084891012 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294602583 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.130189029 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103019663 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111911858 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.797458934 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135145662 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082848454 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078400301 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115388649 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078960581 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432455799 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126938807 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.296795819 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084142505 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158543322 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098907691 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12186733 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087053848 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104386375 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110479173 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086591805 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098054219 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087204673 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079729879 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108699124 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116690426 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102688064 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081448305 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147732344 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117954743 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108863159 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125219049 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087461265 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086516931 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10697958 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115664605 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099651341 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090951881 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166112947 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101146998 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132782251 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09666527 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147100693 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088574733 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.250441401 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084131285 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123946438 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103665067 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129145443 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104999556 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08141014 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10353385 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079660426 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080263401 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163573088 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088929092 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081047812 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106615734 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093905852 seconds)
  done (took 28.770184189 seconds)
done (took 54.758825269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.410386702 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087269026 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085997742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106408801 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086904795 seconds)
  done (took 1.608936621 seconds)
done (took 2.418761824 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.322298239 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199062859 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10265806 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195388729 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086316079 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202841824 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187422632 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101442843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214287644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084896127 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193931414 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084657189 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10848075 seconds)
  done (took 2.916482266 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104338677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106397535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101979047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122877033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085751875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102528979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122306095 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109605709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100363305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116235376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08725771 seconds)
  done (took 1.970872361 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098569887 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103953167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0918466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119930645 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086067086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098466704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118199785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10729186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097827604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114351141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087954466 seconds)
  done (took 1.940178641 seconds)
done (took 7.633857699 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.079481474 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.560679077 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.144436528 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210299806 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34906429 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240909998 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568986618 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151379384 seconds)
  done (took 14.262227747 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.165185577 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112279644 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098723344 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090765331 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093198732 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117848068 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095570563 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092118215 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.117818029 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094371837 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093561647 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109897259 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097647557 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091413504 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090963676 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114920398 seconds)
  done (took 2.550030635 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146507705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144704101 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098178924 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100019298 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115977368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100249933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10232684 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118767284 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097040343 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095569144 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12161287 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101414478 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098018028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113141663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100744563 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118172775 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113593808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101433794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117400549 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11752384 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102279851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096489921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11603788 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102319369 seconds)
  done (took 3.539833181 seconds)
done (took 21.166193826 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148122161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103911555 seconds)
  done (took 1.068606946 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138391957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156804561 seconds)
  done (took 1.118890888 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111171496 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089605479 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139169238 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102929138 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092325282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.111242825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116884981 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110844113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093506694 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0931308 seconds)
  done (took 1.886867856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093623853 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095498284 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124650696 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138444716 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099538244 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.115722943 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096372881 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095083191 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.117144697 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091595597 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09518556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.129060157 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096564497 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129069031 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.218417657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096120867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119454418 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095459384 seconds)
  done (took 2.872327475 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089990245 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092028061 seconds)
  done (took 1.009960285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092280196 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08963761 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091764864 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113216361 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091872717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090149257 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110536966 seconds)
  done (took 1.505573393 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.504589807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267979446 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.368071854 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10884717 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152190944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348779613 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14989631 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102441904 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.123398097 seconds)
  done (took 2.987709111 seconds)
done (took 13.273981918 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090009091 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220119508 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.606320041 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110927382 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087068844 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161799152 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290038933 seconds)
done (took 2.39351594 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343705826 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143852693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084301568 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092297153 seconds)
  done (took 1.489259808 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080612932 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097627496 seconds)
  done (took 1.013572621 seconds)
done (took 3.336669955 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087451341 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.117400784 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10760812 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087819693 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087909212 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087330982 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109668925 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087376362 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088796807 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087921932 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108973745 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08766544 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087152969 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107236129 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088102065 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08741297 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087877049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10858184 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08929724 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088260252 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107222113 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087834574 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086888651 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087145792 seconds)
  done (took 3.126411927 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104391853 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089815344 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111803462 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097531286 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094295942 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113493218 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097985642 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091907504 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113795627 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092931009 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094468693 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11247337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093092693 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095676333 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091192851 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115013986 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094197389 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090978364 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111951056 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095298762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09379175 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112674193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095239158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09288761 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114499584 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095822917 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092200159 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111184823 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095320607 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094673162 seconds)
  done (took 3.837385051 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096758054 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084557647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087992274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117344923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084793146 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089000475 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106530805 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089402553 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09236004 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090036648 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112090332 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091529498 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087609936 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111715674 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092931814 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094745137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118323288 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090788697 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088273019 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090629092 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.114671906 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088760483 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090610813 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10893728 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092360604 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087393852 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091098789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.111057052 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092812708 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09058207 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110470361 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096244836 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091500714 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10034698 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113293134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091539912 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096544122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107393272 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09216084 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087318877 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087514839 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.111668187 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089906659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098029179 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.111444486 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092675879 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085847125 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09003257 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110529938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094396929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087368393 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107553814 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094556532 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092841492 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.11324686 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089936072 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093254028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08693914 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.113329977 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091394146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088485308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.106326115 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098413695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093098989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125825083 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099715513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088635125 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092558454 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112240581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097607238 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091465172 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121370645 seconds)
  done (took 7.871669528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100680001 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096624792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091341112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113190215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092783868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091535952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117990001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092541419 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093052174 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118214566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093163184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092239101 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112442108 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095342188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093046389 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092960652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118831216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092946801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090570093 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114511833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0933417 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096326336 seconds)
  done (took 3.033435152 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234386691 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094658856 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138354111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123793618 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1061141 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118722045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092179135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093838241 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112472403 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098122313 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096805982 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114374993 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108447302 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11741716 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100149894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100508637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115597988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09973098 seconds)
  done (took 2.910345203 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103002266 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091517663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132105774 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091968546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091998209 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096625759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120537868 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114281926 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113070863 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095827167 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10079525 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094473024 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.115258664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0948787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094461901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114300029 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095323296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093362161 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121010726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100950062 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099203439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121330102 seconds)
  done (took 3.140205242 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105150074 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090213234 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126110357 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095839598 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089207609 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090691936 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114695072 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090589705 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099824149 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111614527 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092779739 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091420787 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127229419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094166735 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099346397 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113802228 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091690382 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091282874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109333923 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090917969 seconds)
  done (took 2.860325042 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17033567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124320337 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109489863 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116101785 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124719925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107617904 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134118366 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108400874 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107116464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136068868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108430511 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107405279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134834674 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112770162 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125402007 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117169867 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114295868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134774625 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107343715 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124630167 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119596167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107485969 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13512901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108646407 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124441953 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108685069 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107467712 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13267326 seconds)
  done (took 4.215741801 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090903332 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089327537 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088101805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107859869 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089736309 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088815669 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090296627 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114000929 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092180851 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090333849 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112232592 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094469534 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093758893 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092978552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11356041 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094325485 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093371338 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.113250178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095428655 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093278739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095000768 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114622533 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095308325 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093611581 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112575081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096005726 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094339534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093825637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113549786 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095626659 seconds)
  done (took 3.789130209 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103737394 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101212926 seconds)
  done (took 1.057563223 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099112519 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104370731 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091146815 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115386611 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099990761 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093991248 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123730447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10394703 seconds)
  done (took 1.682905172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141149679 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161277342 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094650264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102057914 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160663818 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.152182279 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132002044 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095310682 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107983617 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083663217 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154988928 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084515566 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094511858 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090132643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.116956884 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101193396 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095716036 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.126078184 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101854182 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096704856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119775969 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101277675 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097873286 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.12716927 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090838739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097412644 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.120384825 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107913904 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091538852 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11741614 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093880542 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095313592 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11944837 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101961083 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096493642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.17072473 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103248111 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112064296 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096387213 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098853713 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148322143 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096778185 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09727971 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113120455 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100297223 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09870828 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119553099 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097533623 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088570704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091130466 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.117047265 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092756519 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095459963 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116028439 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098484588 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102372527 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117716952 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093461381 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092157281 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.111579882 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09626818 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092249891 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118160058 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099465552 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097930711 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116226793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096707083 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097420878 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097534409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.116871516 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0959362 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11186351 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117850796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101171765 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100773087 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.117602213 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094108782 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101158366 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116023521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097184886 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100559705 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146729501 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099560799 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091881713 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.112967049 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105602203 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098690606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.120053114 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089877294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106184205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.119248695 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0976671 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089659815 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113651519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09343149 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100710729 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088808233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118192993 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096149249 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101469069 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122540912 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095377438 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097780587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12244927 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104186971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096133444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160950859 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088129511 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104968876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095015711 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098957796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08731962 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11406249 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090880447 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09264913 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11162627 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101343495 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097222842 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118064158 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102390565 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099294958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118475566 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099249678 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096584402 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092793987 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.121724797 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104350259 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098350379 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.119452487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096153735 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096994349 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118669694 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102107421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093158883 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124284252 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095130382 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096109014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.117315584 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103187725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094404474 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088890653 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112591257 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092297063 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10882094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096110355 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092270841 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087528884 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10345372 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092726281 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087691925 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112909315 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104535506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091268582 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.119778043 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090490564 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10223582 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113165011 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099269862 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096304925 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117120546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098348833 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085381907 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08916407 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114771949 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092972212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087863214 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112946365 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092945606 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096830918 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10377839 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095479566 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084041451 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106645527 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097518922 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10266662 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092804044 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106361724 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135021966 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102112097 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116124227 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090971206 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090506118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114335428 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091952582 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094968986 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115960091 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097933046 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089369119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109299105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097783845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087775182 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.114119123 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091982111 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093204527 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10254636 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0955835 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085052796 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094744123 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114250732 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097281263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095530943 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112489844 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093098174 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100183852 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107581703 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096359805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08476873 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.115478315 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112600037 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096944828 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116015767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095535015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089911592 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092286911 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119745128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094889786 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091430761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113947649 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087965188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085222627 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117377338 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09618077 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088207247 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.109697405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095735295 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093835753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109460052 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086796218 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096233413 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095265838 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108647712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093337107 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08753748 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110452551 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099378397 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085149399 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10952822 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094792398 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096991009 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112267146 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093240306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093696757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117560796 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095598661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094181741 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108234051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103218825 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089715791 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090711083 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108655203 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095616529 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085539297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11309882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093423671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091578961 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108251536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097879252 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097420329 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115794972 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092464438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095684047 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115978379 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099632253 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090778557 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096856376 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109419545 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085681416 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088853692 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106135519 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094243251 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0887023 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116598201 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091281086 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091364871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116219108 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09623163 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09009569 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116832121 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105670205 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085605704 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104884342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09197076 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092163149 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10840773 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090405244 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093937326 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112768163 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098399829 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095268556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088773579 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112317667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098514252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089872652 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118741137 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.097879426 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098198101 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110400228 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098532382 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088981005 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115820368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087401166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091538795 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110350307 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093524852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08940744 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113016326 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091800437 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0866011 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090138107 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.124788721 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097927167 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101919324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.120297798 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09794623 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095135087 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11672583 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106217142 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096153365 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.126174935 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096727029 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085958788 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086196107 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117518584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093073419 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098858276 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110970317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09833463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099616283 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117401436 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093778171 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10124795 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12050708 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099320142 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097942719 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105553174 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092232531 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097212163 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114704232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097846227 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09522442 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087585333 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121504116 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103586573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096148649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113429461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087247862 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093653628 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123651205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101358581 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098349403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097185785 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122543044 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.094625063 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101695925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.125921005 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096836327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102124453 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118753791 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102975956 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094806994 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.125019738 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09878066 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091080272 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110434512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098333403 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103774549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091663344 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.124608752 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1055031 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.096410137 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.119803313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095181881 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121701285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10090127 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093340235 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126696075 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102069954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098443722 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102755209 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.126221395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.093842879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097913028 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121158049 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106649704 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096957829 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.125478532 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098462207 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100232956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116969294 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098961611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097657611 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09743309 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107565353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100530588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095951174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116412766 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091669065 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094003583 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.114741348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097214171 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10358658 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114996189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107978434 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106177994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.118788654 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099446961 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104203839 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11824979 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102986218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090140153 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094564897 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108967754 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096138985 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092403286 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121782373 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090993331 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087450507 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118702909 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09925624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09706204 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117689989 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10226797 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0868018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107145828 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096973981 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090942985 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102272841 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122685235 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09493064 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095277493 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.123176798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102055921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106102699 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.116248172 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095702699 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094239344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115530938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093301863 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089099348 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11778329 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093671187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094422557 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116183404 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095390632 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096083199 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102075285 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114284002 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088848245 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089934446 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120684188 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093156551 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090247302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108641942 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100101868 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095450225 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121221265 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091699376 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093415699 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111079466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097274393 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10255652 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113511345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094608223 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091474692 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116517751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100743244 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086707784 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090057631 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123723484 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098299888 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095116622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.11662618 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092986616 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100692039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124793071 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097720852 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087452107 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109394504 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093862118 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0877017 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096387641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123486285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092391425 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091027554 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119618118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097823528 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095648271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.116116545 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089548144 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100211243 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110943748 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098455103 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088088572 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109259624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100212522 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099412967 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093580819 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116965309 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096425815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096673105 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110390604 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09214845 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097124053 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118332375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101470219 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09455588 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114576184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099582967 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10545569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09618998 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114146905 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103236975 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100651285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116095172 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095414812 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098202038 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120434269 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096124615 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100586491 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111989045 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095196779 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099875905 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120445406 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103537922 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09265907 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10912416 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099835757 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092299136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107794868 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099187703 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10007448 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120290873 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096350768 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091194933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101645922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121237385 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094847228 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090748692 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114019557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098688861 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091289739 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118814339 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091363554 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100961397 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120897224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099808228 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102585151 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107128988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101445362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096588122 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121469519 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096853656 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088578458 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089337866 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.123890959 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104503102 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101135113 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.124698651 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10438771 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102443068 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120898051 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103582311 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098233476 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106523517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.125778022 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099819715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098863016 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.120225699 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098461427 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095981926 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120931157 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102663524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095072586 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123479303 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104207882 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098424685 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115699725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099088759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097355989 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094406651 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120910769 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092869312 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089458689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120495083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103321808 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093572196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122560014 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103033476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094020541 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118515523 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102646753 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098981959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095964644 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116506285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098689378 seconds)
  done (took 62.317708921 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151324495 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103698407 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119178123 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097346023 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114386679 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119659549 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097593315 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096766248 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118676581 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106963063 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096889586 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11687343 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113730586 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117624422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136800198 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106489401 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117490131 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099328975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096386128 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097231307 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13473135 seconds)
  done (took 3.2682746 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117072871 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108994547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130826281 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112610576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102701927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129279408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107897174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127592415 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111664901 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104596621 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134053484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108852431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125352865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105925606 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104505256 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126089983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111984169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104687268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131461041 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10909894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126112071 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110000899 seconds)
  done (took 3.459180146 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.134219253 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100314004 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096602719 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120030401 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100112612 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096871975 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120115263 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098801947 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104197478 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093851894 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111395079 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095332752 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098865342 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121394834 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091506244 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097334471 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126920161 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102560376 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101986091 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098082147 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111715232 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09801919 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096583547 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10884061 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104771314 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10317477 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096818438 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120326457 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088598267 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099794072 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118035108 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09238802 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088547852 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088136306 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109308925 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100822672 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099930384 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118297408 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098305414 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089174812 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099228592 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124025423 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088357789 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097769906 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118428927 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092489929 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099686332 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116090957 seconds)
  done (took 5.890825112 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.367118735 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161536262 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101382206 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134388014 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13255074 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105860365 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098660462 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135212335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098225778 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122989339 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112174875 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110659006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125177887 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104172953 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098934942 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123418961 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1024017 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099396729 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126232685 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099964188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104601965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123023541 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110471993 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130084535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103662104 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099669779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121732027 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104133035 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109576092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126386194 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104879564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104130568 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133531483 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101352933 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101230712 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125585748 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112184427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121586775 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103437096 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097847837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099653104 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125125561 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102282796 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131682799 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10228146 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102432968 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121825719 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09905653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109752992 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121439307 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107057688 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110801495 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125307137 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10288021 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103639974 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134178492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101425659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099372201 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124670925 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110704126 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118513478 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104964598 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111264955 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122022621 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106980952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111628344 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123908099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103206326 seconds)
  done (took 8.984028934 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13393329 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104816249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135379069 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11358309 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104565115 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126590915 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104603714 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104998295 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126355302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109609158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124295061 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199949181 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122739671 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109558136 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104644857 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127865173 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105755138 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104179341 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127359624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105584485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104232558 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134051633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104561273 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133935498 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116333604 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101543005 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127322784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106210884 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133391686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107262297 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115748509 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126777912 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105299725 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112381873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138425722 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104994661 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09954412 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127898965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104667851 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125063556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104732836 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112991061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125497455 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102849595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105083153 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126191585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11630519 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114912014 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1313393 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110905048 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12480464 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112894302 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104855714 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127552779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113012131 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139856339 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114455741 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11255479 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126493232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113196499 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134623177 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120865571 seconds)
  done (took 8.244924859 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100194886 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099140827 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096996852 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120992674 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098792976 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097785556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096920075 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119857519 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097959831 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096746041 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119337086 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099591248 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097951452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097259613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119224675 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0991218 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097724924 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1180859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099880848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098902058 seconds)
  done (took 2.997302583 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110316247 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115350339 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119867247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106995335 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101599224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125183313 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10116996 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101032151 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099934157 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122463697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109836793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127362124 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102942294 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106638775 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128478454 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108354862 seconds)
  done (took 2.717098578 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123234437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117162998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187831548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103134378 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122652642 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108423897 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10025822 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126305443 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103886175 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10655756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105166042 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126369949 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101638818 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10278094 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12558318 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105311975 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100280726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12783131 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102150089 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185104201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105390915 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102288215 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122208377 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105025582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101798456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126345373 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107918862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099958035 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101319982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122363644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10402404 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.10668749 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121557288 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105596041 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101301064 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122910839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103073468 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10068246 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125632722 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101510846 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102361005 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123344192 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104696626 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104332947 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097933919 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125901651 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098994898 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105197427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12295308 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105386822 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099503411 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129508937 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10613066 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108627904 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128774842 seconds)
  done (took 7.164432028 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113745295 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101830185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13242064 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101264463 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101856589 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100529854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124246032 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105162728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100820913 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120726773 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102963277 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102684785 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123618365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103644607 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102504392 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121587234 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099876924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102525802 seconds)
  done (took 2.891097283 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108023937 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099755252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103465517 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12288018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.1008768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09970024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121081039 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100250735 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099906255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121008421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10297955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101883087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099333273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122682778 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101801181 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10097595 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120926493 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100141807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101150104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09844577 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122940121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100829822 seconds)
  done (took 3.286972067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113396747 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182076274 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107073412 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192258416 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097047326 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09561433 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127706108 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098158378 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112341953 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121325131 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096959785 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096409247 seconds)
  done (took 2.375670949 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131371835 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136835282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12216056 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10300028 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108923867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127268477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105780557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106098483 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135606789 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116186513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125859147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114678502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113160658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13471464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108836791 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130184349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107771706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104144933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124047186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121549876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105236014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134044432 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105959902 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105201269 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129988363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113019387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134450334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117140015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106135175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13451562 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108819074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126875822 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115405345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115736932 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124950851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112954576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10478836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144234166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10876118 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13456094 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102564254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107821261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135559247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11170984 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134444792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106510989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110966518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128003612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106041168 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148201827 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112131916 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11349026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131012028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113636141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134355503 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128888158 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137968582 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11522955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108995428 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139223776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113887569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131011391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115159445 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116294819 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131613117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114312969 seconds)
  done (took 8.851016433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147541558 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101999845 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128556619 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118982805 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135468489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107409481 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106986025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128288036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108050997 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103298586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172136316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107650459 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134437834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115917678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105869504 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127294816 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106655798 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113674828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125046432 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128318126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128104321 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116311942 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114243498 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137256986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119570426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131728611 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108840103 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106605165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128358731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107754574 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111161735 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128596438 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1146953 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1019474 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138115174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106289778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127579119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113367631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106560564 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133346374 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115327113 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141961895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107473678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106567612 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140501291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107344776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106353148 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125221128 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107039967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102916967 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140969458 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116683431 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140652584 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114739099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105756393 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128749689 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10610183 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127399416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108947372 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111320713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135627127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107907468 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148933861 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108959773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106093674 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136887082 seconds)
  done (took 8.854389818 seconds)
done (took 169.662600286 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147953501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184474493 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144172817 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176671114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093329934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127370933 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146520627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14641778 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091126936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115160074 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093312852 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094203824 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182603058 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09358209 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09288185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115800766 seconds)
  done (took 2.981650549 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190054993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304752222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109158553 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118952827 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099599871 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096968208 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117946438 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099581928 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097694391 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126292294 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09955277 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093459844 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127423657 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096013064 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09684933 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118428635 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105656592 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097427118 seconds)
  done (took 3.14035544 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118126751 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141877893 seconds)
  done (took 1.209576966 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128860818 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211680358 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277508627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16832426 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117834196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138732459 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148356321 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132739962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185967778 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133312178 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109376328 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094208636 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146117386 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103232936 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135316273 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097452359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124586355 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13420367 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112018145 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098990005 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144041216 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101796809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102980452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135025525 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176366583 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132912568 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101167401 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100596276 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123159568 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111167732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126220508 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116156697 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109862878 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178891758 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100724648 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174278622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126987331 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099225973 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111239784 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121083998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101732957 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100694879 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1353826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096518246 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101768175 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126847863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102243014 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099930452 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129053101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106384947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127882553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105191145 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173615535 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107107839 seconds)
  done (took 7.854881719 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862156542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140810282 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09734964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.008597709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149552258 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112084007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.855598427 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12249978 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254705578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.858867753 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113710139 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135608372 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238283105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279009955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263186537 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357608239 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.721986365 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110458348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15215171 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139988331 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131052695 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124885793 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14274485 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.499078443 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122595791 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09970356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107190068 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134316595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174540806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100424354 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10227168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196564669 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290594408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208081638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098688239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119779983 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099181526 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183833257 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271883652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219710251 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170356269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118379613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098900423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106960833 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142398272 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095501964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181769003 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192002049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189622686 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103792267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11151306 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133921168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106872857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176883476 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097004079 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357375069 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384295933 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099000619 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10703397 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136870641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267289188 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099353463 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235018232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149497711 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216033248 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097921282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841084653 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183757328 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097446468 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129372789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10491046 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127294314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108255298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189141344 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479647524 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134441294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105483338 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097925088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235261498 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120739737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100448851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179974219 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101427845 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107487825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136158303 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110335297 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190310689 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27133446 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112001501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131926601 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105379354 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111556743 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122636908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208750271 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250704418 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151994406 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230813596 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131476914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158944374 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183198705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128729698 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165673473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129159784 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115294465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129441471 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224781956 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133263041 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12626123 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104561533 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108993951 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15853309 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10236749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131241503 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163350645 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559696066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184114917 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096037925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126228243 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110284394 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180736568 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106639658 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262913446 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131915929 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161754282 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130112333 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096193435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10752199 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181608534 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132938746 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109925771 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107616172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13335586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277855057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223380376 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11309125 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251320369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198449711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107017619 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193538254 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107431264 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186500806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13190042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109061503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100820121 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829649284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138057996 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107442745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126799946 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186784732 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099383131 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124834635 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100537105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096387673 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8169883 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127592993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098921883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101770348 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130865095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112794148 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108311162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129075989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178322185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245968214 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11307899 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130067792 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099279133 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17811121 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101046857 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099530253 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123099898 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101806657 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10919175 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128091365 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102553885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191103796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174861898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231536464 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638380288 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099867226 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098980019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26426872 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100329676 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325081003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130300669 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237237243 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182012104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099399111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361828123 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185884352 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184993426 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126687737 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166279579 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120740166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109802517 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177613937 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099473345 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130612627 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152300436 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138379833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112870468 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277763731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123375123 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250134474 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098540231 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18831314 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102384631 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107479724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346725015 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101950849 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116662012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179649971 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103796528 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125181038 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.675277099 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102010889 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112004137 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131630161 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233754737 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18306512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110356587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130124273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114977066 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180603363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228015207 seconds)
  done (took 47.74557699 seconds)
done (took 63.873672547 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263772933 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174609097 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.278508288 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17523491 seconds)
  done (took 1.935421804 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.240901086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155980599 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.197773972 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.12059898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.20239085 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119637358 seconds)
  done (took 2.014969483 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175639324 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166747636 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144060839 seconds)
  done (took 1.462639308 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195921548 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212100927 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321030136 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253691398 seconds)
  done (took 2.044676409 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261473952 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115045627 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122275861 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206676078 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219562338 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201479502 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120591045 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172716551 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127086146 seconds)
  done (took 2.560640717 seconds)
done (took 10.989883456 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.304697745 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.143070863 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.307348999 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.187983433 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.271279702 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.374412557 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136045358 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.264748804 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.26419137 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112407109 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13308797 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.279030396 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.278567052 seconds)
    (14/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.149447269 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.172813032 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.264118815 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.185727705 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140104897 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12659654 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.187904513 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.135093484 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.295078261 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.282193119 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.187734037 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114285012 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.142694064 seconds)
    (27/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.3144204 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.199950429 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080951976 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.359255772 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.196080629 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128656754 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.141501278 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208186101 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.205029614 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136010242 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112876488 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136216916 seconds)
    (39/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225453736 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156714371 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134611879 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12086151 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083089447 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076105385 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.326277572 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212973855 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165281857 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.24768715 seconds)
    (49/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107260829 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128416794 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177004451 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113438 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107596697 seconds)
    (54/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083165079 seconds)
    (55/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109532969 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076974118 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07622597 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.101572834 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103384802 seconds)
    (60/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.16863804 seconds)
    (61/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.156710326 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105099447 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.141087352 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148177311 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102590113 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108060997 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10353154 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111024082 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128351527 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104873968 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124801225 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107872664 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171173108 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145448629 seconds)
    (75/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100603748 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118887774 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15511927 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131658194 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104242684 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123851813 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.130506722 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119632511 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.100287768 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078182688 seconds)
    (85/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142570825 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083586349 seconds)
    (87/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.165368515 seconds)
    (88/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080746994 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080489051 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099754467 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076223888 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109784713 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098717689 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100218982 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132017544 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111427563 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100347258 seconds)
    (98/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080252275 seconds)
    (99/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107354392 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.129830228 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12390604 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132962073 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083205614 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158700497 seconds)
    (105/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082073767 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125822949 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101854748 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118162106 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12762481 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084460804 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111492885 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125611906 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.125968348 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10150012 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131675874 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077737175 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107590253 seconds)
    (118/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224830659 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089633281 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078262954 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084300181 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079973174 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100707471 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128741483 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080429989 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.123359744 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108904293 seconds)
    (128/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077641125 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12183805 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119975278 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.164231727 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101449805 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100055759 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.135409373 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162040748 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131557899 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079181688 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102667567 seconds)
    (139/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10769103 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.104256132 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082198326 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085141783 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077999342 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107043996 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101600368 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100565793 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084863369 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100112758 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10831653 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079072882 seconds)
    (151/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079733076 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.12350912 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.158944101 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085254988 seconds)
    (155/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077030997 seconds)
    (156/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106496926 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104217313 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099532274 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.145803397 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097683386 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135351203 seconds)
    (162/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085085034 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080703791 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084446817 seconds)
    (165/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10154974 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107609896 seconds)
    (167/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.08061045 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100319586 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.145358723 seconds)
    (170/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07826376 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084401844 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101045052 seconds)
    (173/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.164001659 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107182952 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076620737 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.076997868 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108603139 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081556294 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098531371 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103408138 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125985761 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118996247 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181022209 seconds)
    (184/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081085976 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084050358 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097813038 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108116287 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081462463 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083542309 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077793461 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077674163 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123647528 seconds)
  done (took 26.368412542 seconds)
done (took 27.347745467 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203602943 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126711726 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10916164 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107394883 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20161911 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11502402 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123291066 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135478204 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118879846 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107998687 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124923736 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121326266 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107131461 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203557539 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111406602 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126691966 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100917315 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118468443 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149663993 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125964215 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201410638 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102812404 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118176926 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125536416 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177468752 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125965076 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110357742 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109720537 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145517341 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110838671 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109154271 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125708036 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126264334 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124608358 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100533613 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135505086 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101096081 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084621122 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133759339 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112677031 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120519182 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133597348 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110582516 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101532555 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134209909 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110246978 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100931298 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112184311 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125165981 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11126142 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102327603 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150055081 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108217517 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099261705 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124364516 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103101811 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120176011 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124739637 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124401846 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099892498 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124960553 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10301453 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111448835 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099389472 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133494512 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102418581 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111475881 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136744323 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109842584 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103115091 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124830945 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11047821 seconds)
done (took 9.822636352 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106877821 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146274915 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198690655 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210084676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129115208 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13948068 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115748309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124433257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137212571 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121723454 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136783524 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157337104 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181056977 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142217835 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116659537 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113047004 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137205439 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110705004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208362349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126894349 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150300842 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117984336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126700876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142655929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105032172 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135912468 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132932804 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113433437 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103885072 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138491642 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126286133 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103653761 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134126214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123632789 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.144845933 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116311322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11611135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137293361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107212357 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105279956 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137390166 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122289724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105307966 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142000689 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113424896 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11926121 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137215848 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119201336 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106057598 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136840561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106839468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130863763 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142343621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122731934 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117954913 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142374112 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118645658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116489283 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133680142 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11830378 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104554658 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130179033 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107126481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126503988 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133758972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120289933 seconds)
  done (took 9.565989445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124816091 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133944429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140255715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116031437 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110159386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123814879 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098746837 seconds)
  done (took 1.874061031 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102176117 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184530449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209032086 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210097903 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178820741 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.220350161 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149887627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10150228 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133711322 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136807277 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184666596 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238786518 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109990384 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142154537 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185324097 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127843285 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21284013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102792437 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114913799 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211055209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116894268 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155579703 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115719789 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100632336 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205930299 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101578042 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.254408987 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11757288 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136334784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114894084 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114047968 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207683581 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207408322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116314418 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108545414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209238561 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205250952 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116743722 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.221914662 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105761427 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206244549 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114910733 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11554323 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14084365 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116265597 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194721325 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121081544 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115150284 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141917503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187941279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137976153 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183192359 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138829885 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116701023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111454461 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142643641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123446125 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11543543 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215648858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116617517 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210039429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211048419 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180605127 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21115028 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124632456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210699481 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203907427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113953392 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108736991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143347 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184060341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142263015 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113738617 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198887621 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119540272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.2115897 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210522719 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113442726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114092162 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.128669095 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.134898064 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101589909 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201400424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115104479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113766924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146412147 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116607724 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114865051 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132269542 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125666861 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139325759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114927863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120723161 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140742288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119495507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215258066 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113176021 seconds)
  done (took 15.697869838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105002397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103595715 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106641395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129754175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103741793 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102844777 seconds)
  done (took 1.69936219 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140752876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115535072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149424162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117771408 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158753244 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21631029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220135502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110447935 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158049818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126539465 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214679932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190775049 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21675296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119192105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219874072 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116786191 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219957152 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11275508 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15037823 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113603509 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114968939 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146754402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113803301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208366563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116188938 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117287018 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137420569 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124468628 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148017004 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112157323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119081501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.161819827 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111213592 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109791977 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220960631 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108417154 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138608278 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118499559 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117584504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143515646 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19204143 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139818045 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122523362 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143740462 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113606693 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109477954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144520573 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111295329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220848785 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119735292 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11880009 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143986813 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118193592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118271648 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135819342 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110881623 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.11782778 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221356468 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118301492 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136410704 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115991213 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.141623694 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113208735 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119587582 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142404233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120401207 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108786044 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142379119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115244258 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11728512 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145088266 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118705877 seconds)
  done (took 11.183625959 seconds)
done (took 41.042215997 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.657418299 seconds)
  done (took 2.698828715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.888240965 seconds)
  done (took 1.929851576 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.206157027 seconds)
  done (took 19.280344904 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.424770719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469015969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.158380919 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147734547 seconds)
  done (took 3.243512961 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.82017739 seconds)
  done (took 1.883895227 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321389102 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233887799 seconds)
  done (took 1.605311471 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730469976 seconds)
  done (took 1.78975809 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497773291 seconds)
  done (took 2.543052966 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283309494 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241168141 seconds)
  done (took 1.585320858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.610039754 seconds)
  done (took 1.671775026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.818908223 seconds)
  done (took 20.882187051 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25187539 seconds)
  done (took 1.317561753 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28594067 seconds)
  done (took 1.354020081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.645146143 seconds)
  done (took 4.711528765 seconds)
done (took 67.548668394 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11499526 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115794606 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114421468 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140845562 seconds)
  done (took 1.539614072 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12225851 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116387506 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144392933 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117111398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121910498 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116391414 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141988447 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118897602 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115662059 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144084434 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116845129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114690997 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143492928 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115769089 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112966909 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145157691 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119498436 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116276921 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141621459 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120055571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11607899 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143567997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12080787 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118684793 seconds)
  done (took 4.070411809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112497713 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107209694 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108054776 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13106173 seconds)
  done (took 1.527927691 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125141239 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12930766 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150697948 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122513738 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127393099 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152199333 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114928735 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111894657 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141611007 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124868997 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131524527 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155086837 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127098491 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116462998 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152103602 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109661208 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115704496 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153129884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121773515 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12232586 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14432139 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122382221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119167416 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150036118 seconds)
  done (took 4.207522799 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190848788 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127156444 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172552986 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160480422 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174792877 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114253372 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14149137 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150085011 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122954467 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.142971134 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120850516 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159986123 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147117996 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118618513 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116152504 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148027723 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128742958 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120605326 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190370212 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120154154 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147867457 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127586391 seconds)
  done (took 4.216487756 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120282972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107727475 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127840819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108960217 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119476975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134601924 seconds)
  done (took 1.794564773 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107152756 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101569599 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101621204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126923583 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105726004 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101122773 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10002194 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128838312 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102569734 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100528901 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128867141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103179056 seconds)
  done (took 2.377038211 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330631205 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107810861 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133003648 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109511172 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11204981 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10532333 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145914802 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106416046 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265551853 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102557427 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129857031 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194221402 seconds)
  done (took 2.918173051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198177105 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146640308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247410743 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37619105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185927444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158263809 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.301582131 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188762128 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199467313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137011466 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206815237 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15760184 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175425502 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182156055 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163455744 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156797542 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185258756 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20302629 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166040146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232570573 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155160705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196939177 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185365924 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172951896 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137811442 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186112764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116634143 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123528076 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189717406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186382283 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171427463 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174219839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139269779 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213654749 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253866665 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168727323 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294793238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130464062 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190471782 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188526458 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253915998 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162880667 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186681253 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175206366 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127001795 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206845938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14988287 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208000423 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131102653 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169338255 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177371355 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202243913 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198436842 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134221916 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318709487 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13304742 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168112472 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176195779 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21104741 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223953676 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17431329 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.14860114 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199581638 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186396291 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235730324 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137456384 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188231053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121345984 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189553054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228860289 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175305169 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184500995 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231464727 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127317965 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196057207 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193895171 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152252935 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227637051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165748242 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146816831 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146293892 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15672137 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124740786 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185296169 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145348868 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211218311 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157254556 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342613396 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178323966 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181493404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182485421 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158020654 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185541801 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146435921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100023413 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167447144 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15802574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179871827 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126049226 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178909209 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137760253 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122236166 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175023316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119370552 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192098855 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131725961 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18606271 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166125126 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.157572735 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174760476 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173156872 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158141513 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19192483 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2127893 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128269285 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128018053 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242955316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191235433 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135199976 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199491655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191941219 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175776704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131581191 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188352823 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216543135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142075311 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22353091 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136234771 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158862594 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139948018 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194410496 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157759531 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178652576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124695206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186400796 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189560135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151466216 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136074408 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206036876 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132440792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120312427 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161451974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133007678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166073143 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146859051 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13441915 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178567228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161525295 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190625538 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179035616 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132166045 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195975336 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128575946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.190496321 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147430926 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115558502 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197939859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221140257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127297003 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203688688 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158938368 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210880891 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196802411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127400784 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206812964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125479933 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118092604 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186039813 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169336687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187564575 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209269748 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180222857 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188827821 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186917534 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14648557 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191798338 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181938144 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182250777 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140035602 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196757815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1912143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120450042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1217649 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124149304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163125713 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127198366 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161996322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174600733 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188535744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203679729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164643163 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164792105 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187967379 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150731654 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157288076 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200507521 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135628316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214514361 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212681438 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175912492 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166086424 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159516103 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143826055 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125862898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130761279 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186276793 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134310646 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159052808 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140217767 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21566407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167576393 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173155453 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215976873 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161920079 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226982559 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117225392 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186274242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166143569 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191989697 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181148855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1592515 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160020793 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218041761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138345083 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217814924 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163361439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203709528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218244297 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16232347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155964472 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145819688 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185438603 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135907434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186436412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145534475 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126747307 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176703551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134529979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164834016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179373826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169324085 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200523134 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155611976 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196214321 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123274794 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165342662 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174612138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167782779 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105791064 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164520858 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219022994 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173927287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154354626 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197585172 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129065815 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.335983254 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18276417 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201177341 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133053036 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16336944 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167838023 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187287681 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159563799 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210071333 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137852938 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232144956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193776695 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140024191 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154930914 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146765485 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147942335 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166651265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147359293 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187726605 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139980148 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209023918 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161693369 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168002337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201769424 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144052676 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146436879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137813366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249259985 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164028464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197605513 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160436996 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19202268 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207273045 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121403254 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122930599 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.156141235 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182714766 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151883904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174897614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202472745 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211916074 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172067023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188367403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136715939 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.153472349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164039142 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172950442 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212589118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133614666 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134116583 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214065891 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125879754 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157244389 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158087693 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31226016 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145768523 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197644902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104336786 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304285853 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128511773 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158765693 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160898121 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193652646 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130590811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.208526679 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171336119 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165123936 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162218138 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131186211 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207761628 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213926861 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188823907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170787281 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170706426 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159294341 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186166811 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169725425 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171691401 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144093797 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183516295 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191192982 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204860546 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128207314 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194537251 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164332605 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197223708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196917812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138775053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205573371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127525086 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16013633 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163961229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124967557 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183923818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202028314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128999934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20002283 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168244511 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127759065 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153830437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144210263 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190859486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137820277 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153933531 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181179936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155797978 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178061071 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232911609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127512278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191871168 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144470757 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155634792 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136617573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140507072 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158404757 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173686215 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209722658 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129861076 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203008103 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1632818 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189335677 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153509249 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170316659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.326624278 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154746536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188305523 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175500097 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193740698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176153341 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17103037 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196212387 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144708674 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18915615 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170701741 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219030717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187997719 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16440418 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154494213 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141918163 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135546139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160465798 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15013846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194212806 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139015083 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160292699 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16547707 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141182365 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174852876 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138779795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225414482 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147410918 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211004652 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212846567 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134600926 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201764545 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169674391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156512617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161330217 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197124981 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140800673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178576402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131762707 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163849105 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210290504 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152914362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159604382 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198499936 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166907889 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196617443 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132663572 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205251052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138727502 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200605068 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125203288 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179269288 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169635204 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159345563 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126383439 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167852587 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185049536 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161254858 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171017428 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17291249 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222296794 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121735494 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157466727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281388057 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186988133 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190077072 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.164295945 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135245978 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171387195 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155533451 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18987853 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168121989 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.156545528 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128396354 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141337986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184928542 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14264612 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1967238 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181434 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185610366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209922097 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134134537 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278550012 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143297732 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166828572 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145208306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126740901 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137705229 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162708391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138266877 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210875728 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240136948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159557755 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174449979 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133826045 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151802443 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129492369 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161374288 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17714631 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16477731 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1735462 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102442936 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165415013 seconds)
  done (took 85.113312546 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160473402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15184848 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167076619 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222184811 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192916182 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287738871 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227679095 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24434994 seconds)
  done (took 2.81163009 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119007363 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158470386 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139904357 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14228929 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108128881 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.442787799 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129986451 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146890648 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158741921 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148280811 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135544626 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.547887122 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113528818 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141632977 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121921059 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133471701 seconds)
  done (took 4.044339223 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.170378835 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552431571 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.032680423 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295556884 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259457524 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199648571 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75768703 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196357229 seconds)
  done (took 12.622596051 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149837838 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14263936 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.370947232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.271771758 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203868678 seconds)
  done (took 2.308178151 seconds)
done (took 130.605853927 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122843517 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121102109 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120413683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151510219 seconds)
  done (took 1.670509201 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175344264 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090147584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091936439 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117216487 seconds)
  done (took 1.639268671 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.507563598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091481725 seconds)
  done (took 1.790692389 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15084626 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134008739 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169143922 seconds)
  done (took 1.631036107 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141515313 seconds)
  done (took 1.310647685 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124175467 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124577024 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.228057713 seconds)
  done (took 1.647967324 seconds)
done (took 10.856573007 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117472974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922877844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430738571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129949945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708103965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425617524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.426779276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174007346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172585261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137095087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130048108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686181889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.438095892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.868367775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.395703461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.902935291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693067589 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108262973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143493974 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110480657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404284977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136089153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109931782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108878267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716629741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418531974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107282924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.914228984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107752121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110905275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426124646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108986731 seconds)
  done (took 20.952676151 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116113988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165213737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144251798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110170223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11133431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136906667 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121252089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121298694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201580413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107439993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157769691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107792501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113341118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136296358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134127938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106746975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139046896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111189127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11611553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137023683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130465353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107181528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137615812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112390364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107958417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157656746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109543553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119676621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135952475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11365675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113000979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136494871 seconds)
  done (took 5.250480549 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155696747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17320146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147356396 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145800779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185765551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111271823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221262355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146950081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204276576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109450968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129110946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136289654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149935953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108004284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162858424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108838954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11070433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139523301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116131888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110630997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159799588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107498574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109220435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139651267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109252001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130730364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137097555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120907224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134974362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114583329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1143803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107869377 seconds)
  done (took 5.534582455 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12360131 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123470742 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130340268 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160941108 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119725001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122450926 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15169853 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118238817 seconds)
  done (took 2.23185545 seconds)
done (took 35.139428169 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134522505 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126870562 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127789035 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154023974 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.186246778 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145297303 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126093259 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116448912 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150636616 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129835581 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107463992 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115258735 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159337037 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119155155 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217548662 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123906835 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223640043 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18938092 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146233445 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123323892 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116539213 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223486241 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119742227 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116163415 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.220668432 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110109103 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210992454 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118135869 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149112886 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111415458 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.217635482 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122280171 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116252273 seconds)
  done (took 6.041280309 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206367293 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118130727 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148731511 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116903364 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118069467 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146341202 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209109586 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14718445 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118533043 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116502328 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115525942 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220930322 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12274492 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142342368 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122417327 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108948679 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238393358 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119852514 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10922676 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122284606 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113949574 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116588161 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251790753 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113917396 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116335076 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146694333 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120647773 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12234625 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147292439 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121044977 seconds)
  done (took 5.427809893 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123843391 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130558853 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134530644 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215406795 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146328377 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157939919 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13754922 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131352939 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168998788 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112410387 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126026051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176248431 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126809184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120623944 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145317827 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129224759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133889255 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14206353 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119153713 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127740503 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162307359 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129983268 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13397491 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149625764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110548611 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118953676 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151043061 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126250106 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119505277 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154872324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11385404 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114381692 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11290935 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176158326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111952868 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154121782 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138775371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124207229 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153395133 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144147905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114565823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142871023 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138711866 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165527362 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141880192 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126260112 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123631547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1552774 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111516471 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13012237 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182304939 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112761526 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132574576 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.138743016 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111856792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119630912 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111587632 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145658955 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126534271 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113811549 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166283593 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119247909 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121467949 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142824441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124306004 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110965612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.138805237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118218232 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13721905 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146273694 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149538086 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111857162 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122623333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15428634 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122514527 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122728923 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141604277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124317054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121788527 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147158232 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125802826 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113836696 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.144188645 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131102898 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132112344 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.15460824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125703361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124684856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.143737795 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115908976 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128049435 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112809219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149458161 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12458794 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111675408 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145956786 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125584083 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122125471 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140087195 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137552792 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114926282 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141615963 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.1378313 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115167889 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.14612617 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123462335 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155064889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143562175 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125606032 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125861989 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110898361 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151576948 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115931777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110468182 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160546628 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128628183 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118913798 seconds)
  done (took 16.828845708 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31746694 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271903879 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211979525 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.244602342 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124812918 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23788208 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300502014 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305141578 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110967865 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181883139 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164942122 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273518784 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141985784 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142252468 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305472904 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35784494 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171014016 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151161602 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178603849 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127101824 seconds)
  done (took 5.527417539 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132272141 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14626486 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165185745 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140725298 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123345041 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158822236 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11229609 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134759033 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153277653 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123661914 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113420711 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158343021 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125836662 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128752592 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15783127 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145151753 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119611585 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147785006 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135376445 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116576304 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131867363 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138591882 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119950048 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164121832 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132224368 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1225655 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142600768 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119222239 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11945824 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150564416 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118389166 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133059015 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150460023 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105423725 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123908771 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126664293 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149581728 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115044739 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116463649 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145695374 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128042147 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124744936 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149927413 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099099069 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131976649 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108329312 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156039868 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125660247 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1064892 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159754446 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126263868 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127571739 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.11874809 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164216213 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118977923 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128153403 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155069095 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127652239 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116607482 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141939303 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111140539 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11654757 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151368141 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128136427 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123969561 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16318565 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12891551 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111440517 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147207007 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11668084 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116033405 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155713694 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133106728 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121068279 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.147711499 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125979966 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121049161 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093514376 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.152025611 seconds)
  done (took 11.661585534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138528558 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122781842 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130198767 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179943209 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126922772 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118718297 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153375051 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132980657 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127269477 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162568935 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127639824 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124444322 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165130781 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123309133 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121926564 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1592812 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128040346 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.14907793 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160910742 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139449844 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156736417 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119470549 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124485013 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123618364 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173128024 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123678885 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168514353 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129157551 seconds)
  done (took 5.124514032 seconds)
done (took 51.791785545 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.342166617 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539771375 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.310093121 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.309994526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.336391502 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.317590362 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.311312269 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.313734471 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.845089458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.28157868 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.311755004 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.308427744 seconds)
done (took 29.733786947 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.408827684 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852637471 seconds)
    (2/2) benchmarking "String"...
    done (took 1.596367824 seconds)
  done (took 4.649130754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.311594085 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.301232737 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.548382023 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.2999126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.319119291 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.302550822 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.301763614 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.320725449 seconds)
  done (took 16.593676372 seconds)
done (took 27.162350654 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.358058798 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.476826457 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.542276664 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.303101946 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.305213952 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.328825072 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.307616685 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.323106015 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.307856158 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.320708472 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.719684361 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.552753718 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.311765861 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.659717956 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.304545975 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301944132 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.321959512 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.523505988 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.308509568 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.342132869 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.281380255 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.283129217 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333605346 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.310842971 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.310766442 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.304124509 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.338877808 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.30313838 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.473556283 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.33815922 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.341860496 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.30844676 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.348027716 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.308605152 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.303035777 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.311015923 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.489592244 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.310491964 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.290760716 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.32435904 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.482778719 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.307242069 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.304665772 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.305742561 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.304262491 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.366399257 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.300316468 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.419012914 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.3270518 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.307244249 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.306729473 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.662471583 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.308937735 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.315269201 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.318617116 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.515470902 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.319476122 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.361916557 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.34038486 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.314365333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.305574821 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.305809238 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.358306669 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.315266314 seconds)
  done (took 150.21013622 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.304733744 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.308936042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.309343335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.309436359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.30980689 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.31025897 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.305168153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.305364733 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.309979401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.334865544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.31172714 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.30658999 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.310836897 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.256337125 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.31694355 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.321624156 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310939609 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.329465442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316890725 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.308577413 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.307854192 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.312440439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325685668 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.309301758 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.342909565 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.377415791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.341367846 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.316064667 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.321003834 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308758783 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.352751593 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.314685011 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949590683 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.162137213 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.314917448 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.337610513 seconds)
  done (took 84.095916097 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.307840241 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.308045958 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307357463 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.341797756 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.306832877 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893309047 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902282569 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.272714584 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.445054716 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.308797414 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.712018122 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537136362 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.30901571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399409503 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.321056284 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.309056522 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.32444641 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.335616483 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312983758 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309349242 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893208108 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.32121075 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.333879705 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.491566185 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.326543159 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341695048 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.700866808 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.309344485 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343186099 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.645887423 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.360308139 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310067867 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623923757 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.327486142 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.310501498 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42238757 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311246969 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342489556 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.311305548 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.593473299 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.310851096 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.308817796 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.311102971 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.313063345 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929923064 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.311313065 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.896945761 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309392012 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253138038 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.311255581 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.309829434 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.249357764 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.968175051 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.311078902 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.311037238 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.313166409 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.311419489 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310999374 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.346330715 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.235427952 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.409584027 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.313506436 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.31390724 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345129957 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.311247109 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.550498626 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311975285 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.527780032 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370157803 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418825038 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89871045 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311742104 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.408364657 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429341123 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.31222678 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.311482643 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312235466 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.31268805 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.424092013 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.313059675 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.006357285 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.491862803 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.328542808 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.684333806 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.410731453 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.312318024 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677861185 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.316017005 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.312721053 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.312593098 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021870706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409453294 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.31276566 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.31357451 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312804094 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.006920197 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899081773 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.571606002 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.31870145 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.846826756 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.316039081 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.183065491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.892568076 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.98957257 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.31968322 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424779406 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.495632019 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.33128511 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.313876282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.696351884 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.315498733 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.371656087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.315833322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.716474557 seconds)
  done (took 385.473517852 seconds)
done (took 620.978222814 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.159603742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.103060693 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.265237613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.118276932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.100446707 seconds)
  done (took 11.95784802 seconds)
done (took 13.167778976 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510886622 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514632718 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.380256539 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515461584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350696534 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529997366 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493140634 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333653448 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428784322 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.401514193 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43106293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369394261 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.351752065 seconds)
  done (took 19.823279341 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603232898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.325599916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379258436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593169679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.359820807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604290478 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.636236819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.325823278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47493193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360407456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.33652449 seconds)
  done (took 19.213568656 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601253662 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.326833808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384154191 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590747966 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36071242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607962812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.638902089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.326439211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477346499 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340510188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337817258 seconds)
  done (took 19.205748661 seconds)
done (took 59.454225422 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355795198 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41745021 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.3498597 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.335713013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.333567786 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.334036289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336612194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.333993741 seconds)
  done (took 12.011183799 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334778962 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.332618499 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.332909934 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.333729873 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.333952518 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.335322085 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.335409553 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333229406 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.33451107 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.334001986 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.333139844 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.334859391 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.332481131 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.333622016 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.334164061 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.335090953 seconds)
  done (took 22.558107397 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.338605647 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334122128 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333854467 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333745934 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.334035755 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.335152281 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.335464798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.334789503 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.333847908 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.334877316 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.334181514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.333977078 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.334328259 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.335331721 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.334588296 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.337309611 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.335722651 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.334117675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.33937768 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.335012198 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.335552361 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.334895797 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.334773831 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.334616442 seconds)
  done (took 33.259184199 seconds)
done (took 69.040933205 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.322599989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.332268308 seconds)
  done (took 5.871198332 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.393837094 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.39442766 seconds)
  done (took 4.004797056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.33541301 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.335678962 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.33752795 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.33832433 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.336417026 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.336560376 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.336327094 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.336504502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.335771423 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.33604949 seconds)
  done (took 14.581740802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.336898771 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.336238516 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.336930096 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.33771401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.338435754 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.335816613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.337789972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.33632552 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.337642718 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334857301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.33666648 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.336210538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.33749097 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.336255401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33712756 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.337546364 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.337388474 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.33774987 seconds)
  done (took 25.283134626 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.351861039 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.355988153 seconds)
  done (took 3.926179549 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.46636338 seconds)
    (2/7) benchmarking "second"...
    done (took 1.378416749 seconds)
    (3/7) benchmarking "month"...
    done (took 1.442004631 seconds)
    (4/7) benchmarking "year"...
    done (took 1.433259201 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.378653019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357872757 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.379718244 seconds)
  done (took 11.054940434 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.338500717 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.539530352 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.664470619 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.346988145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.342269622 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.343010355 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.542591814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.345176614 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.345074426 seconds)
  done (took 14.025732306 seconds)
done (took 79.964262593 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.325119726 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.391549848 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.349626538 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.340560288 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.635456663 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.355782276 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.328806904 seconds)
done (took 16.946849196 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.315842499 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.306806063 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.304209075 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.342803472 seconds)
  done (took 10.489545018 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334071637 seconds)
    (2/2) benchmarking "read"...
    done (took 1.651603352 seconds)
  done (took 5.204654689 seconds)
done (took 16.912958814 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339948518 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340226773 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.339797288 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.340008339 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.340628314 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.340057179 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.338571512 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.339020481 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.340499627 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.33957166 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.340346935 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.340400985 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.339548328 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341284672 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340405472 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339907976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341099633 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.341417932 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340361886 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340725101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340365242 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.340516126 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.341419028 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.340381748 seconds)
  done (took 33.387150431 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.340557451 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.339958564 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.340939396 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.341880059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.34278608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.340842744 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.342139884 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.341273486 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.341871455 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.341652475 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341704946 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.341363199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.342917677 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.341392482 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342016727 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.340725369 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.343658463 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341977886 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342151886 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.342435969 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.343043765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342860132 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.34181877 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341312176 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.341341714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342887939 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.342246443 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342459183 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342955498 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.341772693 seconds)
  done (took 41.478179897 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343598329 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.342472056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.342956832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.342918467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.343196949 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.343320737 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342087237 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.343121635 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.342518438 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.343149208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.342693793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.342545231 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.342482849 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.341102987 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.342032936 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.34280954 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.342321128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.343186452 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.342199324 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343443232 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.344814542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.343025767 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.343543234 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.342649671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.343485253 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.342739368 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.342867039 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343881835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.34302786 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.344098129 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.343546823 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.343708193 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343148772 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.343137311 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.342843679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.343577333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.346512209 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.34519353 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.345070708 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.344641414 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.343728982 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344215593 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.345123027 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.344024551 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.343961797 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.344027328 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.346045405 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.345083102 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.345417936 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344693246 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.343745599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.346165136 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.345882147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344047539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.344478768 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.34616029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.345857316 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.346596659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.34645868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.346891536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.346391121 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.34533612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.346493848 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345618709 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.345505213 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.346227004 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.347307677 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.348323952 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.344755985 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.34635135 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.346926036 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.346750044 seconds)
  done (took 98.012744806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.347358988 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.346266932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.34562141 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346053078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34702778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.347993511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.348347896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347595817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346904887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.346983615 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345600097 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348189327 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347225884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.349420365 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3476503 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.347166512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348450974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34767912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.347883831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.347972365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348808004 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.348739244 seconds)
  done (took 30.872391234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348242556 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348383915 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347726872 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350594506 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349499533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350704838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348411603 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349829552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348128174 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347377841 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348583532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347449383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.350495428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348769764 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348489487 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35162267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350013778 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350530023 seconds)
  done (took 25.512591879 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.348497255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.34886015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.347978005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.34874533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.34779529 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350940086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34947851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.34935027 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.348783441 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.349435505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.351124133 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349954667 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.350224566 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351031887 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349805108 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.350988487 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.350474877 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350755159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351467479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350673956 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350424824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350845844 seconds)
  done (took 30.927272307 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351538162 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351805168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.350417169 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.351778299 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350245328 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350309922 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.351133028 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.350551406 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.351335381 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.350136932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347990414 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.350511648 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.353234643 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349213702 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34890698 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351660129 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350425377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357522184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350613634 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352208017 seconds)
  done (took 28.251929491 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352539939 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35046989 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351374258 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352517112 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35208791 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352963908 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351935172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354106424 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35142412 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.352621013 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351089662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353145053 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351971293 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352636609 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353170913 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352050933 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353110967 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353284884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352880352 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353053496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.3525562 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352499459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351999219 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354234855 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353735308 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354737818 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352935982 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353705593 seconds)
  done (took 39.106193459 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354238625 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353790691 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.352401074 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.353667145 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.352147083 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.352331206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.354290968 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.35408136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352312966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352838973 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.353089797 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.354219431 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354581659 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354314718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354081303 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.35460461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353650134 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.355531286 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354734522 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354886615 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.354721176 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354483801 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.354669714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354044337 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352560733 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.353821178 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354845367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354515448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354745793 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.354304533 seconds)
  done (took 41.850636484 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.37257658 seconds)
    (2/2) benchmarking "in"...
    done (took 1.373075413 seconds)
  done (took 3.978010634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.355374526 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356174504 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.355498759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354511011 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354348676 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355626369 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355481633 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355071722 seconds)
  done (took 12.075191543 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.34736877 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.356276432 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.35658907 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.353659006 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.355611771 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.346330007 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354853697 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.35973855 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.347738656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.34897488 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.3495727 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.349748666 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.353318865 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350236571 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351006688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352040781 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.358731655 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.358127538 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.357715241 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357738817 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357000527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352032797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354618218 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360568375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.348927704 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.356713673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.357432222 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.360812062 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349983282 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.35664465 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.353726345 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.359537411 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.357727526 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.358295803 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.359139873 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.358537462 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360091397 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357560325 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.358626785 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363253959 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358325862 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.357588928 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.352719035 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.356948575 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355964698 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362883291 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.359760487 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.358319676 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.351711464 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.353271456 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.361664535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351523381 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.360730229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354790387 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.358877912 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364180122 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.366694606 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.352551415 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.353838024 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.360109405 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.367744104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.360402149 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357773044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.365271477 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356362805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.359856297 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362470377 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.367635568 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.360890529 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.35971231 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.36020933 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369001692 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.365263008 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.365287422 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360052839 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.360545577 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353969413 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36506902 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36227306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.363742277 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.364706195 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361044171 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35800841 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359623879 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.356647398 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.364789204 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.361157045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.362757045 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.353197106 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363464399 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369219104 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.36200194 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.354759591 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.356442286 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.358181025 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.363130763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.354095456 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357156048 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.365648589 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362372877 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362537015 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355044333 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.360603047 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36697487 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364028069 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.362293756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.368723095 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355240002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.367170709 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.369149547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362406493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354793167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.358910313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.367072393 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356576669 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.359875074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.367563571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.359053839 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368367061 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.36383239 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360755146 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.366988881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.369418932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.362856901 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.357735089 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.367459224 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363695921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.361159643 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.370181808 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.364311405 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.364107038 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.360310809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.370645645 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.357618349 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367374639 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359056421 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367622257 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.364479992 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.364743144 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.360142271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.364349674 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361182446 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.363140556 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.367353911 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370040163 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.362925145 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.371542468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.365718035 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.362890198 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.365735165 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.369618929 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367452729 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.359197875 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.368933308 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.35846989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367606516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.359119395 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.369131031 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364489973 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.365112468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365520226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.358272238 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.361799663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.367902036 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.36419532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.366235509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.368626677 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.367630633 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366770997 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.359124278 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.369133662 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.357641512 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.359942406 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.368294703 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.365683812 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.366527274 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.365178068 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373213963 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366759097 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366580515 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.358229377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364395984 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.372043306 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.368381434 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374527813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367829454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.366792751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361503486 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.362563135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370075985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.361118856 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.371246392 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371824813 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376035082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.362602758 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.368906969 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.359703793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.370488568 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.366841028 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.375243346 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.369004909 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368548224 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362612869 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372114538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.36227564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.37162852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.359471092 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.369762179 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.370106232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.369804875 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368976647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.364422599 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36587506 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.371932698 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370084594 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369134435 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.36339784 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.371931016 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.360866415 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.364554807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.372320068 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.369011645 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.371381461 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.37511387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367520674 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373257399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369944271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.365287278 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371409633 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36803633 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.37061496 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375075684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.370765505 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.366631293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375504115 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.372112309 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.36422664 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.369633321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.380378233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.370708097 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.364279319 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.374355121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.371735243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.370832013 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.372425601 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36548082 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374135858 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.373329037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.380249535 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.36481128 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.374065131 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.36687101 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.373608424 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.366770413 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.372878272 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.370359818 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375593304 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380626613 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.372242909 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365380491 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.374943429 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371627192 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.372195621 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364421654 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.375336729 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.375037125 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.374420134 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.369960097 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.370136647 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.374483452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.365674551 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.374090617 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367811851 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38250721 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.38772383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376387338 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.377245112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.375888206 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37614896 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.37504769 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.367739701 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.369092373 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369924238 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.370643784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369214571 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.377129551 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367770436 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.376753103 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371823289 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.375320163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.375047025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374906183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.367380026 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.377874417 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.374313756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.373935552 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.366550943 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376528133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.368799249 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375780314 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.37486605 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.370455407 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380914298 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.378481374 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.372543929 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.372622288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.370242007 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.368492165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.372044569 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.37970286 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.36918059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.377996308 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.368168988 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.372310311 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.369468876 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.378699272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.384506094 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.369713888 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.378583542 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.375446876 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.367080401 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.369140353 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377670951 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381170115 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.38735455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.368391603 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.376993663 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375338724 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.37535971 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.376063801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.376941007 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377475102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.377489195 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381925993 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.381336482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.372740498 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379406214 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.387036984 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.377666157 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378978678 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.369396496 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378818828 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.38693282 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373951683 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.375088319 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.372529748 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.379075903 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.377571059 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.377865728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378123314 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.377918405 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381203263 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.381736533 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380334503 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.377956403 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.380973357 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387710076 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.382193836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.389830178 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.373269774 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.382309182 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.379000607 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.372740793 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.372496363 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.374667409 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381725701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.370243395 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.382046302 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.379879226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.376143813 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.382565821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.384989401 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.371064305 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377567386 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386703927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.372717678 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382314195 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378807958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.37354901 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.380541421 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.379297292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.373389318 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.375730204 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375543145 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383227358 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.3751773 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382678914 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374485174 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382373758 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.379675167 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.380948618 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.382214097 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.380888824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.374657304 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385333623 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3812695 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.390677904 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.374825684 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381164145 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.376008993 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3847815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.394869903 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376096124 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386742812 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.383062648 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.37689854 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.379247777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385720151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3751378 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384602128 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.374610327 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.376205678 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.376177699 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.382852385 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.385276912 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.38716345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37477879 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.376081143 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384857747 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.382392466 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.381913525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.378567423 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.388579432 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.374978857 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.376062934 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383918619 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.377055401 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388722565 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375800703 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.378314092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379062404 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386475714 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.383860337 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.382211149 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.374872018 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.378505916 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.388374618 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389395553 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.379348262 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.377724241 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.384958795 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.37732535 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381179621 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.380160024 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.379377149 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.380303858 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.387109909 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.378669804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.378469457 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.379069208 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385353923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.386143892 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.386968486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.380736561 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.390457829 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.392531203 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39246698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.378590352 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.37981738 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.381236985 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387473672 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.385291861 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.376583406 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392390834 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.392536061 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388959653 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384733349 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.386490952 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.377964744 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387102607 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38498585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.383647789 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.393730528 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.382580386 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392070736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387982093 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.388043514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.37801012 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.380420278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.379601583 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.383175339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.39063139 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386616495 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.392551327 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.383701829 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39351904 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388392019 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.387986136 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.385857682 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.380502615 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39115075 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.380673845 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.388735541 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.391291162 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.378951525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.389100424 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389103289 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381017155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.381503532 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.393260449 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.390265527 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.381296045 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388557339 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.391335384 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400248094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.391707091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383454773 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.3866175 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.390998833 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392287277 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.388971807 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.383230106 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397805918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.400806675 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386545402 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.385212398 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392713764 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.400131468 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.388272366 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.386814239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.388290461 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.388996361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.390099758 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.388244383 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396995638 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396482155 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.385459593 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.393065436 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.386135422 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38544621 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.390743545 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397949466 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.390599108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.384115099 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.393946719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402156612 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39011716 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.398699094 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.399631848 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.390982521 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.394841198 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.38392109 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.392263335 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.389356978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.395442802 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390102031 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391046909 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.39243296 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382693973 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393291687 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.400023248 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.399773352 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.389517678 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.3861696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.385541725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.392319325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392623559 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.391442061 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.39084184 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.391133913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.391963797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.386041544 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40065317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.40509416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.396293371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.394389815 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.391496082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.392014383 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.395512148 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388130121 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.395878563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.391908184 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.392497799 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.387917899 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402087754 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.392644026 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.386433411 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.386653373 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388742824 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.394852359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.397603997 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.412376266 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.396100259 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.398148082 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395019119 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.393533987 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391533814 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.397835245 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395105671 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.391115177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391515513 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395903334 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.393874817 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.39524038 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.387745282 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.398953418 seconds)
  done (took 820.46842418 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395337854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396562627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397268637 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393671286 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39465026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396373273 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393327788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.396627658 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.396402786 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.398446318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39539047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396663482 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395359595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396008897 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39747223 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.397587644 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.397004404 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.397077585 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396740749 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39489301 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397465629 seconds)
  done (took 30.585037701 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.398337773 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.39466607 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.39665966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398317383 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396439061 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395835701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.395906579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395348361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396885918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39694801 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.397561112 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396961271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.395934309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.397512894 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397718073 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399226366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.401092639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39745809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.395764658 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396433029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.396460929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.39728538 seconds)
  done (took 32.000217041 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.400389142 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398372562 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.389436678 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.402380405 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.396456214 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.398975502 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.396496116 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.398515024 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398320644 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.393021109 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.390471601 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.391730119 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.393511183 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.402152681 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.395365338 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.404319166 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.399880079 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.398059947 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.400387556 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.400265747 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.402741726 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.411380944 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.401566485 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.390861079 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.401777484 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400517028 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.402106131 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.402504279 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.391203763 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.399529633 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.398918476 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.394017442 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.401757013 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.403062744 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.396153907 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.397894585 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400662343 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.397491155 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.401275564 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.398765903 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.40814163 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.399653554 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.402301515 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.411993051 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.401199107 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.395191896 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.406056384 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.399219054 seconds)
  done (took 68.434613291 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.401852023 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.403170312 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.400518143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.400022146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.398297343 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401150563 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401529146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399993577 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.401967577 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.401509838 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.402072209 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.402977383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401879032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.401406607 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.40271197 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401665934 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398206107 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.402636331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.401074673 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.400107874 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.402175877 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.402195474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.399946316 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.403917153 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403776637 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401227676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401763826 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40210884 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.403453747 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.400249082 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.401238008 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.40072339 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.401446701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400894914 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.401552196 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.401377677 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.402549789 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.401507608 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401865451 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.402561808 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.401376284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402272328 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.403996955 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.402758614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.404374652 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.405410373 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.40432362 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.403005466 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.404947889 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403416872 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.403374228 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.403573147 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404568644 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.404612557 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.402172445 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.403062438 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401763999 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.402163897 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.402415813 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.403150914 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.402867844 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403353811 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.404450842 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.40249687 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.405591346 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.404793943 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.404173902 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404807438 seconds)
  done (took 96.631807063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404372341 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.404099609 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407497733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406522359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404512564 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.404908236 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405200269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.404575079 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.406626428 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.404631893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406562037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.405998242 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.40531027 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407779128 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.40734109 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.405862823 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.406068308 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406306964 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.406352488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404958883 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.405188419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404830249 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.406447039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406723496 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407568416 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.406198108 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.407126107 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405351679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405943888 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408956264 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.408730144 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.406594849 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.406758188 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406718477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.408065049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407536737 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407002231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406132489 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.406192175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.407311138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407188081 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409667473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.406254287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.405996253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.407073385 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407317962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407094523 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.408449799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.40652992 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408384837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.405592056 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408388974 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407513883 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408697792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.410498933 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.410163177 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.41002617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406814734 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407911879 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409218828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.40891637 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.410595227 seconds)
  done (took 88.504052356 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411262645 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.411692251 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.408798617 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.409960138 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.407395281 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.407120892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.410281047 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.40984004 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.408684889 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.40997198 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409092208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.408977784 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408860302 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40905674 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.410948174 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411552747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.409218516 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.409635502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411391719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.40971819 seconds)
  done (took 29.47040034 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.412664723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.411685236 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.410272071 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.409675138 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.412298689 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.407468202 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.410869904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410275355 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410453322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409845385 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.411389077 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.40828777 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411211367 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.410378397 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410797763 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411303764 seconds)
  done (took 23.844968328 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.414227357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.41131941 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.410941902 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.413324998 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.410254096 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.412594045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.41229652 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.411585222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.410683808 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.411463897 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.413141986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.411773484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.41321007 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.412352852 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.409015434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.411753652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.414575477 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.411999059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.415101751 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.413660702 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.411089427 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.412188836 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.412436624 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.41247466 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.413164756 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.416104413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.413562612 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.410821114 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.412593195 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.412199194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.413268783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.413510557 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.413080718 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.411494939 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.415417826 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.412989374 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.413947367 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.412337481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.413598581 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.413886563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.412144196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.413902301 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.414478864 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.41600607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.413765047 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.414839609 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.415027424 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.413845267 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.414422232 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.41225443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.412195164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.412085461 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.414347344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.414836032 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.4162778 seconds)
  done (took 78.992873046 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416590095 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.416409945 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.414505848 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.415767 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.417785524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.4154245 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.416141681 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.418569427 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416805723 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.414419028 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.415105427 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.418146656 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.415592486 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.416273127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412502433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.415713113 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.414158182 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.41429977 seconds)
  done (took 26.764253618 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.414848992 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.415734933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.413775071 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.416444377 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.414569871 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.415913694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413787645 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.416994942 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413931184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.416256004 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41470791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.417280484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417994043 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416671113 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.416445973 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416769304 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.415929976 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416397993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.414543955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.417033203 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.415893368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.4178969 seconds)
  done (took 32.433869246 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.407027163 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.409262471 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.410099004 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.419673879 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.415284753 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.405355645 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.410482573 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.407021865 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.426065999 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.431060608 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.42753962 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.414562111 seconds)
  done (took 18.268170416 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417063905 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418555208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.418070873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416759685 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417522664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416745994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416813082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417416878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416785081 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418146971 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4169365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417625181 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41733021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416893947 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417759387 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419538523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418211095 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41792201 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416718984 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417035398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418124674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418671713 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417522311 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417738919 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41783753 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419412588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42041958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420056401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420264303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418337159 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418167471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419440141 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418799331 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420104046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420930347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422686552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420538555 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419402243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420891848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420408282 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.421726295 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422377435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42169308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421747105 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42106332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419496498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422746349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422266129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420840445 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422403713 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422902335 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419028403 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423319858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422459443 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422035988 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423708518 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423121343 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420702504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422799702 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42389316 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42215836 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424258452 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423793779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418758565 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423981792 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422925003 seconds)
  done (took 95.003982062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425533323 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42174167 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420481746 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420692071 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42276034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420500525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424429964 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423894662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423466506 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420987061 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420012078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418312399 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424599867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422863427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422810191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422913174 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421325563 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421462717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424260501 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425234309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422443401 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421890034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424136392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423093529 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422611598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420639412 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427396873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420271352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424324415 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42347976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426030185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42306437 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424708601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.421250732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423277999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424785733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424584947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418934031 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424067642 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42039577 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42161308 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42042051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421710329 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417776914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422012371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421454888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421581543 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42012614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421570483 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420050168 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42153081 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421161449 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42320794 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421887763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422173301 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421472297 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42203952 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420545232 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422367194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423407637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420717031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420228407 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421135119 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422665669 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420834079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420849101 seconds)
  done (took 95.147111651 seconds)
done (took 1923.221869584 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.575041392 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.532209384 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.409010297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.427701274 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.410888914 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.409783801 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.422170965 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.407534067 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.409904582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.410636363 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.411110903 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.603357404 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.443999806 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.406560078 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.410184917 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.506895255 seconds)
  done (took 28.471899462 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.439230466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.41700452 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.534782813 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.411830925 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.440812407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.614658099 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.471638848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.414092334 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.596301543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.424060854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.403127986 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.433625419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411765946 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.401793416 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.426777844 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.60865131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.678393278 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.399131036 seconds)
  done (took 30.805019048 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.88602922 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.401618392 seconds)
  done (took 5.56197669 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.431516569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.410467937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.40856505 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.40588336 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.401982709 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.398247831 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.410983322 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.413011494 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.4024142 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.537841253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.41344713 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.420224674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.424671193 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.411363182 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.41794385 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.455092213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.557046148 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.418088156 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.417994483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.41607082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.408745782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.502755496 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.454650366 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.419763492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.543721512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401660257 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.408548504 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.41711372 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.531646418 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.421222247 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.408932767 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.412577215 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.412204625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.403805763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96292504 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.402582188 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.446013435 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419144892 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417411644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.542171601 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.414163873 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.417771671 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.40409281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.95405101 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.520196453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.538271449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.412897615 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.411558986 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.413703215 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.482463218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.410067518 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.413169337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.472005543 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.259587456 seconds)
  done (took 89.712576517 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.423630694 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.406562004 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.592147346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419938653 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402553077 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.42573641 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.401121198 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.708706427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.419161317 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407006602 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.730409308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.049250757 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405127493 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.471548702 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.440582122 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.457015216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421702716 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403305539 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.402754014 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.4031074 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.988416799 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402994301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.401907347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.495534631 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.442709953 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966028305 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40372944 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.40250984 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.418688789 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.401446123 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.026459477 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402959645 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.452663576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.403239794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.705932533 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.815752911 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772735364 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.405507485 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45213814 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40829552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.432194115 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956922479 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.794981761 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.402963141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.402932702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95150233 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40449228 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.414138462 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.412493657 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.678809796 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.405369739 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.407570086 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405287972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.405234043 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.407026088 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.461889095 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.463750466 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966537635 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40451385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.40276496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426966891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405438249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.418115564 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407366583 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.407840081 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.797387816 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.666072893 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.418898787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799681487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.005815438 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404763138 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09996005 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.403960258 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.431785924 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.456065363 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40735029 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.40898657 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958038981 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.434868519 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.403386373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779352223 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.407048285 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.722520422 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.42582495 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406617934 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.00920359 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410776695 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.448570391 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.419868667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406615996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.404605487 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405018013 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.70786764 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.462062437 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408213595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.40638283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.410231882 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406921597 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.406089799 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.408738962 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079964532 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.413998308 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.410364222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426780208 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415815162 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.404257672 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410285197 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.408142144 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.693788214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.408264909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.418776012 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409321858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.416982276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.403399739 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.508661692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.41064904 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.731050003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.409839392 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408033979 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.413103552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408655641 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442825045 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.407182833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.430525816 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.39795481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.704880466 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.428888572 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.408217315 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.407561968 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.408877665 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409683222 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408232362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.468993075 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.412330235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224363931 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.415194222 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.424647117 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.40972085 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42162898 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410773897 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.408886151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.410446916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716903443 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.702695885 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.658674039 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.410493189 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408715644 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.23673639 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436515261 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593299608 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427408094 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407765508 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.69366477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.645673845 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.406111819 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405263358 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.411280451 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.688921345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.417395395 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751706013 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.028305212 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408160568 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.411502909 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.221700335 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227525629 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.414583492 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.408748244 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.719262167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.428070225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411010798 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.411201935 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.41282473 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413752031 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.420457653 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.417309804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413051321 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.415229298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.700820138 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.609411465 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.432421207 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416264012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957996732 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.437777447 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412168503 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.439885378 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416097349 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413544539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.459560397 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.412718838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.451256201 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.411705622 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.414918532 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979757474 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418054347 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.409794503 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.610255874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.173669656 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.41362589 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412792521 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.41593735 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.476579778 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990310534 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43362636 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.734483686 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.413753074 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.454503434 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.422123967 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427166679 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987934373 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.423865517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415092089 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.173884863 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.411173541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.900916885 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.412865212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.413350103 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.101321165 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.413555424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.415880876 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.409737144 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.412747996 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.727880169 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.416640361 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.463812948 seconds)
  done (took 516.800356251 seconds)
done (took 672.631694789 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.411892756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.409933982 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.414273101 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414504267 seconds)
  done (took 10.93152583 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431595377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.420324456 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.429166724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.413875462 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.433668343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.419349466 seconds)
  done (took 9.830984085 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.414720901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.408116261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414522893 seconds)
  done (took 8.521848168 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.632836843 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.42964646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.783762322 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.423524418 seconds)
  done (took 9.553647321 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.431755144 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.42500124 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429935973 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.431307416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.4302134 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.431285355 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429248112 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.432276695 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.431143454 seconds)
  done (took 14.154287844 seconds)
done (took 54.274957422 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.669241111 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.453239701 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.517497527 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.416056582 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.682361121 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.574485637 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48483756 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.643212133 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.396666485 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.465254198 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.448274425 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.421966564 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.611725044 seconds)
    (14/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.490337256 seconds)
    (15/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.502219058 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.651653724 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.495994 seconds)
    (18/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.446745981 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.495608101 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.41309744 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.452588116 seconds)
    (22/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.396755536 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.389437994 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.411676454 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.516422118 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.575281077 seconds)
    (27/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.542055204 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.508052696 seconds)
    (29/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.575449674 seconds)
    (30/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397373989 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.508389058 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.502785546 seconds)
    (33/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.482233427 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.611178636 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.498666452 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.484674584 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.509554236 seconds)
    (38/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.512726856 seconds)
    (39/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.397267602 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.475826993 seconds)
    (41/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.481946687 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.669754531 seconds)
    (43/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.665897109 seconds)
    (44/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.394608115 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.704659122 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.637664498 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.65994019 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.726761011 seconds)
    (49/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.484226433 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.599470101 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.390246449 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.431530134 seconds)
    (53/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.727359664 seconds)
    (54/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.634085036 seconds)
    (55/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.449924963 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.407906421 seconds)
    (57/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.40757528 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.392202684 seconds)
    (59/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.393701807 seconds)
    (60/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.401270489 seconds)
    (61/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.494497879 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.531539654 seconds)
    (63/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.633271301 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.787577236 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427517812 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.455315449 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.536082956 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.781170887 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.521511068 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.499406469 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.517653041 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.447208549 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.401857121 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.573079474 seconds)
    (75/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.429020192 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.510866505 seconds)
    (77/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.576066826 seconds)
    (78/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.568773193 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.52516929 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.480108891 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.57877714 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.501608235 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.396606228 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.402466827 seconds)
    (85/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.394554205 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.407217437 seconds)
    (87/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.446254324 seconds)
    (88/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.654675354 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.494828348 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.523201033 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.397763252 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.585917359 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.534315898 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.669357504 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.45073508 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.543185612 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.533821958 seconds)
    (98/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.393344971 seconds)
    (99/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.539475665 seconds)
    (100/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.510334153 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.487376216 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.452453752 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.587054138 seconds)
    (104/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.393777923 seconds)
    (105/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.64350994 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.578285666 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.669501862 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.422834285 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.532560485 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.542142474 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.560219188 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.416913426 seconds)
    (113/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.52052019 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.51953739 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.453591093 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397084123 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.466086931 seconds)
    (118/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.405957799 seconds)
    (119/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.639813329 seconds)
    (120/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.429411151 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.858161711 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.63295343 seconds)
    (123/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.393264874 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.509756564 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.537446626 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.572839561 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.57115656 seconds)
    (128/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.40060598 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.553228399 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.50671573 seconds)
    (131/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.52931573 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.418942732 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.574781933 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.483259382 seconds)
    (135/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.670780538 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.486899373 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.550007311 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.447159605 seconds)
    (139/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.454783293 seconds)
    (140/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.396133349 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.588713817 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.731865556 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.50503801 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.455128984 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.396363776 seconds)
    (146/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.622876375 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.401533514 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.544644113 seconds)
    (149/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.395555272 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.400321067 seconds)
    (151/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.490551168 seconds)
    (152/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.65323633 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.486260306 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.851875751 seconds)
    (155/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.399123918 seconds)
    (156/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.456915793 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.6481324 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.539335889 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.537636576 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.478167584 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.492798483 seconds)
    (162/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.724688705 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.656038869 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.609853351 seconds)
    (165/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.394311022 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.45564733 seconds)
    (167/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.570952847 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.567033738 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.533136855 seconds)
    (170/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.520802907 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.576283097 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.567759622 seconds)
    (173/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.539413565 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.449044676 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395534813 seconds)
    (176/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.448072364 seconds)
    (177/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.395751933 seconds)
    (178/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.572919506 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.529423111 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.531771952 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.449841711 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.621974201 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.395075997 seconds)
    (184/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.580456407 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.627659047 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.511728113 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.724249774 seconds)
    (188/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.661385853 seconds)
    (189/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.586394113 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.450617375 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.449858285 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.538077241 seconds)
  done (took 341.018771612 seconds)
done (took 342.306029693 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446286012 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.511653079 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.427253869 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.42554404 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424488276 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.426949043 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.449044689 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.429911958 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.440519962 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.442677877 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.425761692 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.434239211 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.444094587 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.437651581 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462092041 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.428922953 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.424835544 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.437017362 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.442603522 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.444251074 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427832878 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429468595 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.454003906 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.426352846 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436015134 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435373736 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.433909068 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.418999486 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436576451 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.443491961 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.419639838 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.434491871 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.44277379 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.438242614 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427672875 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.437238245 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430924279 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.516319044 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.450680222 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.438575304 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.437852818 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.444470364 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.434154517 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.432877878 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.442861908 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.45639538 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437316461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.44251199 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.418972435 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.433245137 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452569593 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.440912846 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.436464973 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.428812797 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433722107 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.442705536 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.441410262 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447122564 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.436067334 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428269806 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.461544287 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446893845 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.44046586 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.438021369 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.437613567 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.443460957 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.437375919 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.443708974 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.435513993 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429174584 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428371517 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.437694402 seconds)
done (took 112.927601179 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.549398083 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.425062064 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.585771034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.435592319 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.594662488 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.551207738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.435140911 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.435587477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.436031781 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.224183052 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.434237706 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.435117479 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.424410434 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.43488617 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.547352008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.435766249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.434463259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.121245954 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.437711933 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.56772694 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.426586823 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.435996011 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.438121841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.224863353 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.423714159 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.420876161 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.56698101 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.436898997 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.124745943 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.419910179 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.424630287 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.124335245 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.568215622 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.455417544 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.44822504 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.444313448 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.595384567 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.440214045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.552027344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.55189151 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.586230559 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.475539792 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.421443377 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.42730198 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.439640885 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.438348564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.437879661 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.465454919 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.426698705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.436782788 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.121821602 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.449070666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.437352101 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.438102191 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.437260742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.466380277 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.43841141 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.439673844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.569983624 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.43926617 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.553142307 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.227941561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.226756144 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.439247071 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.424279994 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.438547787 seconds)
  done (took 114.868274678 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.499134528 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.504090147 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.539263121 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.434596867 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.478677835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.542396558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.432912602 seconds)
  done (took 11.7277351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.436168429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.438880369 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.477206892 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.47905039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.438737739 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.601902992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440279455 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.44136178 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.438995866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.481095536 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439579933 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437776735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.450847222 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.430139177 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.476796118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.441554912 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.549525229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.432574018 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440998985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.58474064 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439758754 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.448464746 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.481352855 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.443333537 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440915265 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.436967987 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.213936383 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441084102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.440668548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.441847532 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.441161585 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4978547 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442388009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.431675949 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.440409614 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.54761887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.441630667 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.442164053 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.441891552 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.433656214 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.441104368 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.440706887 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.443094875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.440637705 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.441972019 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.455717446 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.441512035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.441165392 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.442936908 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442573763 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.482227392 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.444029044 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.441980841 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.442670342 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.486052601 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45002904 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.442177005 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.441064972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.443638507 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44247421 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.585880006 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.482273665 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.441912376 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.479916632 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441552703 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441828091 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.442026457 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.44099698 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522455394 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.442236313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47997286 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.441981507 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.615670859 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.458307323 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443405778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.437539546 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.437977724 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442517195 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.432568149 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.439412131 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.442023442 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.435192838 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.439962358 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.441167061 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.442212018 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.594378194 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.540948834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.443136577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.451679842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.441194073 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.442861297 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.486967157 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443533399 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.442782658 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486147095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.552351091 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.485997126 seconds)
  done (took 147.759657046 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.448590958 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.447786338 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.438831809 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.461299906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.436629054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.435233478 seconds)
  done (took 9.970534828 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.438811527 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.445436177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.44460852 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.444405283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.443898628 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.445444804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.444091137 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436726362 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.447194483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.445020016 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.444762356 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.445800842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.446992078 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444699384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.444645532 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.444580578 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.443690791 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.445404911 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.444414328 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.445498286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.438195223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.444973058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.445220704 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436761088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.447601938 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444740136 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.463675284 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.446173345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.446297201 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.445055601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.447079325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.445648299 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.438318454 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.441796755 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.449573518 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.43741851 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446412222 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.448132137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.443613723 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.446956968 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.448696008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.446618785 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.445066765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.449976273 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.437384848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.440644923 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.451213591 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.463287464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.44632681 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.448193209 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.445801355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.445809728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.450635039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.449316882 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.440007341 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.441298599 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.450162964 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.447104869 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.449638568 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.439408069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.449755353 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.449102728 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.440124682 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.448782018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.445902069 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.450296294 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.440389975 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.447685969 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44987029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.448041249 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.45092841 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.446400105 seconds)
  done (took 106.399060716 seconds)
done (took 392.018463517 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.771659606 seconds)
  done (took 4.068184629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.713002616 seconds)
  done (took 4.016303102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.852553144 seconds)
  done (took 22.423191411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.529795301 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.431432321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.446563566 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.437916371 seconds)
  done (took 11.14971393 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.695327075 seconds)
  done (took 4.000588421 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.442448731 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.440027719 seconds)
  done (took 6.184243315 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.645130438 seconds)
  done (took 3.946609035 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.755855151 seconds)
  done (took 4.0610362 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.45679429 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.452687727 seconds)
  done (took 6.2220409 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.411625104 seconds)
  done (took 3.715076361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.001226866 seconds)
  done (took 21.305952726 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.457844196 seconds)
  done (took 3.764102364 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.470805057 seconds)
  done (took 3.773951223 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.83226419 seconds)
  done (took 6.132925002 seconds)
done (took 106.062590425 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.433256007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.433923933 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.43255384 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.432772921 seconds)
  done (took 11.031444736 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.512370505 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.512799408 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.522292708 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.506857075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.508654771 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.512957359 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.490084062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.492209559 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.508259851 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.501059332 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.518108063 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.508399671 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.516900563 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.476551848 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.501713296 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.519146536 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.504130644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.52340613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.475928692 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.507127602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.452735453 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.508975515 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.505183028 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.452992267 seconds)
  done (took 37.342254003 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.934537504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.51279134 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.594165877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.494859968 seconds)
  done (took 7.837319487 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.55547948 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.555128034 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.577529025 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.607430119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.657006158 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.571656234 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.477317989 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.473519487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.459480422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.55756697 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.64007803 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.553708574 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.772642917 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.449350761 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.770903946 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.452506256 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.45071435 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.553098083 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.605186827 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.633619986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.452348403 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.556818736 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.560244001 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.55676492 seconds)
  done (took 38.803705679 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.459843856 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.468699016 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.454597369 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.467638508 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.454838395 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.451945187 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.456027481 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.460419143 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.454985108 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.452688315 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.456497697 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.468375608 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.453359365 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.452929538 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.461883646 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.456380639 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.45371843 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.462267921 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.459201219 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.456334706 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.455044323 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.460492564 seconds)
  done (took 33.383213689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.439915196 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.435643125 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.788964478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.692869058 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.437981891 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.443225801 seconds)
  done (took 14.544335654 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.513562829 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642546392 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.444655397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.773730137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.8564115 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.44605129 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.44513085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.674761541 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.955582381 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957046272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.498998765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.512618231 seconds)
  done (took 21.023416799 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.452305483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.443164028 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.453876848 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.459784353 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.494106805 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.448822005 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.452296783 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.438163544 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.5017432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.500920044 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.448993192 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.497088857 seconds)
  done (took 22.903616106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534264709 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450274017 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460940938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521107317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448934078 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44879432 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526644664 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13773032 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.453321038 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727082058 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448436353 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531756631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.696396436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461879904 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449501476 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.421501127 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675404202 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946775604 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455685588 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451350745 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480009536 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46174905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.447176764 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661139815 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449947853 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44968612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.728436661 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453005947 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732391881 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711474342 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709953201 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456426326 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726641036 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081078481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552210914 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657386945 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443462576 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452959822 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.44624864 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.46759502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467523731 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.454221466 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708242914 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458842654 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453638684 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464725095 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149127109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.459370675 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.452575031 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455471068 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706150991 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538879419 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.46195159 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451323973 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506578072 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451508126 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.456074578 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576981518 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08970039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46594725 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472670549 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.459231583 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449598477 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471707717 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102267762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.459636602 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.460757915 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460239324 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455655261 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463356229 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47961322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455918384 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.473207159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454618206 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223650002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453437822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460944416 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998876656 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453886301 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.460380517 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676259621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448790688 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450729323 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.447583627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449139121 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161349436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446553258 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.413945671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49730993 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132135181 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64339794 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460468937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474990029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666413827 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.413346457 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445047264 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.450916549 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443277781 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462487275 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143281488 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436403503 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.443257669 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690789486 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.652264356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451042837 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.38708171 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909288467 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435069397 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.466545817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439902117 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642936017 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.050769919 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6977456 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43963438 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472329179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437241511 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217582422 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432354388 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.44320916 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439177345 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707006524 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.247765019 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428250623 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506854274 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436122537 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428681247 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436260112 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431203097 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432918188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.605493354 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438102775 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682321678 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.428538681 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42625448 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.416311285 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416865267 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.423749887 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642954049 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420775852 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694026672 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419411612 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418053616 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4130293 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.628455408 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.421763836 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.420216161 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752726742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423359404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418974199 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666858935 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442996984 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524178553 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44247737 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.418656118 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656844288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.414249269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.416966912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418770043 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412524018 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413916876 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.416748212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402805611 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023543165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389428397 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407283035 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406851285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421512705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481021064 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411494817 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607937872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402538042 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403967318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410527277 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.406751625 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618710009 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657725118 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.403692978 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576297761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865774192 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014089484 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412647042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399796202 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.39848653 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.404284135 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39995916 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40053223 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400529289 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605891523 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652966802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396539925 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018982803 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399456725 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398408065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400637072 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651543042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.403275658 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395466508 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393718321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387360241 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401580225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650923805 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614257417 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.409133393 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393100958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936010095 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399794092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391685229 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392345943 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415421449 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391224546 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216313935 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725487905 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384647845 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642653226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39032929 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40240926 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389064075 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390932254 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408499074 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412386919 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411759309 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.591986728 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396533269 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388905177 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02333311 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172193991 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948373717 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391719912 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.385907421 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388352131 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077519725 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383127946 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382422558 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626322589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073464648 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378922155 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844030403 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.379751296 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120852379 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634811014 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609764652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398530407 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.397390694 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642366109 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594256218 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407663035 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387400545 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379827112 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.345444915 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922515192 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389739077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555938446 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06718549 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387632791 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377131753 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.426089088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384002429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745361318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374096777 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377502486 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384734679 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380552592 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198381266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380687776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379841217 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028709807 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393468071 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.843372003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375901989 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582095787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630697213 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.614576068 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.388164383 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.379455325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621458364 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636187991 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382870358 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392826231 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947951805 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.237266434 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.3872245 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377795969 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146999129 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379053716 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658724327 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.384709583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.387745854 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381546751 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377057748 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379571292 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.375208992 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382713694 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352210145 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866047804 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.369571624 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372616241 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376233751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380153619 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621487925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392966897 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000023312 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605617819 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371897043 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427486793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386962011 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378620628 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.346409959 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377903923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374332539 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394346922 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594436154 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379864122 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.344635793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379338459 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587759 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379203936 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377798347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59361195 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.377368326 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.396638809 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173803291 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407332806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379518817 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380202233 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383955921 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414614141 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449790326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584200794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.635180376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639593437 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753554475 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377910401 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380919836 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.392263018 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462689145 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378657011 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388749004 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.378421475 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999489249 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160305117 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005831876 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64070312 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383189965 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391007488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380319638 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618745435 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378702003 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655411642 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379973771 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.369971602 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400305215 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381257799 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379529071 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59395841 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655810806 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381490635 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3936069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384072903 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382175918 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643709777 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.595663928 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875686385 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936295619 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384358918 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386812879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07276066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655015444 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380666446 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380314302 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38347682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.390811089 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390937676 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388276 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383321797 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604290327 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638514116 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009393829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636242959 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.563197769 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.309161264 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382283172 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625152489 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21217858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585568844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004258246 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112308395 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633203602 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451547668 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585193787 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.378034361 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615492421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.39046196 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378364357 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377646251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378030037 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.378212265 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635029321 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009780798 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635143752 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.384043383 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.389417059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407529472 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.585659103 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60011303 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102055229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596704277 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639243532 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391146749 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379331766 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012633896 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643395985 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38722728 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.38566226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596407729 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378794375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416923678 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.248856385 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.381923705 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928732416 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.594411307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399224941 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389993674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11033603 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013425914 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396593184 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875656317 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384789725 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383784267 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665311702 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390900005 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386162797 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666404075 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386810561 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385936985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5914108 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.002085893 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13030189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.385399786 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39722516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.383416287 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384796158 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430027891 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38401533 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382161909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.755664705 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38402483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383419207 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39619393 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.390040591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400014135 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.388013553 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380621776 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390641474 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.35664441 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.351149081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391515058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503610711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924348894 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384514193 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.001409658 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.720744465 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633076922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399797666 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.357783217 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392110613 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386120614 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38376702 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382316754 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393487383 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935598133 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.400463981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.648414437 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395667552 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.597507686 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597645358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3875155 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590260336 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384735389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426603254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.354626933 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386792527 seconds)
  done (took 994.978069732 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.389611243 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.390982529 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.395540804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.443224186 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392567154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.387827279 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.390727691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443791918 seconds)
  done (took 20.493944748 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.376768624 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.384012796 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.375399022 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.383205041 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.387768035 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.913434485 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.391889645 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.384642015 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.39773248 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.390542652 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.391069894 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.037803096 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.389574186 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.381879776 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.389431304 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.386968039 seconds)
  done (took 32.620886265 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.038895609 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.386380956 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.822131972 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.396083078 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.399366938 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.387227338 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.498008172 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.391632025 seconds)
  done (took 25.582310371 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.391669781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.392806978 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.392530063 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.392863286 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.393032254 seconds)
  done (took 8.223635409 seconds)
done (took 1270.072092423 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397733596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.394899114 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395613422 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396560686 seconds)
  done (took 6.845812337 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.359943082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.357860758 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.35953373 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.371846919 seconds)
  done (took 9.710850914 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.064910664 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.886002521 seconds)
  done (took 5.214069025 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.92250112 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.919316401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.911936105 seconds)
  done (took 7.016374056 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.668935142 seconds)
  done (took 2.932816873 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.360752604 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.37820508 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.098228504 seconds)
  done (took 8.100349995 seconds)
done (took 41.08327295 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386799621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.140877433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.540075628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389115333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.544720204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.544249752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.631736356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385925806 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.381908867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381394799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384836402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.545468347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.602350252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.143567331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.603140531 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.143998835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.559505681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.381269403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395890917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380646335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.612180057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.386659553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.379839053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385907587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.545137713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533317731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385113377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.140074243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.385600416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380457614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562727074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384481161 seconds)
  done (took 82.812244086 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.385082396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.382304806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384307208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394108493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.380430883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382450378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.384299167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.379955217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388163682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.386030793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390118646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.380722347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.382951518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389390287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.383453375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39331769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384412859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380521564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394560508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.381861137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382961358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.381546973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383799236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381899187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.381641602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392600476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395033332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.3817787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382692044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407987579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395345883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382324849 seconds)
  done (took 77.623529172 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396707711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.382378409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.396960863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381104427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381449981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383789376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.38421888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395293542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.406420243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393275357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382731356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.382229648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.384465677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.382340151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.387316596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.383802997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.383338968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382891027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412889289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.382563619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.385728621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396738324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399422991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381895419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400713231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397645194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.38341978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.384985992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383318437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.384434868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395765952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391396361 seconds)
  done (took 77.719321923 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630277564 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403428662 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406852299 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399652336 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407541101 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405277211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399436113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634052317 seconds)
  done (took 14.955016828 seconds)
done (took 254.373587465 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40509774 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.868213277 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420544214 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.398394589 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430659436 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.425476414 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.610851225 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420638767 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.615175794 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.417099408 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409643686 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.400120998 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.162908281 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540854763 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.183195445 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.291042924 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.234055421 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.386379026 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.933479597 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671825554 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420177669 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.390145864 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.180571225 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.251408632 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.374306051 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.469318166 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.48523014 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.61561282 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.551718156 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.469300096 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.87821009 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.396985292 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.404298372 seconds)
  done (took 64.380971585 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.396594206 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.405596309 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.407042079 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.406567614 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.405769379 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.40585002 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.397795869 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.406823228 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.405319182 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.407208646 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.404651461 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.406861991 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.40648078 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.404115363 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.406617895 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.378785208 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.39679783 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.404551253 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.397306583 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.379695626 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.405325223 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.407564041 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.408479004 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.407671078 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.406635417 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.40729143 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.406856066 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.407177616 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.407531387 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.40849778 seconds)
  done (took 43.374163772 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409217016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.959777208 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.104766885 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.402170598 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.399562743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402313773 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.673349322 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.405944743 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.405250869 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.404198865 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.860074128 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408217925 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431631262 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115060148 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.398269843 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.40985446 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409890743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.400976915 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.966416164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406938199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.674043955 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.40662909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.676276613 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.405166935 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.403529151 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.401632942 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.408298098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.180182336 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.416902983 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.860679696 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.138552988 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.669687617 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.110168579 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160039778 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.136044047 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.412330655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.409178308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.86461319 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.40202215 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.403047897 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.672918039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40381039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130990551 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.071459975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.413492013 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410773407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.210974289 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.860557878 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.629587556 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41074177 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157783018 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.40717075 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414125814 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403165615 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.632980879 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406175845 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.401527614 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.239679356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407249933 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.67465134 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.408162209 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.405654409 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.9652873 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.400631544 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.96118082 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.401978592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412834229 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.406038044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.128909863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409226088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095056981 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.415236137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.41321617 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.871362244 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.963639777 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.25793263 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.405015383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969828565 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.150407103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.691343682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.409551353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.167691639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.695280031 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.40462959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415192557 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414677337 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414039172 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.479984185 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.672592385 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.01433015 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086968957 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.235557587 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.676011297 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.414240974 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.406182896 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.228679854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.409419905 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415351494 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.123927349 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.092055097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.416889243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.41374139 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.078725791 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.417783113 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.680711671 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411633525 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166396267 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.407749657 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482807118 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416816965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.41260126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.408564236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.680165234 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.405722962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.415091739 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077079924 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.890175495 seconds)
  done (took 195.041103804 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.405390055 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.396668792 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.405470521 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.397338828 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.401934321 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.409203664 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.400808793 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.402787193 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407296333 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.401744164 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.403609039 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.410592702 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408544032 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.401233313 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.415171525 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.398866966 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.402575034 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.415295874 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.399943674 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.402085001 seconds)
  done (took 45.365224249 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417851945 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939651907 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.909668736 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412526819 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420875513 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408484364 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461904945 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.413981497 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417746938 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.694069577 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.569373687 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.413756828 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418114796 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.416647557 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.913980356 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.386163604 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.692390062 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.935038224 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.415491281 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.939931868 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.384952787 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417581819 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.410191891 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.939453757 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.700939737 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.674819632 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.462601325 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.937195491 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.416923602 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.417623596 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.939964606 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414430833 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.409401138 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927653172 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415435519 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434280691 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.420065581 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.46695433 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461928615 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.692450242 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.945365021 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.689394549 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426512327 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.565936902 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.416839668 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.388994555 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951998285 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.416841588 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.390240607 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420204119 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426036278 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.928788767 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.407088332 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.92970065 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.41519515 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.419012978 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943447695 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.925872868 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.915794922 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.568737666 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.41120729 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.681837141 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.417300345 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.956064191 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.417223147 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422200126 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.420190175 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.576473125 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945197459 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.679833768 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.69420697 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.694211068 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.417893285 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.477238386 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.417503145 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.698423766 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.472009541 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.785543303 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.698877004 seconds)
  done (took 126.998601644 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.676668538 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526321789 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.769640209 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.963404982 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.899106541 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546957215 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.518805225 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.649426987 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.433299637 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.518088521 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.036281107 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502110265 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.147133876 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.47921274 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520186714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535001107 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.79596894 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.341494153 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.012123465 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.012362626 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.414448862 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506000291 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.908356672 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.603586559 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.408854538 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.971097914 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.303337676 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.914834114 seconds)
  done (took 53.199807748 seconds)
done (took 529.628121772 seconds)
SAVING RESULT...
DONE!
