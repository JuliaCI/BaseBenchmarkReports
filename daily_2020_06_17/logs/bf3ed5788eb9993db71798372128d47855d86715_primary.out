cset: moving following pidspec: 7518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246268691 seconds)
loading group "string"... done (took 0.633098629 seconds)
loading group "linalg"... done (took 8.198778305 seconds)
loading group "parallel"... done (took 0.167939687 seconds)
loading group "find"... done (took 1.318704432 seconds)
loading group "tuple"... done (took 1.937280846 seconds)
loading group "dates"... done (took 1.290901916 seconds)
loading group "micro"... done (took 0.196615695 seconds)
loading group "io"... done (took 0.966887392 seconds)
loading group "scalar"... done (took 39.512084795 seconds)
loading group "sparse"... done (took 11.939230352 seconds)
loading group "broadcast"... done (took 0.980092308 seconds)
loading group "union"... done (took 13.68998142 seconds)
loading group "simd"... done (took 4.68881222 seconds)
loading group "random"... done (took 9.387616988 seconds)
loading group "problem"... done (took 1.701719644 seconds)
loading group "array"... done (took 21.353796372 seconds)
loading group "misc"... done (took 1.627911145 seconds)
loading group "sort"... done (took 3.455215391 seconds)
loading group "collection"... done (took 17.681001046 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540266616 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126945921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138045532 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121144404 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150857321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118606417 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126123269 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085154852 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926904059 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152056097 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11526892 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438274322 seconds)
done (took 5.504404325 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173530701 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090661081 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079489927 seconds)
  done (took 1.30797514 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067214553 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127722018 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068055739 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069289645 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069338353 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069226408 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068871962 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068559317 seconds)
  done (took 1.680239944 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073475927 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069726852 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067522953 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070555573 seconds)
  done (took 1.422123748 seconds)
done (took 5.80261419 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.806241319 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213449804 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191651479 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411551679 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137989042 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182145005 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646063947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341551533 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205026573 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096197957 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113325263 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362724842 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125263653 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645949482 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078769609 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097260183 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142020825 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434049233 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072367942 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088709473 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093644808 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133096063 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090544742 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077531479 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14994976 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07102859 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14425011 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084138626 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069551099 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222832988 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175786766 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658963866 seconds)
  done (took 10.541557448 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10250618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099995142 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069287567 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125556427 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098803121 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070699658 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07634884 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068618622 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090563941 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129788857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092525969 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109415491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067447604 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070219597 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083960016 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198163097 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080835109 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08246091 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069242531 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079912294 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108177536 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081399367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081265389 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080615765 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12958609 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171276816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099660192 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099212629 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067570628 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082350754 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115661121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130098963 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072541484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067083404 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126944646 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096046634 seconds)
  done (took 4.655820755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107163629 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153079594 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090838701 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140394069 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06544981 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112340703 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067231217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083276677 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238352739 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.446130647 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632302522 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14929764 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117662263 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106047978 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071741827 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070511196 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068710011 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270193229 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102637619 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113876639 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084602831 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071550845 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070360473 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070697718 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072850714 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064978927 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069701347 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08947519 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077395312 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065180812 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332695994 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127621571 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070087334 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.845308487 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169832086 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069423347 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106797791 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16146264 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095207618 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.279508031 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069762506 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066587023 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162481873 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065332688 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072742388 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067289857 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085753059 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110178907 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12126634 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066665085 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066579037 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16784807 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065803179 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085208855 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065161535 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.260751059 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096643947 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15396304 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070266009 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297756268 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097339046 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074152718 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066535129 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193866309 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118779608 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069783469 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068682679 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070218071 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069709225 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36549587 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066877395 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.912391919 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071684014 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079392275 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071561421 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072067464 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079828857 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079691008 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093281796 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06822072 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074669956 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067557576 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067102867 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067697973 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094745114 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393620439 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071174142 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073245969 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065944059 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094723175 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099560725 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067402676 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.169806457 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103056773 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071994501 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067992441 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065298958 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069392668 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120247931 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071303235 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114720972 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068578651 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.071498214 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098784445 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070329855 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101601594 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077302312 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071896367 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.469067255 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066690187 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075362853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068361684 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06868482 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067513855 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079957099 seconds)
  done (took 22.002042869 seconds)
done (took 39.445867374 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24354665 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084235465 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084671031 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084696632 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084943477 seconds)
  done (took 1.810388584 seconds)
done (took 3.018612666 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126796155 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102510332 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065362228 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098112214 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065636041 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101820983 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10139777 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087497234 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100968352 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065434609 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09818478 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065307312 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065631484 seconds)
  done (took 2.371845004 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083015487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083568943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070223283 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0834025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063216315 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082164694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082066019 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088937854 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081685385 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073219013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063581434 seconds)
  done (took 2.057265439 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082947684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083907306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069592351 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082333324 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06314455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08251302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082344048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085778656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08234994 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074306436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063775755 seconds)
  done (took 2.051017478 seconds)
done (took 7.677013732 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079707133 seconds)
  done (took 1.269397165 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537241335 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.669047409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079354683 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101838896 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19376247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110636681 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2417069 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084259567 seconds)
  done (took 8.380408149 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107195225 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071050717 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070199705 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07103524 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069500165 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070399876 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070775585 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06991342 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070892717 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070424056 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069762917 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070260761 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071200746 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072198771 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073398403 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071824871 seconds)
  done (took 2.440390201 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097497005 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096084306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0745104 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075690065 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073134113 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073047048 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075331181 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075286578 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072054874 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073489074 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076830169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074244074 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074035483 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065142347 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075300752 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077399688 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071882898 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075396589 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076007663 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077243412 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076234591 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065201093 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074340053 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075220734 seconds)
  done (took 3.123001143 seconds)
done (took 16.412587198 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117520506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078899912 seconds)
  done (took 1.392947683 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078788709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081094066 seconds)
  done (took 1.365982908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078448657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063071173 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08535144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074642663 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063944595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063764636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084058309 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06408191 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064454382 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064327483 seconds)
  done (took 1.912614313 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065946838 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073044865 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070595807 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079651433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070971534 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065424491 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069425883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065786941 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074145465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06412725 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068988393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084236251 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068401386 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085331044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069036602 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068725214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070688205 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068080997 seconds)
  done (took 2.4905048 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063338238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06409483 seconds)
  done (took 1.339948886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067475963 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064079618 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066968878 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066750882 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06420978 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063037712 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064277523 seconds)
  done (took 1.665023809 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401108734 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123462366 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324335242 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071103923 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081277286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254490884 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06536734 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070663676 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069934281 seconds)
  done (took 2.71419075 seconds)
done (took 14.096323332 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081179063 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086684229 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099146025 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415136383 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093694954 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068892095 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115513848 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182076522 seconds)
done (took 2.362921348 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217884313 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.826674127 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.47707878 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210005713 seconds)
  done (took 2.730740098 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348547013 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082335523 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078012973 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067347552 seconds)
  done (took 1.801786916 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067976522 seconds)
    (2/2) benchmarking "read"...
    done (took 0.185531335 seconds)
  done (took 1.475517643 seconds)
done (took 7.446595904 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065964522 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065488474 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090656786 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066015601 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065660821 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065925028 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065793965 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065811273 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065315907 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06569121 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065722519 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065492867 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065255537 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066103443 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065496489 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065252569 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06561327 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065669852 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065330535 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066204277 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065449412 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066466373 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067450001 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065692906 seconds)
  done (took 2.859502334 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082952369 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067378056 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069458289 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070113776 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070059148 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06900596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069961718 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067897884 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069878296 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067461888 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070006553 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070342668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067652255 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070124042 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067617886 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070259097 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069914559 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067916835 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067498438 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070007596 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069154367 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068007405 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069926562 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069515802 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070030879 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069596468 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067650486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067634932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069118061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070248131 seconds)
  done (took 3.316739692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066393126 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062446264 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062627712 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070959139 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061782562 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06255132 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061652502 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062147572 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062676883 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062442802 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063522039 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061974532 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062008472 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062554793 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06293339 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066406293 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079692975 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06222141 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061984541 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062392095 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066232764 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061681317 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062304154 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06191316 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062139801 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061611387 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064617331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062002555 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062817261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061725876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065745851 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066446393 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061934919 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066777844 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066339017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06164912 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065856102 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061433694 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062686585 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061683867 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0617444 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06211173 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061973144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071006123 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062199338 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063610046 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062001553 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063286835 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06238847 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064258082 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06147318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062199207 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064080399 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063049868 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067100748 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061466127 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062619555 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06165614 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062533914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06155442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061429963 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061743068 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064908871 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062315912 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079084751 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070625104 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061643117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063396024 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062473701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065388837 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063391208 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077184484 seconds)
  done (took 5.836745746 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0862965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089045172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066660023 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067934969 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062308465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062185521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070928262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062472928 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067150581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081963819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063228751 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067327973 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067562938 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06857261 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064453784 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069085512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073048106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064785679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064239975 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068182076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064800243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071681773 seconds)
  done (took 2.772191306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151163615 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068836426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106570092 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073281733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071486488 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073684701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068595663 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068796935 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0687692 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069202689 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069248021 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069013031 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071802279 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069330412 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069381716 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069164856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069129564 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069455229 seconds)
  done (took 2.610901239 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079167273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067786579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087145999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067896245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067708765 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067751386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072140977 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072963769 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068344627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068285859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073121025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068274082 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067711909 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06801692 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067517235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068270721 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067909836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068048872 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073426706 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072211911 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071958731 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072826411 seconds)
  done (took 2.793687365 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079673831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066920734 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082293773 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069504412 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06329676 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062334407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.078407976 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067684668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0691657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066958934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068744873 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062823848 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069870759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067483691 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071867588 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069605253 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068706711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069600563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068577477 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064871235 seconds)
  done (took 2.624257409 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084879253 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06598316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065669731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071891491 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0651537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065762118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07242087 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065890896 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065847981 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086338288 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066158517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066260841 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072161722 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069725812 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065773278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072026005 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07200375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072200537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068421417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065827252 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086550194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065500023 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072222064 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065894747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065556836 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065597678 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066069857 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069615324 seconds)
  done (took 3.19526971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065724804 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065078312 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06549038 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06526514 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065501076 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065492411 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065965353 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065855669 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065051271 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065773596 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065458039 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065050744 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064994167 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064989279 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065109861 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06518523 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065163212 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065325244 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066082891 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065622981 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064846404 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065034717 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065551478 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065168768 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065171157 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064782227 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065497712 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065268999 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065069266 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065041784 seconds)
  done (took 3.201007672 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075625943 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073773521 seconds)
  done (took 1.392127875 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064027067 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079511439 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061490541 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072780021 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070803684 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065506511 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071624653 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071268734 seconds)
  done (took 1.79478628 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086484691 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07555422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064708313 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076721236 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075264794 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08547402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126952899 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064490578 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074551252 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065502534 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083407625 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066770435 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074992197 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069366649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075244726 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078092774 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062528694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069742924 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065025419 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062735927 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065169633 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078014115 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074147644 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062740067 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069716353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091587305 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080716165 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063933919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071068875 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07671081 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074673505 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061628326 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064198189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064857317 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062635941 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075453184 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082807592 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07141742 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077089417 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065388803 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073614883 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06214263 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072897169 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074779829 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080437496 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064466845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064169159 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062167552 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065283785 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070323099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062068818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068869559 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061584376 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07624223 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071971868 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079397723 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062874285 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069981602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070749198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07145998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075679809 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070468479 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073895971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063823636 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079483375 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073456714 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075976417 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061910863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061335056 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062353126 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07800972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092844178 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073593499 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064262073 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064715122 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061954722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071318622 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064851636 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072928421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075964561 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063939055 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069066334 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076127566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06862142 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070639555 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070617105 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062591965 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067423817 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065372767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084572602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062843527 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06264495 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065588457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079606679 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070836382 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066718962 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065402262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075851779 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061659981 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064590451 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065096339 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070189679 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077443624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068133102 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06864435 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077082085 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072940799 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06951049 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070973116 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061342507 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064950478 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066027506 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075251445 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061024663 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070560214 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067503166 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063879151 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075368887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062078749 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06352839 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076122269 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07529688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062660523 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06120524 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070570884 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064002852 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.190444415 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078662602 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063607166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062242796 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062296747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073182584 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064722061 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07226305 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068409348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071372962 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061824927 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063043163 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069119538 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076492793 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067890122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070138955 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074109892 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070077396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06333063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076494102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071099637 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066712556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075061446 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06890559 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06216787 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066525173 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071198985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06406149 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071403226 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066710195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071259505 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064958642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06297089 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070349583 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065039514 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066521027 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069359032 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062749672 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080022557 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070478272 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062173306 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061848643 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071426148 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065946338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063253253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06612099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071111813 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064794465 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06302665 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063859785 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070375334 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072438419 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067383988 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065182502 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075104229 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081253254 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063693015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070984873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063687047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065232323 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06468137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078778638 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07458311 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068261781 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070989425 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061294019 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074051133 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076232793 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066977138 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062526313 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066768499 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067898154 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075900155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068335913 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064836591 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062845613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070044499 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066767111 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07092335 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06375722 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06671528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069513657 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062940165 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070030706 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064935413 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078649115 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071447222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062357038 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066795873 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062702031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074973259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062417904 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065455969 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067109227 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064645784 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063057652 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070326712 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061243151 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076539272 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076656276 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069061027 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066361675 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063530254 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076231329 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069467902 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072763495 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071241107 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074731679 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079928162 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067681121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070796377 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079067483 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064198127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06132478 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07626102 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062369418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063356498 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063016005 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062697843 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070776296 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070997392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073724423 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060727884 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070391617 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062257889 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066238372 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061930718 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072373893 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071006054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067986921 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076130227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.191302618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064575908 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072543802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064750746 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064470832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065628289 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071734758 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064375094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070240508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06746348 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069830301 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066522041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062122199 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070740262 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063945739 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069899625 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073315407 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063854395 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070123034 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071255742 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064629732 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071307505 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06820149 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066908633 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071484213 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07052496 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06920395 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071007574 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062059736 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07573804 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063592939 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076558823 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069377317 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061314736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070363956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07113846 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06905434 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064902384 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064708141 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07023023 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06373542 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070651917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077270828 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06508729 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080064614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076027453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070043874 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071313266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070164199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070386802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066578454 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069162795 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064895086 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069875563 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064247871 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07307952 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071950646 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068972411 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070553875 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065245376 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069938042 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065555888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061737534 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066538129 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067218934 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065235156 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077024162 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064630781 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067579046 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063358862 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065368402 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063752212 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062226588 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071071703 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071511025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064793889 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074708219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066462113 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070301998 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079654768 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061755804 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063036398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062595169 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065567478 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076911606 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064591844 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077764337 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069344506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066622403 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061739232 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064560718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062922404 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061775946 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062842898 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07253811 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066586417 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063223206 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064144912 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070783066 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06484437 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076568181 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063298011 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068776622 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064316406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06171663 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066470532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066447738 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071234815 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064248325 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065307521 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061581743 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063748505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067998028 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07052874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06349368 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069471238 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076028579 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063463243 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070920598 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066615549 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062179703 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071215398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06393385 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064192804 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066176465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071564796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071523916 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064406686 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077847737 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065958445 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06965033 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063919178 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061784808 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063529998 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063327357 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.193655586 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067239689 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065723066 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077242977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062449513 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070256615 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069615356 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067689997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074263059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064633469 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070183821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069163295 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066216274 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070370167 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07727185 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067909057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072123944 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065702385 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070359241 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074883664 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066874465 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076114611 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070593719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064991571 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070309885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06538961 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063706848 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063992155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06355948 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074255174 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065133115 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0674078 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067221403 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062377432 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068773918 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066958718 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077317551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071227887 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071341875 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062370552 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062048523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064681547 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06571506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070346652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071142467 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074794238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070757886 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068224103 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063501295 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078727604 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074494311 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072513636 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066090258 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072358608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064988524 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071059779 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068431599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06952462 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065512772 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072382637 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070224632 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067150174 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074977299 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071983139 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06515939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069950438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070597048 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069432959 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062830403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064974196 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070936336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073258914 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071583244 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064019692 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079569541 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065352844 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069404569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066919208 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063522202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072940956 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062438455 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070750631 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064834653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064872768 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062601433 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066824218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065526057 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071148586 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067307039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062367368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080465551 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079206547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070096638 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0636943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063816355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062654418 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06265806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066872781 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064807184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070017136 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079129009 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066499636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066275781 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062024349 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064146274 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071731283 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07196589 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061769733 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062187219 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06644786 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070300971 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076431413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063274506 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063643678 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071630199 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070378915 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062132956 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066373837 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061330234 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071970769 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080738786 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064257298 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070014834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073941029 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0765874 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064350535 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062316919 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064421077 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070007961 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069310766 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064973406 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064861293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083604023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071498442 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.196406499 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064308145 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071755602 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067418407 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078910095 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066029287 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068179481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073066114 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07051092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071663555 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074959441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075415438 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070477614 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070596159 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063847657 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069724546 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063231824 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067765866 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065621165 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065292041 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06831792 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071157282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067228381 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079936192 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080019561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067531361 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061668332 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067501426 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06755305 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062292146 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065513026 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062448838 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062859186 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063525998 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064485165 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071422884 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07464709 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070665438 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066535429 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065743491 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063239333 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075518733 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072947014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072026678 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063821737 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06710696 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066902012 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072953679 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067176618 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066068755 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071274561 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070627308 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070736749 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062985396 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076307237 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06389075 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070871554 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067088598 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064385037 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065213772 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071771949 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06884035 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06594446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071698564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071517627 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066405056 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062363761 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062047568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074493568 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06257979 seconds)
  done (took 42.77372175 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100984283 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064881638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062807975 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06241345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072268292 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064200612 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06266174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064018659 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063792144 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065836106 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063481929 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06295983 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070900807 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078451457 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073132433 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067044839 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063014512 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063853709 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063007247 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063821183 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070549166 seconds)
  done (took 2.745249878 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070526738 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078998421 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074785054 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080784985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071809395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068235163 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075745874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068634597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076501963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073418839 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076354474 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067925809 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073134508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073718364 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073242891 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068699501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076115416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072012043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067721515 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07541288 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068057841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075292213 seconds)
  done (took 2.911249515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080516417 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064226311 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070765002 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06132689 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06292319 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062352698 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066088242 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061333551 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065395394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067034711 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065710623 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065880682 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06996197 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061882742 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067033242 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061935399 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107650483 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06582079 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063556293 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064099957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061884068 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070859592 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062112601 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062286334 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066282629 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066211831 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064609736 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062024511 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063357398 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065920949 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063444639 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061881178 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070408682 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069410957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066140891 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065706731 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063148728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063632785 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064578496 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062033913 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069775454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062168615 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063831526 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070206893 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062131985 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061755305 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07001891 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063715194 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061883623 seconds)
  done (took 4.543841315 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075452509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11153044 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068294149 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091541084 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077246389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069756099 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068480087 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093305811 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064108383 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064697733 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078575102 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07823434 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065982279 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067446109 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068264198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066236422 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066749907 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064950767 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069213714 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065372115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069403345 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070299618 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077126734 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077919919 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067227058 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065225193 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065394598 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067594106 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077452936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070467961 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067575092 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068517719 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077578989 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070791521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065291755 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065505313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078476865 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066234339 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065918385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064064406 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065219859 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067783773 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070339828 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078294578 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065951267 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0708434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065586705 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063178307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077390528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065557211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070583102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078795694 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066768075 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066169344 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067613423 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077231036 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065573657 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064702123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065829485 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076798638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063637781 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067191113 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078311042 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065607105 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069470956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078322877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070713206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067000646 seconds)
  done (took 6.285917616 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072983787 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094245811 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079985878 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080126774 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073704956 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073679301 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074105787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074002801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073985937 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07802926 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0740486 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114939855 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070394056 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075759407 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074002697 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073666711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073981805 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073934716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074023147 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0733919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07401951 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07991812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073995411 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079924002 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076924124 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069495659 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073670448 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073747157 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080497388 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07396805 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0771375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073869217 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073812495 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080395392 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077263539 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073642518 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063379371 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073645571 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074121688 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073824101 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069599653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080402083 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073886507 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069154327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073736157 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073505857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080028725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076991258 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075687512 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077840943 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07364265 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080831897 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073377926 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073809891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080133515 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083044788 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080160606 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080187358 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073600844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079991331 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080010965 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083019176 seconds)
  done (took 6.092068646 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078705834 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071107377 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08171494 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062242239 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064618073 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07288127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062322163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062416048 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07087212 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07131314 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073221051 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072736808 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075739357 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073180729 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072590337 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075710508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072595052 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072522598 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070782114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0725556 seconds)
  done (took 2.779526203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076521257 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082314527 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068175321 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072288873 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068154809 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072455114 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06741959 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068683659 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068835146 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068293979 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074461474 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07436494 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068653073 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072821437 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074043104 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072439029 seconds)
  done (took 2.48889263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084218045 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070678901 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078270342 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063808753 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067749655 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063306709 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063598051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062083518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062698924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076897562 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063487546 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075644077 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063953882 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062748773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063608072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069589868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063250186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06404045 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063531036 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077179586 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071534572 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065028846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068112479 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063806602 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069067738 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071329638 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065516526 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067596722 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06407287 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064022801 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069563897 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070865554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063375297 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06426561 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06283655 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063705574 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06375938 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064050686 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069734683 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063884746 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061858978 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068851957 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063731829 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064688476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063100927 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.082752702 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062940029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069989671 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06399901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069354029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063580331 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066511499 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064102271 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071908561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066580578 seconds)
  done (took 5.027390934 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078665193 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067412806 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061855599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061928742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067619525 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068560179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067642313 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067661089 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068583964 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062868099 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068723798 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067801192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068607892 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068174758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068417393 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067963557 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061947347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068272697 seconds)
  done (took 2.563394243 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073308406 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067017618 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071494456 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067081163 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067015088 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067138832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062512277 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062918336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062927924 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067227863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067336007 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067498724 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062543977 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066949453 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067237897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067526971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067378577 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062518139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06738225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062834517 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066612304 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062482579 seconds)
  done (took 2.798392699 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095920602 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083871294 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140903796 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079561283 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087060402 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072283059 seconds)
  done (took 1.902468905 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092720886 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098563629 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066975675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067305158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073250795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071135714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07111928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071224409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075707801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076362375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0712256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078006565 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075615514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077576199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073433367 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073671459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07123569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071416714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067466012 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080699465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071299252 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075803531 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071188436 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071108328 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071657003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078160985 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075681394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075935046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071293921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075741795 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073406786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071003062 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075981671 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076144351 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067769395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076069188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070714116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080616149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073213385 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077313701 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067671978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073453039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075476645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07465531 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075400872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070926562 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075168068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070874209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071341324 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085477733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073581476 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077212908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07317624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075861375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075247476 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082411461 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076286938 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077416566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073358194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075872587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077484769 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073574989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077580065 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075904924 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073289598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077159617 seconds)
  done (took 6.287191382 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105050093 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067813726 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071053409 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076177164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077019758 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071478277 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071083126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071147441 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071370413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06828881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106545626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071733443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077858357 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078702227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071820477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07138061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071583255 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077780527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068314374 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08285602 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071695172 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07756871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077978355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077614556 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075878804 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073545941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070951623 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071275012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071037587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071303995 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075012097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071842465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077874155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068281005 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077971465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071081676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071243412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07502121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071184783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073498972 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077802104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08098016 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071522101 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071154844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076184935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071611572 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070867316 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068276202 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07120418 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068125149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076276759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075659621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075900908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077505281 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070884844 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071334485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071245615 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071600312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071556563 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073538082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077617157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071333714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082791707 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071160734 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071202082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077860839 seconds)
  done (took 6.28379421 seconds)
done (took 129.104420857 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208728654 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184250155 seconds)
  done (took 1.726920194 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076369882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104653632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083326095 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134698213 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071488821 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105550098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105164714 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08417348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071401454 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071668265 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071469545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073961691 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13715725 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071793986 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07186254 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074573124 seconds)
  done (took 2.759985216 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10485976 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216528653 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109122175 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069275865 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104767791 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077343453 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069580897 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08556609 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076222345 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071416482 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077560669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076220502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071023072 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076060514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076539667 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077967438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071030139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077579445 seconds)
  done (took 2.944407353 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1036768 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095342341 seconds)
  done (took 1.556321523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175698386 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133671677 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202714906 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347199728 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15288495 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.424445681 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138974685 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138679505 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113680386 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135400928 seconds)
  done (took 3.316486644 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104345094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198997299 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299096077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121283825 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076485629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11220661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123317224 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082086034 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081588131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081648405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08142532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079095305 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100983445 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077062013 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076050325 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078665236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10433291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075225413 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076499936 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077149192 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104304267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069826848 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076751756 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075571759 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079036709 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078703862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071164264 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070068292 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07658884 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076139439 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080025129 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109094704 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079134796 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105675719 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074364531 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106958741 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07886348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074666382 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076429057 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075071535 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078080203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077855452 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07945186 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07820165 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071224632 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078496186 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071464622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070161069 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080991049 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071518242 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080789272 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079248802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105892073 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071239579 seconds)
  done (took 6.221561001 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109049241 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107150822 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071561713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113185309 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104334933 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071337553 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106539538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099932148 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108548867 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071502265 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069610902 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071915937 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080223006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081954502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116959078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108419683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073317773 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07099788 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108921246 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107935212 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069960657 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102104942 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098607302 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107797043 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069663119 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071812059 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070030574 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071275961 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076968344 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078045757 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070289723 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079477374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083997177 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077540652 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06903777 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06993646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070021322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079266725 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079199025 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079041176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077254903 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06919008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06970103 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070311476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070717117 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068835541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077923129 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07937206 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077530897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069600988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070931687 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069435329 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070418639 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078900806 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076584562 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079492555 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078636534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069559089 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069069465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072116661 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079411071 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078952619 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078307191 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07053256 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079298529 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069993518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082452518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083210606 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069673477 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070736694 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069224479 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069845542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070743199 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076940498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077121002 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070922999 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069914943 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06942029 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078897232 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07750007 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069693182 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07654717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068217917 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069483429 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070592661 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070528651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07686217 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078281131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071052023 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069421722 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06952259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069382369 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06843233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076275998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078768877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078785602 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.0776259 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070291665 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077971037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077675646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071054804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077995721 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069326379 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070749382 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07025004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077531371 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076570265 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07907863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069575557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06903156 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076869695 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079450567 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.199963702 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077632577 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079861745 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077854188 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069342923 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080209649 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069871464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079765906 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070230779 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079938518 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070337315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078614149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070475741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069815261 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069981288 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077924621 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070968837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069494359 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070542423 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070000415 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078160409 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08149631 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071860107 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077120932 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077782466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071236264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077745944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070320907 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078558034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070205711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070590933 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069287552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080840067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070239371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069538435 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070009436 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07973399 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069748683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079149297 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076553717 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068948348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081065568 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079694427 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077793612 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080085078 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071340538 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069956056 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069677123 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070491398 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077563093 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079291286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07208713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070305127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077484391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079371198 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069179131 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077550712 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077430115 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07822291 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070048281 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070305796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07995305 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079796823 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077330778 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077714117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078072718 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070056412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07713069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077642803 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069804393 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083122232 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069659928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081838434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078150986 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07630463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077979033 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079423901 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079311483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079668523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082551487 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069371402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069439288 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078064341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069837061 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070476849 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077699393 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07061676 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070680697 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082556539 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070295179 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079404437 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06902956 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077764565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068607402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070614611 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082124854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069576933 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070642246 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077694501 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072120788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076785383 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079174916 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077240389 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069402552 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070547066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078565188 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078399528 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069164049 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069377023 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070869722 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076876842 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076302748 seconds)
  done (took 18.620181057 seconds)
done (took 38.515467786 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210204577 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156137279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188524935 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116223242 seconds)
  done (took 2.127161899 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108093926 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098807172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087874655 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066822521 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094592206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06616285 seconds)
  done (took 1.909653592 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298104015 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203914547 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182833531 seconds)
  done (took 2.071314874 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209845455 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197811971 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463243203 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285965542 seconds)
  done (took 2.639075643 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140882097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082613119 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064847971 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083102164 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125197699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150269014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093732047 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118438166 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075981012 seconds)
  done (took 2.376037928 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149095579 seconds)
done (took 12.682831472 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11406576 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.275786266 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.208471032 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205507159 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218552938 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073307116 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149658048 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070155521 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.190771176 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217525234 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066991332 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198560288 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118482239 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07674823 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172234141 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138631865 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.336547027 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12195644 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199377082 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085295738 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075739642 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078509611 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212215764 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074951281 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082417037 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179577735 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085151151 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158409785 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076973497 seconds)
    (30/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087688299 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104656946 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.177292119 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.212177247 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.175067941 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073214222 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179341685 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224093731 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074518129 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.125033519 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106245886 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.242553437 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065410912 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066984003 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087992126 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074223985 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102846513 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.161274973 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139654839 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204016287 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065195349 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171201529 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.067151826 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066508064 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119506293 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192386896 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091939669 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083556982 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07813355 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.198659416 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065722999 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074470468 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085909998 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132596601 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169322679 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074040312 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065002773 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.174692237 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077723776 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066388908 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.127052948 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06757192 seconds)
    (72/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192712404 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087650138 seconds)
    (74/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.167012334 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088809834 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134125918 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065728551 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.180369245 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077040486 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.232936046 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.225666235 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.128656475 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074791819 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085407753 seconds)
    (85/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139985032 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122997695 seconds)
    (87/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178318324 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077368239 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069526618 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066410081 seconds)
    (91/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066721826 seconds)
    (92/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09780995 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100341738 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.159111162 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087739605 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068597061 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091516029 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06761719 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072753175 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17901796 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079335506 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168745928 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146752543 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130233688 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069277292 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067614835 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075839219 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066416567 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075500534 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077731928 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107664807 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074936966 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067214566 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077303402 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075167672 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073391076 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067189265 seconds)
    (118/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079428443 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067889147 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077077056 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.126538886 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073819349 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076783516 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076069469 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19717315 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180707808 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066383443 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088756505 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076123457 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125796229 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070500448 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088553677 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077229665 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074631041 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074974576 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092550541 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074534034 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089067434 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123626499 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074615087 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074042091 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066178452 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071398576 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177734212 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073758307 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06619667 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066455724 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073775066 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093224851 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170981135 seconds)
    (151/309) benchmarking ("sort", Float64, false)...
    done (took 0.131878139 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124550246 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065968569 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170552727 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069733025 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067177444 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072642099 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065369267 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.229836754 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065908197 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066086262 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.216654551 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067995085 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074640975 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167316918 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077860711 seconds)
    (167/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.194145187 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065337316 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141077335 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117907097 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137025543 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065958887 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066296738 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069666311 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070156874 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135314339 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078900346 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127683376 seconds)
    (179/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078992594 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069277986 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173395447 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066012974 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066290588 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066028615 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065760538 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065365163 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112820614 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066607522 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07521378 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066402957 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.404579723 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068281432 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072335848 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078177838 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067163432 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13446519 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09328748 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 0.133312347 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075139782 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079796908 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075331179 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072800372 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101285949 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066617885 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073790306 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073166189 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066699967 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066963596 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066444022 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073190396 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074769268 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067075865 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066615437 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075263366 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066569065 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072228753 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075060666 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066172856 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07755208 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067748734 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136597054 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067073256 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093872935 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137323113 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17362909 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069476025 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081629268 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074877186 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066388901 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076222663 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066585434 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068752988 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067015042 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066734421 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091152349 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067594123 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068841453 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074125478 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069188163 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06841407 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06697815 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069606614 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067121005 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075173528 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121033837 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06728655 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065690281 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 0.170209266 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067245527 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074495498 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087764395 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08886576 seconds)
    (253/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128922147 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180971461 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086831346 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065662257 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067176613 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091004689 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069665388 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067117243 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07957545 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066007428 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066435171 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066300591 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066698997 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075623783 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066781081 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072893676 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067239716 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073028601 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066181242 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079009679 seconds)
    (273/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078146456 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118179093 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079164988 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086639209 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069416626 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090852173 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06641772 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068750751 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121725648 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06897763 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066038552 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180165162 seconds)
    (285/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078402725 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065902669 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090557354 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067428162 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072338321 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074679195 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067376171 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079864337 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06547447 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066125681 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142847757 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.129492443 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066315892 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073146656 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080401427 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093175034 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070372903 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078731975 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065873499 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068381842 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108621376 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065353978 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068247276 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068319356 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074012902 seconds)
  done (took 33.090793038 seconds)
done (took 34.490624432 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086325621 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097810356 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073119078 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093010901 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080985364 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095144883 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073784871 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078939592 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081281094 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080178218 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079124075 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072386849 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075393984 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075288284 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073637676 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097464627 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08037369 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074326888 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074937439 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066240929 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074384363 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066293909 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066092196 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07254815 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077852198 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074110888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076251205 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075366818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066491958 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066508764 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070999135 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074825007 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066122875 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078790499 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075580335 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074826695 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076568267 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079114054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066428718 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067061058 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076409889 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066894397 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074362251 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072593623 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072785063 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075006159 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076770556 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081183938 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098903546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070802811 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07651673 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077024651 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078139236 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07160031 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071394947 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074411009 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072306101 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097124258 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074650337 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070924741 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076176036 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075445085 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072508224 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074653697 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074493452 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076504133 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078486082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073108894 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076531218 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073591568 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066406139 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074437258 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070945892 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066353183 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079968474 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078849399 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065795565 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070814212 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074053798 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07511096 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066794785 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070691732 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065611789 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070833175 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070471896 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07202276 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071227101 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073716106 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066056666 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074763357 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073531472 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073949444 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066147825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079322063 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066324781 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072464756 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06672297 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066422436 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066065628 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071333132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066084113 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070341381 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074832005 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065333359 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070553585 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079195748 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065751306 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073196139 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065788752 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066062033 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077526571 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076637864 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066243111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070635833 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06570899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071519034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066271795 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066093128 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066016853 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065916597 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070720741 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066154354 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070188354 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071182361 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078194789 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065402057 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070751812 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070184648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066381171 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072512519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066133239 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06591883 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065446395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079248115 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070212155 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06556164 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070794288 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070095298 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07350269 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064885833 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074239521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071263547 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070012705 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071751707 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06460287 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076095038 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069903387 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069474154 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06471268 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065184783 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063963948 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065091546 seconds)
done (took 12.58996976 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069265618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116676453 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093264549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093348113 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082876551 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067258324 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074374923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091749984 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068178582 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096292931 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088375198 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088201976 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109378472 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066153832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066849398 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06798333 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068205299 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078174216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094406863 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088917799 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106427468 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066561982 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086205562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087267382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083707276 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08815876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067623499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06791844 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069507071 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089853152 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091900787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06984031 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068104683 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090471872 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084934411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080158279 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067893023 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075569216 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067711227 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067739252 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068361068 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087381042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075474233 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075210979 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067883867 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074687627 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068366198 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082965903 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088150895 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075895012 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082119294 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091027853 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070649881 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083139902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066473242 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082448875 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076432627 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067510591 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067490404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072105752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067652635 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06959302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078614749 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076315046 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072165682 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081735546 seconds)
  done (took 6.664593445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084327427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096781226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083505222 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084895271 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066333683 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067129084 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067335068 seconds)
  done (took 2.035632416 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067529358 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087155804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090095263 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090300983 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083690679 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091279402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075139247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067601464 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095830462 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066665049 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087210986 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097863841 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07111368 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079249391 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092350638 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067380342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091686704 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06758045 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068057764 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091440568 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072106405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094409332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078630212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067450201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080039764 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067727141 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09969968 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074879499 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068784862 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068487752 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068595432 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094190209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07966296 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081417939 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068898756 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082497701 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081217736 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070830323 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078253642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076594249 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080464858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068817975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06608442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069039659 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070691683 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07876256 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066149597 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068779018 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068313952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086496438 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066271524 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079360243 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070587749 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073170832 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073507853 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072225995 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075395456 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068865602 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086829994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068481324 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084302096 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083473958 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080563652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084057054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067586253 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079526338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08073627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068177836 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069292592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069105299 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084288052 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070725972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069079946 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078932912 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067118008 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091708555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091309501 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066792973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080584509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06768145 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068870934 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078979291 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091101434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07280702 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068384078 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071563323 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070277107 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070407772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066430593 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071564455 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068539727 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072698654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068666084 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07067402 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069772219 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083862569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066737661 seconds)
  done (took 8.877579334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070297175 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068751584 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069151074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06849384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068865969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068607649 seconds)
  done (took 1.929993922 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091969611 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068430979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080916204 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068830506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103701992 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083741355 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083559756 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07779723 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081681064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079755039 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084202636 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08684935 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087998518 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070568691 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08348072 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069978941 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083967446 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072507826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079479588 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070906719 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08115953 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070993213 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070911652 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088163187 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072130921 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070234134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07832594 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08011365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079388604 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078146391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070523786 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071949205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076108455 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077802538 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084062735 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076162695 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070964364 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074618929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071256472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07187483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08648734 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07090762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071201129 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074792437 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077742728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076507088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075264963 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076758972 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084186745 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074595951 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074846112 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069153989 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072079415 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074657447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076211257 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078014328 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074818382 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083876616 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070455198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076246974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068776174 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071809263 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077270608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071538402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075650041 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074648318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076482017 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070798983 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071286341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068811937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074894874 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069035272 seconds)
  done (took 6.999301415 seconds)
done (took 28.016226616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.514433213 seconds)
  done (took 1.983029647 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621548606 seconds)
  done (took 2.11920196 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.554618327 seconds)
  done (took 8.045389284 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403496265 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476046611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.745817952 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135248073 seconds)
  done (took 3.291493288 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702139422 seconds)
  done (took 2.208798054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236824183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227820117 seconds)
  done (took 1.978248436 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349243936 seconds)
  done (took 1.845748841 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.054542592 seconds)
  done (took 2.553616159 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239561965 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161076697 seconds)
  done (took 1.901643455 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443320456 seconds)
  done (took 1.945386065 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.206433061 seconds)
  done (took 5.710236223 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245569669 seconds)
  done (took 1.780117594 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236077243 seconds)
  done (took 1.739624999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751472638 seconds)
  done (took 3.254108474 seconds)
done (took 41.866361527 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083811679 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086504039 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085735242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081710559 seconds)
  done (took 1.818959351 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075888357 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071660485 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07514373 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071006482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075025064 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071349546 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072824068 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074113887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071593858 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071908468 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071661049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071525897 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07442368 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073082568 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070378292 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074994809 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075380823 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071607374 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07444123 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071447491 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070119945 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074276822 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074532064 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070743277 seconds)
  done (took 3.250745503 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079923676 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074153672 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076078957 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072572153 seconds)
  done (took 1.812216233 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077823515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089500741 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08744367 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078390598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089945986 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085229221 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067895616 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067776149 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069452762 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078202647 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06690437 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094218318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087168595 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077574342 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080267457 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064697199 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066520483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086531301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078890601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078573908 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069161361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078050332 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066989157 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088297015 seconds)
  done (took 3.380031755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08509288 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067291119 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084328994 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093169313 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094555102 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067369137 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082717226 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094783855 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139432618 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067315107 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073340247 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067161535 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106399038 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067120924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083654835 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110370026 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114332467 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070870659 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100109802 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067339689 seconds)
  done (took 3.251817685 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084380666 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070392175 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07174926 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066295829 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077421979 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074444636 seconds)
  done (took 1.965167563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069683169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068603906 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068758733 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068696275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072942299 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070854007 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066842356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069221159 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069133195 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06847081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068201433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067566663 seconds)
  done (took 2.346434597 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21241927 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071019036 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073766338 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066995091 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073881828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068104863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083399263 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070528457 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086567337 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067862395 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067914374 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070003705 seconds)
  done (took 2.530496375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19302527 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074928644 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22467158 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144589938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103583097 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110555062 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110301433 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108938828 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134751417 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098236096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154887113 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16129789 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104181939 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127661405 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088292658 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121195768 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14570045 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154529883 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100545751 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155557239 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136263847 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120423665 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141379762 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097537694 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101877072 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117072841 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07250256 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077709327 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160230543 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124224934 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137334666 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105346086 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090976394 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171804656 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158105948 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13343992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140925513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082128474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118983688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.12899314 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194926839 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088177509 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152230838 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10360555 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07846803 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123057842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252930376 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11683401 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102797681 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08879548 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134282036 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174065894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128666814 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084704156 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115401164 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105839373 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109834224 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112536476 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170972699 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119141984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070264306 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105044647 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143048443 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125436223 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106179611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119748562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091461824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12663344 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149741813 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125862821 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134842913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11385596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085350363 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114237769 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131863889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122185266 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160669386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117210303 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072060488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11683349 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096281995 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07870749 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144126443 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074421502 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165294094 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096872073 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.12157757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123981956 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105642533 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105603866 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153445806 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134909334 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101338696 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084478458 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099824055 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115476617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138500894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084826117 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103073057 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253981558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07910736 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129081022 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074848481 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115535005 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09488889 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116979954 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119984943 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079096169 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116961984 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100860869 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099310511 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123373734 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149583167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085565836 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079154667 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156574574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11475483 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101606542 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136374068 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149613653 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118765263 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098041609 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140269748 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166694522 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08905803 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153681066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100598066 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082146404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103326944 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116305599 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107691697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120110803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079480647 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113363719 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156013094 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073623304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094473046 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125369357 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080183314 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079216662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1025032 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100814156 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094467471 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099066011 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102163195 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131106012 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11544677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101386133 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119553368 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095109455 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157650977 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086148194 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098979553 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102010622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071894958 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127929566 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144603009 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222084608 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152340886 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118074023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110300755 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113467485 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082766394 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13124246 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077777531 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071767001 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134388139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108356856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105966313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144196196 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108714716 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120651711 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113289356 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126790787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123533405 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122927944 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104129778 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087147137 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110260721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1257153 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072885941 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091156174 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081334338 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101301424 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093408547 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083232059 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134445357 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11781236 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105780212 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110566375 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09513423 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14227024 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077628477 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120181319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116493817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093513149 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145876103 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144074759 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12388419 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09839088 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130530583 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07226176 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073858152 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08714914 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119031716 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082327009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082044638 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109477726 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14172427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121229807 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130420936 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117396141 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113356317 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148303921 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071491117 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115200894 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281801762 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114128279 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102650694 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089533442 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095958982 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134631014 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100424385 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170031547 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108076039 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117524538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147452555 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097964651 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078171677 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101425303 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126261082 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098821109 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136790935 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096633174 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084803525 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104260376 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076832714 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095204534 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12205725 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11467042 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13125143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109202977 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12509456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076929538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109451585 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116313316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118100378 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082447831 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113286156 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159458112 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09472667 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112460185 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144319028 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077739078 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13345899 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163490094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136564615 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082414047 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101334562 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114156687 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121119897 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113455578 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131919392 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100882849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129593208 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106517596 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085331671 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084375521 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093339968 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100767279 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109581661 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.248754471 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109248325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09407698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12527067 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100544984 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106879777 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112682819 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099309167 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094717362 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094504515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162937929 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110748352 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159090292 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096326477 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136432195 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152459359 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074072824 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077301328 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079168401 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13240867 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083253036 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122320353 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107544703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110790714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116898709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132787628 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09442586 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070594167 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105757742 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129113834 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116987666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094606207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101411038 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151589109 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115378323 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077639445 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109475569 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111014593 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101628942 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166771197 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080043528 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104828149 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075547032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078586022 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121651342 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144376121 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084729921 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100793005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113689952 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107506652 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121531274 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095370956 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106041443 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123586089 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139762133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121213287 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087998021 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107169843 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270408722 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14641859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101317211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098262582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165949934 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142827623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15080922 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085903014 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109507414 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109347443 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10429476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128308187 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082687339 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151729153 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080039784 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128752841 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097930199 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087796406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122736185 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10791854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086737726 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138924701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111102791 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081760922 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079060282 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1089741 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112789966 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10044601 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074334519 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133473482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072924397 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127389628 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160041189 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078911155 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1012918 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093828597 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080978786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100808846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09931812 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084683428 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097096193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161844346 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086280608 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139961553 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127498676 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107207836 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131145978 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100813497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641012519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078311084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142486028 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111763722 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167703928 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095698027 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259620901 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106406219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116254103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135813215 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099139725 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.1773341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123665457 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110462435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077613307 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09852967 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099759426 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087450736 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10366996 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107671644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110697798 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092483096 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110981404 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116615643 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.0808955 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093894697 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145870285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111487482 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136699043 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133412702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083069099 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1138023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12991437 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07905689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115559852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148099642 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103427273 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098270168 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083007695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098742107 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162809145 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07225017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151590109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113883885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10642858 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108855071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107837169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123317613 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101228384 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114527532 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091482948 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106141516 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107846331 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082261768 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077854531 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100977116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107320262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094919345 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129481094 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097419296 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142382084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071183256 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095506081 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109090043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284905432 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163489137 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104633151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082672477 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115019888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114267633 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10835296 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11357202 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080814839 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080344695 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080422734 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099238226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12175221 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10746076 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112311874 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106235677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1525864 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082873164 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223681081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094297251 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100803213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088392573 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079215251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094102659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09476048 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101758041 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106365568 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163548762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092732587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088957827 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090774973 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073772141 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082024279 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121410706 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107619811 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111532996 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101763658 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080981843 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101311244 seconds)
  done (took 57.092797689 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119313554 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.095800576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098007145 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143626696 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12200434 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200193664 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151125919 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19028759 seconds)
  done (took 2.741401283 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069064985 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095035879 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103283098 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084029457 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068089955 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068988185 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230490728 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082039805 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067916012 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091814235 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078169846 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069804542 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.454979544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067114972 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068400362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077371129 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068404733 seconds)
  done (took 3.442989988 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37861579 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604392975 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358628557 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076971112 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.960712274 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090326893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.224252189 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138624175 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082623757 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534399373 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368612867 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131810968 seconds)
  done (took 18.558739188 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083501233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076803777 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091626956 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091093547 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079223114 seconds)
  done (took 2.029222738 seconds)
done (took 105.772901534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082063166 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.208841758 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069115344 seconds)
  done (took 1.912156492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093067417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089983024 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090333999 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087680691 seconds)
  done (took 1.970163079 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075455681 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077647056 seconds)
  done (took 1.760477997 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233912442 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176381212 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095794176 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084076132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081581606 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081554747 seconds)
  done (took 1.857727009 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073472847 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07392544 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074615878 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078142209 seconds)
  done (took 1.90607911 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071808051 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067538315 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070478623 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073206613 seconds)
  done (took 1.892009647 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085410368 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08569176 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080567426 seconds)
  done (took 1.86020739 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101874297 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096030776 seconds)
  done (took 1.806698611 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082044471 seconds)
  done (took 1.691942562 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092470574 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101692452 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132641315 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115018984 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143286547 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118439021 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084900581 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089251648 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079046176 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086734785 seconds)
  done (took 2.65250281 seconds)
done (took 21.502803633 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080405751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370609221 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361279746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091662776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672029127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358106843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989405455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093916707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109558893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070212774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088269425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650757141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979608595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324876358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96851396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331393351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654375583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07012688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069115724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070675126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97518455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070569302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071042211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071089508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652547148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37578384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071760233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332217432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069915197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074248616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359708939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071690924 seconds)
  done (took 16.191217341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071892351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12363686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074138955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086156436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073114361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071555637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073185498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069824345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119868386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070200712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089122904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069612406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074403993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071515435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090637167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070330867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073021188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071070751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070752989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071824734 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090348491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070218547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071396525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071399649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071258877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084270482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07220104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070480437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070679798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075210998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076162133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07212406 seconds)
  done (took 4.109105415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117876279 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127427769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075063732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10801673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11965171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072137883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14863083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095031629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122375149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071588449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088350947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069972282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105475915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071710171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092002887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070667695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073667671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071209969 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070637218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071401906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09088892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070059033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071165188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070981991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071727054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08615072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07237383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070556598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070788992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075306156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076697663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072867527 seconds)
  done (took 4.371484703 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07253732 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073966216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082374961 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082632917 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06925197 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071225115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073033787 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069540334 seconds)
  done (took 2.22636174 seconds)
done (took 28.514821318 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079265603 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068999635 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072672091 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088165331 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074940359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080409499 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066379743 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075912609 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073292384 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072834273 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074824771 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070705283 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071625739 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066591858 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073622343 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067684996 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082425196 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07245509 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082208127 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082181597 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070998241 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074588578 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076060863 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081688875 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082343614 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081756419 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077632016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073602183 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069402145 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071967842 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071422808 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079311389 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082383467 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082561443 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068806174 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068270041 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072860177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07006268 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082918906 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07747696 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070131301 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07750958 seconds)
  done (took 4.764504985 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085804267 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089733691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082886413 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080523556 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091592002 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083593455 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08751437 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078320956 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079032189 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087090407 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075367242 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082260456 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079486882 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073840499 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078236416 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075602154 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080586882 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074533338 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078236831 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078841655 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087831549 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073655255 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088489587 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080048049 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07602822 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080983663 seconds)
  done (took 3.746245801 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07513093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087312049 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093518326 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144837676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112301094 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08219577 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082395102 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093361006 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097123892 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069388839 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073640388 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093754561 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094366728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075344003 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111615576 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085681168 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084609067 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071757816 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076577313 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098205419 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090234306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086160135 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094869499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085204544 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06876927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071153024 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073304993 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084799761 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071609378 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079807533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071469744 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072665658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070066497 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079328537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071683684 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068336652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093412209 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080534605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081474203 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069505012 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078844939 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069980445 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09420187 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129107688 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068042932 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072996442 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072364893 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080223727 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068460406 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096357968 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080570184 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069123205 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069736629 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068096093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068156462 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071613785 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070562501 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07141877 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079331922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075472126 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090694011 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074125323 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08635009 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068384536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079428426 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068312214 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07019182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067868757 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097135836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070451779 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112813914 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069899265 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067932303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080292785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079752161 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074791591 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068907741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086003896 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080371984 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073050392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077222427 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072029258 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072549689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099124889 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069801349 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068496532 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067564037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075014494 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071898863 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069591692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080980416 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068039126 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07285638 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086874764 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068967424 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070098398 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072390965 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071742564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068564936 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079525938 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073370325 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070195585 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079440256 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07002647 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072852125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082345069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075790577 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067695842 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070938908 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072599838 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070616244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070344834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072641138 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071115516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076126014 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075858357 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074595927 seconds)
  done (took 10.858024549 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165247939 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157507508 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071818495 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150049111 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078016137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081703371 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153832845 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096377982 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069404998 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071480165 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07026105 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111433851 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10712183 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117508792 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082445761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070261969 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095083524 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115926914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154436202 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148526162 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092564974 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077629746 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07230419 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071024403 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07164041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078808621 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086318444 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078765556 seconds)
  done (took 4.466399833 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079563375 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105008044 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074229325 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091936488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089173483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069987902 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072196594 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071144378 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085994705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079095557 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069838798 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075851332 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07376725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073075716 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070844978 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076641842 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076580263 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069008651 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073489906 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075325316 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079662943 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095226675 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074953821 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069564027 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072573649 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069614899 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077849714 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082350364 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070067925 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105788559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067327517 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074398971 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083756488 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070217968 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069226025 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069944394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069762354 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06974706 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070907401 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068113795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068694274 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073549275 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068600001 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078361176 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082551881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076158167 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071735113 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072698168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072574019 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067096527 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072858837 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072448632 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072422824 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076952351 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073877566 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072732412 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070443125 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096157448 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075952198 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068938846 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068809441 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068506764 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07181972 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079125198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084747981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072074626 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068185972 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069816997 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082310433 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082317182 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069221515 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074180645 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067261433 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071437291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072261985 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072071603 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070331096 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068459263 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069462533 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069607236 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071187752 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069245449 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068576623 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072553648 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068299749 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068906732 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070334167 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071371433 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081127648 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071959104 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073461898 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070529388 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068389893 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072993355 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074961773 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072802852 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080403403 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08147798 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070235975 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068121975 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08365385 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07243306 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069048834 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075635119 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074314722 seconds)
  done (took 9.481715838 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091816046 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06994517 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08612868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093271494 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079480722 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075287768 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079796486 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069422103 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086926815 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074313047 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077021145 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068683504 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080654216 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079503891 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070540638 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080454867 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072933015 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087148325 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084180905 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068400878 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078767383 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08234746 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081637524 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083628497 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083864657 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084508216 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081935976 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079522049 seconds)
  done (took 3.911194678 seconds)
done (took 38.852872062 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.718594365 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.869537654 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.698059016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.878641375 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.934863653 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.713656055 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.889916606 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.695663228 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.985011654 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.739320857 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022441875 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.169673012 seconds)
done (took 65.089322128 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.720173523 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852863328 seconds)
    (2/2) benchmarking "String"...
    done (took 1.951928895 seconds)
  done (took 5.441758087 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.95427579 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.378311252 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.930405996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.695633548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.702767096 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.950092042 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.46097269 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.155477176 seconds)
  done (took 29.911511523 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.898627898 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.923383319 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.398706755 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.440005435 seconds)
  done (took 15.342533158 seconds)
done (took 62.099637394 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.722048343 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.740215602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.700890433 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.695548727 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787514714 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.716140278 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.03908719 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.709612531 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.697986029 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.701970527 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.700270959 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.119451782 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707009109 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.119227367 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.698561237 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.699178019 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.700130716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.222447386 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.85113543 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712846256 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.719478517 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.720871378 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.699216357 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.708582142 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.741373653 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.699565787 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.116970058 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.707785543 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.549973829 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.700199888 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.758107009 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.711708932 seconds)
  done (took 201.511978746 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.69674493 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.65315917 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.721589399 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.725215077 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.119763307 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.896137271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.802056682 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.17773012 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.702115579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.717721545 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.795164565 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.697303796 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.812543652 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.645295543 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.734801181 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.791033337 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.902229456 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.838033189 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.736727622 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.844008525 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.702901694 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.612330122 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.584548953 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.797542283 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705683833 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.703455599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.713524014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.711047956 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.886799675 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.869958197 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.712013895 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.735530007 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.900471459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.567608939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.703385709 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727956029 seconds)
  done (took 166.283401194 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.877725224 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.699544631 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.698298308 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.699221842 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.704298281 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.698993551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.821287681 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824815368 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.381828129 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.353622515 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75378844 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.698479387 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455626517 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.699926851 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765322178 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.71226062 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.700598034 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.713990063 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.726694537 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699268093 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.700235714 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824265754 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.713790335 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.698905536 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.707909132 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.699434929 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704459986 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.08972417 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.700319674 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.700225922 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.189449354 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702155428 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706101832 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.942346149 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.703407887 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701777805 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530398135 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.452574978 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7814553 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703393462 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706738755 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.701003277 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.917751413 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.70087157 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.702018586 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.700877533 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.701109665 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.820164927 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.703174959 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.823397548 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.702473825 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178975027 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.699424513 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702102049 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.701034573 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.050524137 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.703083512 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.293907977 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.704683811 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.704232894 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.701765902 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70285351 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.707017377 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.928986563 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.773563448 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.704433959 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.702759158 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.707439785 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.702564669 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.876180635 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704550852 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.305618767 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.716411233 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.933857954 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828869623 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705797716 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768458339 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793183769 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.702343337 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.701924582 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703099038 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.701699514 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782528377 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.702063978 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.786913083 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.712648116 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.703508125 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75470992 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770672649 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.703224458 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535943137 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.704422476 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.701909281 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944679483 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766580468 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.702288341 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.703209729 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703896659 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.784306449 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826945385 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.419188395 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.704991779 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.021733465 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.776123391 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70463274 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.829576813 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.705358897 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784478382 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711183422 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.705841644 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.736745474 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.704281555 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.714305927 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.703727607 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.075173286 seconds)
  done (took 392.997093925 seconds)
done (took 764.365340573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.293450236 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.266037792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.360678692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.284690352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.259981637 seconds)
  done (took 13.108350893 seconds)
done (took 14.750626401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.782024189 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.787933836 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723287314 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.784747488 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719124259 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783721605 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.768703701 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.728303998 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.753286681 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.727775545 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.754524631 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.728488429 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710221025 seconds)
  done (took 24.395553714 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.931199987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927072826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768397352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.926439875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745344309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.930047075 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859732887 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.853303143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849601492 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715303913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.714534695 seconds)
  done (took 21.866102942 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.932089563 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.937130542 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774999482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.936659001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746831977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93272083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859653427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848896554 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.860419853 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716455656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.713215519 seconds)
  done (took 21.903238874 seconds)
done (took 69.807357953 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.708086731 seconds)
  done (took 3.353457426 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.727654744 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.8893314 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.70910787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.709852117 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.708780274 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.708536571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.709436758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.708858989 seconds)
  done (took 15.517792251 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.707912949 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.709138691 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.709047817 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.708141568 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.709400166 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.71063693 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.709125027 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.707813677 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.70859308 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.709237342 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.708646635 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.70862584 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.708815371 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.709769847 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.709091349 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.709532308 seconds)
  done (took 28.990531562 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.710926468 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.709705458 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.708521364 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.708940455 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.70949919 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.709672252 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.710843649 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.708359725 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.709212432 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.708832913 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.709741099 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.709226369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.709968281 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.709509791 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.708316586 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.710118656 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.709040102 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.709648795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.714499698 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.709928028 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.709755952 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.709959778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.709648236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.710058464 seconds)
  done (took 42.682909224 seconds)
done (took 92.189142477 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.407892654 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.31207237 seconds)
  done (took 9.36783434 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.714664623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.711111053 seconds)
  done (took 5.137884132 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.711169671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.710896725 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.711158173 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.710513476 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.709695605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.711035541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.710339818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.712074134 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.711118139 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.71300145 seconds)
  done (took 18.759318005 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.712014164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.711666812 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.712402074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.711708198 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.710921357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.710729845 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.710163285 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.711446657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.710764047 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.711594216 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.710725103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.711765996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.710590539 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.712105433 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.710510063 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.710950176 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.710989771 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.712131332 seconds)
  done (took 32.452894026 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.712382093 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.712117756 seconds)
  done (took 5.072682716 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.711491184 seconds)
    (2/7) benchmarking "second"...
    done (took 1.711953412 seconds)
    (3/7) benchmarking "month"...
    done (took 1.711563803 seconds)
    (4/7) benchmarking "year"...
    done (took 1.712190219 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.711814634 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.711814969 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.712450353 seconds)
  done (took 13.63276036 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.713364413 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.864569029 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.931184695 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.353829661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.713900723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.715388214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.650933628 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.715455351 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.717177594 seconds)
  done (took 19.024359919 seconds)
done (took 105.09428636 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.541367334 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.71228046 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.017028848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.762015859 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.736228595 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.053173089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743584627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.992110689 seconds)
done (took 42.207469141 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.731748794 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.460113938 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.711912174 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.822775972 seconds)
  done (took 15.645576929 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.711477792 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.106070973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.744960418 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.601596648 seconds)
  done (took 21.819272334 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.075008386 seconds)
    (2/2) benchmarking "read"...
    done (took 2.062673378 seconds)
  done (took 5.792194412 seconds)
done (took 51.639300466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713701487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.7141021 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.714108712 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.713881527 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.714382718 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.713697073 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.714436132 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.713494463 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.71534289 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.714844335 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.714704039 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.713725519 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713662437 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71612393 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714679451 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713484122 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.715712729 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714489527 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.714365439 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714722223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713848847 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.715652896 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.714777232 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.714944634 seconds)
  done (took 42.798368484 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.71407853 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.714751298 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.716265821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.715948807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.714806978 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.715428626 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.714490014 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.716959868 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.715190382 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.715663912 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7149795 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.715154157 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.716211215 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.715092205 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715518424 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.716560733 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.715541528 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716519145 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715724335 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.716159424 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.715650842 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716369534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.716075311 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716336186 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.715943817 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717301537 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716014753 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.715488926 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716448769 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.716904447 seconds)
  done (took 53.126163411 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.716160523 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.716660009 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.71622254 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.7159357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.716301074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.717309959 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.716529418 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.71699549 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.717672934 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.718956189 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.718211646 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.716463077 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.717416105 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.717214584 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.71827082 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.716819843 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.717974904 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.716221584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.717788493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717204851 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.718316503 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.718188393 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.717183446 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.717288507 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.717536106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.717734115 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.717503439 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.717050698 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.718584448 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.718238073 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.718381797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.718931427 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.718007736 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.718034931 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.718361739 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.718017768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.718108914 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.719134634 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.718434018 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.718970267 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.718383771 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.718074058 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.719300202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.719293761 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.719145085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.718048739 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.719480699 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.717878981 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.718857284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.718724772 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.719512142 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.71842797 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.718483506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.720134024 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.719445485 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.719838703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.719337238 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.719796007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.718717475 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.718877924 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.719562154 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.719237902 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.719993978 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.719868151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.719822002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.719820174 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.719683144 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.720809331 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.720009624 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.721032636 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.720363149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.720974098 seconds)
  done (took 125.381326238 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.720354806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720812731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720570073 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.720946419 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.721081022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721087855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.721852672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72068438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721863827 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720426506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720732725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.722397091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721507481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721117948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721618849 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.720677701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.720725158 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720345589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.720332194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.721036017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721076748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.722027378 seconds)
  done (took 39.520867921 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721864302 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.720437095 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.721516355 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720570524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720999865 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721260762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.721537716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.722228176 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721653226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722081199 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72067862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720961962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721014291 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722475273 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721106319 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.721551823 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721517719 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721350021 seconds)
  done (took 32.642624554 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.723112268 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.722142533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.721741876 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.722082759 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.722410455 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.720575019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72355101 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.722302477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.722540094 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.722023998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.72295333 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722008424 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.722273132 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722687375 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722682226 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.722795048 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.722652743 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723004964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722904376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722846249 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.722055036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722777051 seconds)
  done (took 39.553714849 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724214494 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723735136 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.722876543 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.722357566 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.722891005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.722608959 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.724033911 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.722384702 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.722603589 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.723040643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723095881 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.723390994 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.722776924 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724207197 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.722878051 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723425962 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.723225796 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72448219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722610962 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722711033 seconds)
  done (took 36.124513044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725256466 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724220084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72431077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724696462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724968101 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.727344026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724674269 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.724906579 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726150525 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724472411 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7252589 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724151472 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724669664 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725215927 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725470286 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72492518 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725065277 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725089144 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.724509737 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723976696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724500556 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726398027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72473146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725236852 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725416952 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726088345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725636678 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725203808 seconds)
  done (took 49.964404071 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.726506628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725106189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.725135116 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.725993129 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.726589559 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.724895346 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.725751571 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.7252496 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724801442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.725358248 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.725410232 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.727439298 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.725474024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.727036492 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.725593316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.725337687 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725683593 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.72568616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725671979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724748294 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.726099457 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724963405 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.726329307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725726916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725081149 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.726629412 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726180503 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725816751 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727244242 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.725564979 seconds)
  done (took 53.436657972 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.747984462 seconds)
    (2/2) benchmarking "in"...
    done (took 1.747031301 seconds)
  done (took 5.158322439 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.726866192 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726827601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.726699844 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.727446025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.726293419 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.72680219 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726418392 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72536292 seconds)
  done (took 15.475656767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.728054593 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.727434144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.727995296 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.727539475 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.728137284 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.727759697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735478666 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.729055415 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.730502557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.728985003 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.735742166 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.735674654 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.730530028 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730101454 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.730150463 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730995795 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.727819288 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.729728856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.728299701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.72791484 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728540263 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732330833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731980775 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.727334832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.730341123 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.740481505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.732939849 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.728210183 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730906043 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.73327764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.729169812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.728113119 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.728857515 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.727953977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.728005936 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.729467635 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738535088 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731014324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.736132005 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730033466 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729832731 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.728645712 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.732092177 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.732258843 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731992024 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.729933353 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.728901614 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.728736327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.729441073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.732578123 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.737078868 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731198223 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.730016564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734273457 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.731672081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738083654 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.730402445 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733700439 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.739681464 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.741946921 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.742085398 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.740368903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733102912 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.730980591 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740096074 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.755662301 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.737866398 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.731118621 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.731220157 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.730186728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.738336653 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744307941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.741581147 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.731305038 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730896502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.731188712 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733612121 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731149845 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738882069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.735230027 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.731644045 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731333459 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.740505508 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754973632 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.732955433 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.731679229 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.732472829 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.732178623 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.732353989 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742802061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.73186954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.732304578 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.732470555 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.733459835 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.732919686 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.733215776 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.731033322 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733828027 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.731449704 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.732256822 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732513876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736611052 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.742218134 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732861692 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.73259186 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.74101253 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.732051414 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.733002341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.741395804 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.732712209 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.7336036 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.733987804 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740054584 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.73226273 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736904652 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.74177614 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.733305333 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.73550248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.733419643 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.732965873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742783968 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.760143193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.732404925 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.73425631 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.73885347 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.745116793 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.733515982 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.738795993 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.733765469 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.733277768 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.733757681 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.737555331 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.734152853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.735936804 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734563996 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.736301319 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.73337596 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.733519689 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.734885183 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.735941213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.735711406 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.735802518 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.737535632 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.737746755 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.734932902 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.738005236 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.742326415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.735243706 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.736170344 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.735792517 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.73557152 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73496682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.735726525 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.735025805 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.73591617 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735530702 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.735173285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.734133639 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.734606634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.733703525 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.734546729 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.736574168 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74161101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.736552049 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.739497706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.736567419 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.735617904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735332991 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.735988579 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.736345972 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.735328072 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.734747613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.739220594 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.74400597 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.7355629 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.734932097 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.73968068 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736855652 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.735996374 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737138219 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.74047895 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.745958109 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.736774935 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.74605663 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.737973962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737115086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.736976476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.73819776 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.737993782 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736850139 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.740706935 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.743214367 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748109401 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746956666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.736757852 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.740647621 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.739203712 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.7414557 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.740125282 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.737107149 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.736539114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737871157 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738598745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737340715 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.739801206 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.737641523 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.736613681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.737767422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.737490289 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.73695538 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736769045 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.739900331 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7389701 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.73859698 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739687187 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740578734 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.739197594 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.739646612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.738387794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.739593667 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.738300801 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.737391725 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.744125044 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.736913637 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74008355 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740520766 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.739655064 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.736586227 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.738518592 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741959092 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.739946847 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746405003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.740950043 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.740231913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746890979 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.739577796 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.739668394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.742088404 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.738884884 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.73856642 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.741849466 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.746817072 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.738830799 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.73928534 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.739098514 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740307605 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.738561563 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.747723645 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.740526325 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.74045653 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.73947021 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.740650322 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739376718 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.742894837 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741161835 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.740876457 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743772639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739785008 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.740559172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743351858 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.740807966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.741056555 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.740251856 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744011885 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.748435145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.746278697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.740835888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.74341367 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.742037704 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.744420012 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.742371199 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.740331813 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.741593722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753499065 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.748705066 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748482169 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.743497892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.740372713 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748461384 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.743052568 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.746201162 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742047275 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743364 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741757168 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742572685 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.74051291 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746072244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.741217891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742735929 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.74340719 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.744486963 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.741450163 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.742713638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.74077823 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.741842159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.740776706 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.743533864 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.742002941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.745223141 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744857479 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.7422966 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.743688329 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750704797 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74439922 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.744449911 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.74349023 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.74322739 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.741314876 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.744597778 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.742254536 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.74780477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.750735253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.746595163 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.753938653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.745166596 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753100587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.744234118 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.74591943 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.751208588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.745765915 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.742214646 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.743458691 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.743884573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751485636 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.742829879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.743525826 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.746530973 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743550157 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743515674 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.743263182 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.742880155 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743272311 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.742761204 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752358592 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.744851908 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.749150951 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748250808 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.742744552 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.743359508 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.743254214 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.742966096 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747579431 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.743878654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.745449721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.745312512 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.743957057 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.742757838 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.744316694 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.744308613 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.744231685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.743218973 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752278536 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.744715855 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749266815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.744507504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.753541709 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745767612 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753061303 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.745657352 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.745605199 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.745856854 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.74538578 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.747220462 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.744319631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.746985029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.745749264 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.745438117 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.749281349 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.745874713 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.747309768 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.747406055 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.745524049 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.748234997 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756414975 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769171432 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.749133198 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750834258 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.745973251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.747920641 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.750770811 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.746581869 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.745498289 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.749544947 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756521777 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.752928593 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.747532725 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.746981021 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748606903 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746325677 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.745718596 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.746063542 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.746713418 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.746510903 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.747908222 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.746397896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750516913 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.746405692 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.749288138 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751193037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.749841834 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.76025029 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.748529868 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.749196484 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748842034 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.746986491 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.748057416 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.748261751 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.746964403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74749163 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74691853 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.749355983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755758385 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.754758097 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.752076938 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.749228955 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.748535913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.750043006 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.748114694 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747506152 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.749057139 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749253452 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.750395004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.748375493 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.749574725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.746719305 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.748314956 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.748768077 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74827185 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752907985 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.756406087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750462654 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.748465832 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.747683986 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748313727 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.748515697 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.750663075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.757347962 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753136664 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.76065918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.757746542 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.752286799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.749634921 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752803279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.758587674 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.747377449 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.751047655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.74849946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.752054464 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.750247169 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.754677507 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750253286 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.756817177 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.750358189 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.749709028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75784741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.752697377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749593701 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.752079865 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.755839421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.751217677 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.749576731 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.750136185 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.750656046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756932127 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.752684136 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.751016481 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753223064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.749890295 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.753156825 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756452887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75175163 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.754089911 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.750494719 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.754436027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751937925 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751129189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.749515991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.749352411 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.749633356 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.753356713 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.757498887 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.750205629 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753660143 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.751996298 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.751220425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751526096 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750522242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.75003469 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.750296451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.750645661 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751061335 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.752170493 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.754943534 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.750808782 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.75245518 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.755893297 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751605239 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755184121 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.763317264 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.759307815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.750203158 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.751916781 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.752038104 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.754986127 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752310547 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.75007132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75273597 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.75461048 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.750712422 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752091012 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.751399072 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.755778389 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769587255 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.75185669 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753630403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.753169543 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757028849 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.752381542 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.751754755 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.752079689 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.753993921 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.755961012 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.762022579 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.753375455 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760251237 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754997748 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.75429922 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.755022952 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.755696202 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.759144976 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.756217778 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752162038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.751602325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.757997387 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.77013306 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752055405 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761658518 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783044606 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.75363328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.752523532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.751609275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753442181 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.753149158 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.754198513 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.753409774 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.753231685 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750152742 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.752181813 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.75407466 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758881238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.755186235 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.750561907 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.751591287 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.75294421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.753734004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.752121798 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.751635034 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.751169801 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.750725467 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.753313479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.752399462 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.755280121 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764454908 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.762579674 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.75147689 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.752562888 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.75262855 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.758580021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.758953783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766376716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.761834125 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.753297074 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.752742763 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.756876367 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753052727 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.753046232 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755943549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.755139437 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754642578 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.752309096 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.766534154 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760268692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.759982914 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.753975882 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753686123 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.753962603 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755793805 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755219241 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754314799 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.757556789 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.756000341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759077507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.752919501 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.754998795 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.758695603 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.762534664 seconds)
  done (took 1041.214347335 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755036945 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755947545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755682919 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754810306 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755241591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755260594 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754031353 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754850085 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754418916 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.754913443 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754212474 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755170629 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.754543029 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754730215 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755412223 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754556336 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755276309 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753635701 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755705826 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755745264 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754850169 seconds)
  done (took 38.544945955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.754778029 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.756104388 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75377015 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754691305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755145002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.754852599 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756169207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755609078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755889351 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755304099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.755470082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756154789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.755928188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.755633038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75540867 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755462978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75594018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755198185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.759396015 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756905881 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755374483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756588671 seconds)
  done (took 40.31796869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.756777436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.757955508 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.759443616 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.756625069 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.757789422 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.756917432 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.757436751 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.755600315 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.757630351 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758818887 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.75748605 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.75790727 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.765538746 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.765534485 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.759153102 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.757019154 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.902136733 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.757423895 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.758443843 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.758769784 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.757449784 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.76479161 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.758394496 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.758250844 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.757144836 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.759019427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.757694715 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.755838545 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.756067967 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.75847731 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.761189048 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.758186402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.758237628 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.760188992 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.756779589 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.758800692 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.760089433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.759365602 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.756285787 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.756688269 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.768591873 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.779515366 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.756941182 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.76481812 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.757290729 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.756490487 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.761205063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.765297996 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.756713962 seconds)
  done (took 88.04473166 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.754647422 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754092121 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.755192321 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753828744 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.756798943 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755510896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.755284859 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755274989 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.755574402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.756033654 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.756420984 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.756029374 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755929929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.755127818 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.7559729 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.756768338 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.755888455 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.755883754 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.75537483 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.755593275 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.7567955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757496591 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.757809477 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.755999635 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.757078302 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.756136967 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.757299899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.755115248 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.752520864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.751337924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.751970195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752931916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.753216391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.750277518 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750363111 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.751121294 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.749635641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.750461456 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751296231 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.74838645 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.748628624 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.748453814 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.748965008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.747406159 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.749731279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.74848988 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.747931878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.749087421 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.74795903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.748619254 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.749242313 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.748335541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.74971634 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.748952343 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.748486313 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.751166419 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.74855154 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750011896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.748988934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.74877911 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.748910533 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.749359297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.749447693 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.749285866 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.750984212 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.749392581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.749555252 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.749716399 seconds)
  done (took 120.845941453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750574346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.751007769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749165989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750346037 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751107234 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.750039538 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751247357 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.750404165 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.750268381 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751932745 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748946791 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.749261789 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.751382316 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.749943014 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.750623015 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.751140893 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.750836497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751272385 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752028224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751238551 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.751329421 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.753465179 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.750516209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.751636329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751137264 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.751343741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752767703 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.750527778 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751425867 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.751145439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75255073 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.750838552 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.753389088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.751691637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.750827412 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.750877924 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751491714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751508896 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.753291599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750731496 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.751600275 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752593004 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751867488 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.752926038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75067527 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.750536041 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.751713369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.752704575 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.749750643 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752234623 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.750544614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751198123 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751597437 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752179843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.752581822 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.752399726 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751516326 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752575918 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752382059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.751893798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752281256 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.748828097 seconds)
  done (took 110.269821367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745171128 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.746735912 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.745762289 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.747828661 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744391863 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.744316989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744249087 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.744770941 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743890287 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.745181609 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745336486 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746622669 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746743047 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74361973 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744907533 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745094668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743825666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745314914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74341365 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.744965406 seconds)
  done (took 36.584163999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.745316418 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.745123741 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.742880736 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743379508 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.743605489 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745204618 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.742918193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743086196 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743158814 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742565973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743235818 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743578651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743591857 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744516539 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.742574709 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.744215744 seconds)
  done (took 29.580532525 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745052176 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.743006767 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.742709842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.744489847 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.744219432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.744240503 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.744890883 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.743576551 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.743847356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.743826604 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.742380606 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.744652929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.743957638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.744568413 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.744109306 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.742991682 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.744579515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744626419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.744362955 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.744565709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.745161771 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.744469088 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.744825836 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.745350951 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.74398435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.74525083 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.744069437 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.74451744 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.743971356 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.744632802 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.74520249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.745694503 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.744312104 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.744358053 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.746625374 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.744335992 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.744506714 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.745088268 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.74376032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.744450157 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.746108992 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.743882124 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.743200429 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.744394627 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.742730632 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.742997367 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.743708004 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.741159007 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.742573629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.741819773 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.741958803 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.744153336 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.737902355 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.73843647 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.736993116 seconds)
  done (took 97.587719618 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73908638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.739109019 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.737620403 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.738405146 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.737500393 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.736771028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.73712746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.739068664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737097535 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.737858851 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738418606 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.735874974 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737227483 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737385025 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736880004 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.735619597 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.735548792 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.736687938 seconds)
  done (took 32.946476183 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737732971 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736316112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.736285141 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736465773 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.736401982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737000489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735996756 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.735097639 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735806236 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.738649779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736103311 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.73666265 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735434051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.735639915 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.735988454 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735336417 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.735505186 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.734869716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733872727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735062205 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.735739594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735030804 seconds)
  done (took 39.863206914 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.736093732 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.734033507 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.749350191 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.753833924 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.755190623 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.768234484 seconds)
  done (took 12.167516279 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735361066 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734532067 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734880974 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734731622 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735670964 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735995624 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734870745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735408937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734971047 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736112699 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736009536 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735474452 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734912647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735207985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735540309 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735275801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735449757 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734385431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734901558 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735186352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734488269 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735665681 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734201803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734056981 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734466335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734801274 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734136684 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737358246 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737860063 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735634143 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735989796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735303679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73509871 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736703607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73545866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734800096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734553842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736937718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73477731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73696826 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.734072813 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735367881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73439213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735096994 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737340898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734629817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734092572 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735393359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734812299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735503542 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735289204 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735248732 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735456479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73428978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735440891 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734600742 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73681893 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734696543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73495331 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735765209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735902165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735056015 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736273566 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734562154 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733361554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736019275 seconds)
  done (took 116.200293143 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735426125 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.735738091 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735060422 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737214976 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734531209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735209669 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737571724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735145107 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734252065 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733738865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733209497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732959157 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733798929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732314133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73311644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734489508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734655183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733773129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734897085 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733624706 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735353577 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734468295 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732511455 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734226036 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735535393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734120116 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735308406 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733847822 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733919001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734500876 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734749368 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734267031 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734719064 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.734602101 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734859659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735668758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734987888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733628331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7346962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732550342 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733879542 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734099047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734317652 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732972221 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733909699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734919283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734128439 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734133353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733509214 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733800389 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73406904 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73492809 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736150088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734542841 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733571662 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734462207 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734030894 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733388993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735264478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734413056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734233149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73429815 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734215018 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.735151685 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734395098 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734767081 seconds)
  done (took 116.143482428 seconds)
done (took 2415.147835121 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.752768896 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.745901609 seconds)
  done (took 15.168619912 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.896156737 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.850184293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.73491998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.778464972 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.735115531 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.733656812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.747873461 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.735552976 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.734145433 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.734694511 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.734137477 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.918739579 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.793533209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.734214151 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.733884022 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.826263979 seconds)
  done (took 50.096271344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.737803965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.739231093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.747128938 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.741073509 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.736673709 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.750979174 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.768502535 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.740406891 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.770750577 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.747132389 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.806841313 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.750913311 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.73626179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.786444607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.749234201 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.750618958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.830216432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.811777026 seconds)
  done (took 33.371453496 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.812210629 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.744675778 seconds)
  done (took 10.233102715 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.752504937 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.747875485 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.830068967 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.761915449 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.766250507 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.740724356 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.761562608 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.754257652 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.751014916 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.738112293 seconds)
  done (took 69.276499403 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.741991684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.739391037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.738167687 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.736954673 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.735602064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.738269908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.735781993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.740674272 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.395742369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.775330609 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.743650729 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.74271069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.73918587 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.738035479 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.735416288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.759761137 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.842185172 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.736520929 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.736051027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.743137038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.73795673 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.794893116 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.7519759 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.739705701 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.768654968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.397612251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.746140772 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.742489388 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.844359596 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.734780599 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.737490539 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.928701554 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.739896782 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.195955714 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.002692021 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.744076187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.752539096 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.744952515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.735372164 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.854512905 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.738966455 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.743406728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.675110887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.98494707 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.836294023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.781500091 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.043548333 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.755075281 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.73870446 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.77067829 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.739164634 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.739190348 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.751765422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.239740331 seconds)
  done (took 125.499760128 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73703173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.082477634 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904501806 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.736455703 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021199008 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942933692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.739592717 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.784932022 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.739628009 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963818831 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993204338 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841018157 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739740508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.737018275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.736651972 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.735513093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.889173487 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.807168502 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.740075646 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.737126329 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764930045 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976704201 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.859888525 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.739520505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.764185766 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94652554 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.858830334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.839526028 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.51867561 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.73704522 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799880222 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.740454083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.74004936 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.736306877 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891976631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.830714684 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819332188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.739546711 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.737105086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.737380027 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.482631302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938797867 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831884805 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.865732619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988804649 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940759099 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.515163195 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.737575132 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.478789984 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.900833419 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.964091078 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.965412462 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.85918106 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.739632803 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.263213418 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.736838809 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.737031776 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987405989 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957740538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.834063718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741564123 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.738765563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.738335564 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02602908 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.742555005 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.834346323 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741015063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.738672657 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.834229324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.834743074 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.967391069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951057316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.768390518 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.076160249 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.249751653 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983210761 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.803977986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989417662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.742141939 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739217796 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816455183 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.583741629 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990089247 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0210192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98274876 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77299247 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.455566414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.738607835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962539861 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959570464 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.995737641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988665164 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.976775258 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.058277337 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.738856857 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.7406093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066153423 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.862406095 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.741734373 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.085858307 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96760189 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.261229262 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.766051092 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040523638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.869412422 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.743015243 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.381367081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.740906331 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.967036697 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.778822103 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.742059031 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741333003 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957972879 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.72702862 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741752535 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.627401137 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.800439336 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.744676455 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971605757 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.744404494 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007551026 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744805551 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973053869 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.788502664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.76985604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.967595795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.986574072 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.74318173 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.978057141 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982867248 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.855656606 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009335381 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.636839038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.745163012 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024974278 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.744222906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.742202922 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.909316065 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.743315686 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.882911964 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.743531492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033742819 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762363554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974545107 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745664416 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993180093 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.772421104 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.791793915 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.74565579 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.871380182 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.744506793 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.5671839 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.899445891 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743635866 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.741987907 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.61645995 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.15958567 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.890193945 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.967199129 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763465947 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814712292 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405813969 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.743774445 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82155791 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.763899698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.131516563 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.743817602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995691968 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.745440885 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.741852082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.745247942 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.029134073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.978397803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.745071825 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.742430083 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.65448964 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.743250829 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.742988719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.923309107 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.206820799 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.743124907 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943977864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74559063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870292927 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.747521555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.818811105 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.082006009 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744456017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.743493317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.74306899 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.74369389 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.74415366 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007083261 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.768298508 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.234569944 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879559812 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012872043 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.053304898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982751419 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785462102 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.744981455 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.998667757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.746249847 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.806132241 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.747262232 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.763424294 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970614474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74639635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952354651 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013521543 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.598913195 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.791109459 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.748168282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74662278 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.746563571 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.889859698 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831679078 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.747520331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.745835069 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.857723082 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.865647275 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952094566 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.746806235 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.855359392 seconds)
  done (took 876.082596359 seconds)
done (took 1181.398414346 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.746731615 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.747363989 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.746969718 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.748035653 seconds)
  done (took 28.670399533 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.755093115 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.746743018 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.747371953 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.746713423 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.747786467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.7474532 seconds)
  done (took 12.172853615 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.775260927 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.748101052 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.748252805 seconds)
  done (took 20.954002365 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.817470503 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.129236681 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.881376855 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.162613418 seconds)
  done (took 9.673626099 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.749364494 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.747464762 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.748083443 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.74883561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.754832463 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.756478142 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.747605546 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.747769381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.756458488 seconds)
  done (took 17.441157788 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.936798756 seconds)
done (took 94.530280381 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.758284316 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.74614465 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020000946 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.935093167 seconds)
    (5/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848224203 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.816084347 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.745841498 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.985043351 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.878014648 seconds)
    (10/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.19297843 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.108000956 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.915174406 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.771940761 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.767226681 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.003229406 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.778341022 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.629552442 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.759298264 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.066590891 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.124805327 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.915226805 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.880888875 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.990349274 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.776751427 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.752360478 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.024495908 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.84506377 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.756717083 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.773493838 seconds)
    (30/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.123617194 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.033020243 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.917889711 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.953807908 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.202820565 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.961101348 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.969315855 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.063968998 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.926109755 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.826295917 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.300953555 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.5599292 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.858853101 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.120058029 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.072156494 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.891606444 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.75274707 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.22246875 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.955445072 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.508751111 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.834009288 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.664290674 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.405943792 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.035272639 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.845629146 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.082504984 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.372707082 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.999976122 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.883429072 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.121512224 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.909197482 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.772648432 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.634070054 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.794523264 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.988525049 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892673428 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.841609283 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.18626002 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.887565283 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.628747081 seconds)
    (70/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.873394628 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.758038038 seconds)
    (72/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.145223887 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.090771707 seconds)
    (74/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.862746128 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.089400607 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.756770318 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.131631597 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.756306816 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.79578528 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.426446656 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.922587021 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.984536802 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.837317113 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.908860682 seconds)
    (85/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.949363299 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.75670588 seconds)
    (87/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.861648829 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.434850711 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172067047 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.363677724 seconds)
    (91/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.920889222 seconds)
    (92/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.782583912 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.130360042 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.826886649 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.859958655 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.883499882 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.599330367 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.056130296 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.768062634 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.747228892 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.068415279 seconds)
    (102/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.855143254 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.754917614 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.847838645 seconds)
    (105/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.958455484 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.843819264 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.189756555 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.868744527 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.759096156 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.751812126 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.716761697 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.945147115 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.084099194 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.75699125 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.879708746 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.064867628 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.512137976 seconds)
    (118/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.241534815 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.7573572 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866233993 seconds)
    (121/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.966690826 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.891214701 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.793442935 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.76019788 seconds)
    (125/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.95739114 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.75462775 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.940117297 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.765277855 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.779717083 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.049538247 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.815387576 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.865453024 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.896002272 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.085614723 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.796955611 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.528057622 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.010378873 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.71623936 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.886670904 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.763479586 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.000362573 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.863236052 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.831659024 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.751832591 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.949355375 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.75313424 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.05920183 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.778780394 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.752169407 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.934689098 seconds)
    (151/309) benchmarking ("sort", Float64, false)...
    done (took 5.487087159 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.860247691 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.850160422 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.750972583 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.011246096 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.755105399 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.909476339 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.767614839 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.753187476 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.527921992 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.756178515 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.493734304 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.933520328 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.865853778 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.992066568 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.415873596 seconds)
    (167/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.065963866 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.761831778 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.752109221 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.89292796 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.75441196 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.002051749 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.847737817 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.822182275 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.880752711 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.887455745 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.989380102 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.856498198 seconds)
    (179/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.62626855 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.82178616 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.755032878 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.06853122 seconds)
    (183/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.844383995 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.869825617 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.432556395 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.844329921 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.890135873 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.06019262 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.772332905 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.030525529 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 6.756177076 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126078925 seconds)
    (193/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.854486402 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.268418766 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.019839905 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.885234306 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.238428088 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 5.475845881 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.788273198 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.432223059 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.785501607 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.757924721 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.678047279 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156153177 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.825155326 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.025594944 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.016926369 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.76092577 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.810468885 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0870896 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.911028577 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.063453589 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.100480579 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.838678652 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077450003 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.78274112 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.958097223 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.99018773 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.571973891 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.757632695 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.860972047 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.762111316 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86113628 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.997802365 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.976688022 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.91784542 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.5931472 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.786428166 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.066953781 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.772091526 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.947424282 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.762881957 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.218618948 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.112196179 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.073888472 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.953703454 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.838088223 seconds)
    (238/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.761865183 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.101077993 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.22139336 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.893894123 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.758609421 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.122293412 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.850574948 seconds)
    (245/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.757058194 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.858819266 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.83975573 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 4.632835348 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.051679034 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.787182933 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.13876138 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.778664683 seconds)
    (253/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.940324691 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.890137399 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.679122616 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.864815358 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.761313895 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.699706788 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.827958268 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.937017409 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.75955897 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.23934542 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.927133902 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.091720602 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.162170726 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.10959073 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.113287338 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.773145954 seconds)
    (269/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.546367728 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.777673857 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.072863633 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.023055988 seconds)
    (273/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.903460833 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.727628705 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.007602435 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.73304195 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.92920257 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.777715047 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144352373 seconds)
    (280/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.771421027 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.095752254 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.872903357 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.144573893 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.76162876 seconds)
    (285/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.024624474 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.111387075 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.461340377 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.155411648 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.769685709 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.536315634 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.760234292 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.784763058 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.918779965 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.204420766 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.766122858 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.951737335 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.877842751 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.795111519 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.597712074 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.791564012 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.847197124 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.265711888 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019707822 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.019220688 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.006841953 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.980817195 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.850327852 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.767914743 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.889017708 seconds)
  done (took 968.885867429 seconds)
done (took 970.63459536 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.793588717 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787501429 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.769164685 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.79188261 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.883196759 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.816827827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.782808851 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.772752744 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.820025292 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.819695858 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.768822828 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.814116463 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.771413523 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.77108297 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.770732671 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787253546 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.072708405 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.798959081 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.788572547 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.782903851 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.788845936 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.770178228 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.821718596 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.815871162 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.774849243 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.775660621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.774870909 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.791433859 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.884256342 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.775150988 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.776892896 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.783831348 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.074056665 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.79637204 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.767899948 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.791216503 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.784486224 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.782896549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.775376776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.803937217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.15604382 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.807294188 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.772364102 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.772883416 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.772035046 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.778977583 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.772965885 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.781848559 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787614529 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788266933 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.151829174 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.822726312 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.776150334 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.771441166 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.78459112 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.77237527 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.776789083 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.789144694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.792285667 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788580371 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.058223392 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.805858494 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777314325 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.791500573 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.78229518 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.188391735 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.806052063 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.780087933 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15633456 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8138926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.187993442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.816404126 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.77660843 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.78870047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.806862202 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.074200467 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.797878515 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.772859453 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.782798955 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.772250083 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.785568099 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78878446 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777650319 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.773932398 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.789473693 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.820447289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.785875045 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.774920571 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.78626311 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.793535996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.783783113 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.787897769 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.777656203 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.77274778 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.787220911 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.779192822 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.780289525 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.779844132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.783055206 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.788952262 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.157733498 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824317301 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.770237608 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.770429277 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.774739977 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.789483621 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.158424384 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.809756544 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.797949674 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.824150878 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.77742302 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.058556934 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.804613876 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792254585 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.788578037 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.77873278 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.77401857 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.059290542 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.182853635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.824845299 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.775763417 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.773590766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791035814 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.776851807 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.772310146 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.07776633 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.804124436 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791751216 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.899002896 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.789924447 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.808794107 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.773704076 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.780194266 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.825267763 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792528069 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.809040891 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.779196865 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791946331 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.795093109 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.77359995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.788521267 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.789358694 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.776293058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.784838774 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.773944949 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.826304151 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791454983 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792192957 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.797861222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.899449218 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.774639216 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.061073459 seconds)
done (took 279.18975328 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.85770177 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.773573238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.867006079 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.776824662 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.865554517 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.849649554 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.774926676 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.776837078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.775634614 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261494655 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.77603138 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.783897178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.776415747 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.776240753 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.847118885 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.776492653 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.776571337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.208953801 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.77697405 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.856311573 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.77475175 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.77631828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.776496081 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.267207751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.776005762 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.777245205 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.856102843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.777315236 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217890083 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.775313339 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.777050757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216365253 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.855554441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.804308855 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.784714329 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.780955914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.866956423 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.786898769 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.843738527 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.849212213 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.872527428 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.810900043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.777309432 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.775917525 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.780524698 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.778856315 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.778933287 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.808745829 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.777256556 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.781729258 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211041363 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.785105779 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783277993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.779376339 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.777975642 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.805948301 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.778711646 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.777835439 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.858640886 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.778123282 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.845034788 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268720869 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.264189441 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.777076807 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.775934724 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.779318903 seconds)
  done (took 178.974420834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.845011944 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.855031813 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.842774446 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.782479984 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.82664337 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.845865908 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.784125646 seconds)
  done (took 14.494724667 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785400103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.779320595 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.828218077 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828700378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.779695872 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.933959135 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.779814885 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.791113256 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.78509311 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.80608879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.780094284 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.779809454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.787715272 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.779134499 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.829089764 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791615125 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.897044962 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.781979935 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.780823034 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9278633 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785306607 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.787626629 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.80545122 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.790144486 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.781657252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.786672292 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.357041176 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780276771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.779132811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.779701051 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779309477 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.822318415 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.78119462 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.779274715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.781438886 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895274299 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.781058922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780762778 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780878506 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.781043289 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.781238268 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.78118895 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.780861073 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.780622558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.781368832 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804664917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780905408 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.780254857 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.781277865 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.780814731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.8068967 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.780778551 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.780909511 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.78618856 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.821974257 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.79114544 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.781795074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781514997 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.781636909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782374177 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.93059875 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.831518829 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.781932231 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83241184 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782865119 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.782429542 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.782199858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.781238063 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.871720757 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.782457246 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.832093581 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.78292114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.942547898 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.805733374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.783481466 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.785103591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.786372242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.781869124 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.782405252 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789221077 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.783244935 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.785288445 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.789051638 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.787201917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782640325 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896928053 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923113303 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.78316157 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.784295113 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.791100237 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.782609205 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.826445515 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.78287541 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.783492114 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840152067 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89864849 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.810804988 seconds)
  done (took 197.13410303 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.791912471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.789515092 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.784548281 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.79866988 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784201162 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.784695374 seconds)
  done (took 12.449457256 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.786430772 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.786786622 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.78508845 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.783294286 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.78341481 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.785377025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.784164116 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784785146 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.787973378 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.783854263 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.784900151 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.784653616 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.785656167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.784966137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.784671291 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.784350689 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.784370473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.784258552 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.784852575 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785238655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.034605024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784530609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784720985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.787662208 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.788963959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784072879 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.799658796 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.783891195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.784978778 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.791995168 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.790111865 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.785325747 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787983156 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.790899434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.787914081 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.788730304 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787137034 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785920552 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.785305461 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.785159787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.785404165 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787303338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.785400739 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.7858692 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.787922912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.791451637 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.789250991 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.798935474 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.784963609 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.786665998 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.785555709 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.786016912 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.787639878 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.787007987 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.789699522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791362367 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.789993467 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.786219476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.787592203 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.78909013 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.789010982 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.785950381 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.787950053 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.790625029 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.792587237 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.786959525 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788583665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.790135291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787431424 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.78829839 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788227838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.787685285 seconds)
  done (took 131.644049416 seconds)
done (took 536.420996158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.069063957 seconds)
  done (took 8.789362545 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.866438861 seconds)
  done (took 8.938441523 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.66213707 seconds)
  done (took 10.392108445 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.812634537 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.821936955 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.812491371 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.798572697 seconds)
  done (took 29.006536825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.036969994 seconds)
  done (took 8.766582688 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819895165 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.795082964 seconds)
  done (took 15.410404742 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.914214681 seconds)
  done (took 8.644690478 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.142506481 seconds)
  done (took 8.879931667 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.819207503 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.812861964 seconds)
  done (took 15.381336512 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.798881237 seconds)
  done (took 8.528714975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.989814734 seconds)
  done (took 9.817857742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.826163274 seconds)
  done (took 8.625296093 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.840409401 seconds)
  done (took 8.570747778 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.925278725 seconds)
  done (took 8.654719484 seconds)
done (took 160.127803487 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.80133161 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.799450185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.797885658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.795962175 seconds)
  done (took 28.924065275 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.830245093 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.831814602 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.831464114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.840741563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.836504194 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.830171234 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.82482631 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.823455089 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.841646681 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.833449666 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.833084476 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.834063455 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.831169697 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.823866752 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.833487962 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.832290537 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.841827936 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.835314956 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.823751258 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.832360944 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.798120393 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.843067141 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.833352346 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.79935615 seconds)
  done (took 45.650541999 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.989420521 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.869438352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953318827 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.852054821 seconds)
  done (took 9.395227891 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.849375063 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.851838689 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.862728713 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.901963872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.925742766 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.860164828 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.824560656 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.819363567 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.806212767 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.852385419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.927127928 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.846533987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.941121955 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.79846502 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.98070565 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.799105601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.800084308 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.853408722 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.903205088 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.917000872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.80098344 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.850830102 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.854118456 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.847494925 seconds)
  done (took 46.405930163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.802426334 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.808355399 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.807571336 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.801705081 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.802360786 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.800712019 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.809540127 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802353511 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.823159242 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.803270144 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.800706843 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.802742792 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.807232763 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.800798786 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.801636373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.813904968 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.81657454 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.801890469 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.80452972 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.808364785 seconds)
  done (took 37.853338771 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.798699121 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.647107231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.144735268 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.051933013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.799518473 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.801223454 seconds)
  done (took 30.976358222 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.81394883 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.807135006 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.800022148 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85984977 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.944157284 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.808926178 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.80454142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.812000477 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.849274516 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.867970669 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.823692389 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.832515895 seconds)
  done (took 23.757132641 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.801236549 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.804123365 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.802091565 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.813812517 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.812367591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.810862067 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.808132216 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.801532506 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.815902274 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.820302726 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.810375881 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.812071465 seconds)
  done (took 43.452608369 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87881336 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674786938 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241425675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261053968 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325226648 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003448485 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.801311271 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887019066 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.802169112 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072032307 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.120321613 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006427951 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04467698 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.665004085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.807861634 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.270223814 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089914479 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01389173 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829777799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421176473 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908852872 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37138858 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.484635097 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909463055 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004142893 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.923623105 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.060129281 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.757140729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850503368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806592752 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806479524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80182737 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073642026 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920588401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872176145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808290786 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212527965 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.50806663 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.815839342 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.435139258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.300619489 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925268971 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807500341 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802836596 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728816497 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379959666 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897523679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.806873169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.504037985 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.806498147 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811069687 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879138341 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.806323796 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.608393202 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483045823 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.076227788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.803639057 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805272299 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352533317 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809159831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468806286 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.742784348 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.890425289 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.442937984 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259663753 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.961938828 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.805500465 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80686263 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731128793 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.426105953 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918238617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942263619 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.821584674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444771164 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095528031 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.207313255 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857521201 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074793129 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644770895 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.740688319 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022924258 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755901375 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733645046 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.635774274 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732101433 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016382015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839975228 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.409503217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839794336 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887988065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8105799 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82031747 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807963907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022541976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.701139496 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807010382 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.102505258 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065662402 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824854361 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892453578 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733502966 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.808579715 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053034904 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.010570078 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.106675951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.291634747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895275224 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775472746 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.824676143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.772758608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81976464 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.077398741 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869805341 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819592159 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926413219 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.758540701 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057182133 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823906976 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.9107579 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.169647995 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050611623 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143680585 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052917875 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868295357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814432324 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.807275073 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497837151 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419262029 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.023946119 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.819981727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330637476 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81728961 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.80733497 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74280941 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.473616262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.170168853 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.895628748 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022185869 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.800890499 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087082905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733087596 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944256009 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.820678221 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.021027568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.451745543 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.892024057 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057022875 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090022502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.1010565 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821266907 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822179249 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898725278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823760951 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.281697145 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057090116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.809913677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.809697871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.510676762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865602088 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812372312 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.812184172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33494591 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082962246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838158947 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.814011697 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684377349 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.820244347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872422776 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8125379 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.811134995 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.334435156 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317937851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.816230108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.471842632 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027764602 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814195401 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.445703698 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984038783 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.823010512 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07724234 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87527125 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.735368023 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.512051002 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.510345271 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810572585 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737550766 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.812888712 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813819414 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816682753 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.000373942 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085571223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866028167 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.496709801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.92023181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815126716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.813738258 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81184186 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306018201 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828825096 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48164318 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823029586 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939304467 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.821615013 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736459079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81356257 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813050756 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.810471573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.761421704 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858637901 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.491872843 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01574971 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060122949 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.216904708 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819637664 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.501250066 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930289794 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880621652 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.119788242 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496894433 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.816615402 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884573653 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.81684783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.497660048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547022218 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367688457 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107263425 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131248368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158499342 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.345730125 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.03136824 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897671439 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038141875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333396015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867366982 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900927646 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750517993 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826370088 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.458354797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17054435 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822007163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029121733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096198191 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.205169229 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948078881 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015698664 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841875914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783392518 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733276584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.349462982 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82914516 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.236643708 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021526587 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895153191 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.135046334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.888091737 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.813837243 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153100745 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857581147 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.515509782 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166055173 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.241966872 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.328179721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03962587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.818527438 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252281067 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164192787 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.028878329 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.953689523 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740369461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819455729 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818865601 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82720862 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.787195838 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.671955047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.065451451 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819910087 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041270817 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.966208749 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185046839 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.729881692 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.818523481 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81371225 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061795344 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517027499 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973759697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.146351017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389024552 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821209995 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741275192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74133348 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.515733207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819383247 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780006002 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024936595 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.919628784 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497606731 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230751759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129436157 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058919501 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.827205587 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086429052 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092112481 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.30926255 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835817804 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.912279384 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.130410623 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.524003529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029816842 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040784855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347818733 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032350475 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263901959 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.790595623 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.81607239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022593671 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.03061038 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.197487184 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99761779 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.5260651 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.828652626 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182842958 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880476445 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.194605036 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008610639 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.910358295 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822103496 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89320696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8212598 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.822137169 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.821448302 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82719276 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.200040761 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942533 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.827616402 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893590902 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844140334 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388950829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.824912585 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089610873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176653829 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153809002 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883323266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.817717399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826765189 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745336353 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945811945 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257452867 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088700746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933837597 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.953591339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837371231 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.138727161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.10887626 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129169455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090264583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.701229988 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.551095234 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941648639 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.034374688 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823871328 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.021478616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034787747 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122267292 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379422546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.986822651 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011371044 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089927327 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185826213 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819319508 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395628946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.827527091 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218984077 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.855046633 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.205028194 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080315222 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822698155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939218344 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.822316258 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.022837919 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268660051 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.512410694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168775854 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666757211 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823663255 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093516118 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154067968 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127013111 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894721195 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82425447 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.581252902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951177251 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.721857974 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.062074008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81997755 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023084831 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.529733286 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822436272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093938097 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129878721 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.818309992 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.757652595 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864413756 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.824082878 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034930306 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040741431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068284215 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823929072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.828889024 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.629387585 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097250723 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884922083 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748171312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.82219035 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866299392 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047362829 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837627813 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.335003237 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.521660707 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10126914 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.729475781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837804064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.251064742 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204067135 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15558547 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.345740147 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039976232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374947433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69481172 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200937347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.824651464 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.252119026 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202709339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.82298738 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348143934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934952503 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.093435886 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153507178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.837385649 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578622951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.858047746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035814278 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176268056 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754461658 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828834414 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.870275532 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.822428953 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.803579503 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833011997 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.797007166 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297569693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.668215276 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380047281 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.828253732 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.834945643 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.185161375 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386076683 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931461045 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839855761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824161728 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.51412507 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.109095296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065764187 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344305737 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.920699713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.823585228 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823018933 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741439247 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006041084 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.010101801 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105361024 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.189832714 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.934819263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824722977 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.029109158 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025837462 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.206903402 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9612086 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984932447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940764858 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.762862659 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.528270937 seconds)
  done (took 1635.757345452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.829731395 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.851570442 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.857042195 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.898274547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827601971 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.846726962 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.892723341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832612134 seconds)
  done (took 56.593801482 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.824247226 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.981548952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.828974852 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.825776964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.829117877 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.826067352 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.991188923 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.837096437 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.830152516 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.830149207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.825467196 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.825660876 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.108248721 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.848152257 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.82675181 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.832744028 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.828468936 seconds)
  done (took 73.465022368 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.82580948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.990275483 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.859067064 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.825924191 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.539095913 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.824726394 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.741799393 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.83079286 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.830339177 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.875774771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.120647451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.881421612 seconds)
  done (took 88.902267102 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.838099113 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.826851787 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.826944689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.826754383 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.827544701 seconds)
  done (took 10.910324773 seconds)
done (took 2133.795744507 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.057969474 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.884733727 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.924485612 seconds)
  done (took 5.567129813 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.973806909 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.017982519 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.131283565 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.137079634 seconds)
  done (took 10.024817858 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.155706535 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.197119037 seconds)
  done (took 6.108461521 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.141961237 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.855016417 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.236941077 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.827606466 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.828688759 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.828348002 seconds)
  done (took 22.247224657 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.827241805 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.826509793 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.827376208 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.826819598 seconds)
  done (took 9.065532919 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.825845104 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.532050851 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.82992749 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.838371808 seconds)
  done (took 20.78383735 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.973093801 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.941970908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.969709966 seconds)
  done (took 7.642079836 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.968400339 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.686236322 seconds)
  done (took 6.41292221 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.965277607 seconds)
  done (took 3.723530657 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.854694689 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.097674811 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.324161222 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.841798094 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.47457302 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.073709818 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.167904909 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.054922204 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.266822518 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.302215714 seconds)
  done (took 25.216891733 seconds)
done (took 131.841652489 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.398556068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.86509108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.033255724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.194281893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.070095653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.035234461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.046247939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.188272851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.884582036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.865128056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.202150996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.070879228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.997354527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.849379629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.003279276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.849241685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.05972974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.213157455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.902583419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.155266974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061084383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.84010335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.036487144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.853932049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.070288576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.989462007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.381085789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.852568606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.014573422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.39259258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.991253669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.256985398 seconds)
  done (took 167.38462933 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.83020024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.830928144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.831041477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.83002221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.385356855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.831439151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.82950374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.82936507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.281363664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.266727458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.83078074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.364364746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.831544156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.830423067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831559687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.833646248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.452139565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.830157474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.831675853 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.830583728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.829627178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.219676853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.832111708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.240638589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.446443326 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.83180328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.830443124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832014458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.830844414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.830112078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.832004758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.832067814 seconds)
  done (took 208.364664217 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.806357221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.832245879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.832318434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.855645679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.830278969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.832360846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.832530706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.852677745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.602918632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.600235349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.832974725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.833743838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835651369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831889713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834393624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.833221715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.832560496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.769892183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.833287737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.833540216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.834349566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411900025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.833631029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417943496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.832309334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.834687329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832824826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832399926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.832728078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.834972023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.834689005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.832666463 seconds)
  done (took 219.077281805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.076320289 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.83275188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.834743292 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.749275716 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.835255151 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.834510019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.811356297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080732084 seconds)
  done (took 18.819547578 seconds)
done (took 615.413947479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.172776419 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.015506774 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.009904953 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.858965679 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108501671 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.90314819 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.853253767 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.924295915 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.674898153 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.929601096 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515418921 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.877555727 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.608660786 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.884687465 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.975448553 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.914062888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.440479723 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.545635187 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.032646986 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.954366428 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.033651268 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.756471799 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.936084794 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.700354391 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637241609 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.812723661 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.866097527 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.44305796 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.867765642 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.01225491 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.506576361 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.115152946 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.867362258 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.852623978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.910138716 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.887018594 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.050761768 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.865491469 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.978669728 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.559078001 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.926638312 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.579900338 seconds)
  done (took 101.129374464 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.845797792 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.840483646 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.842178045 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.841040895 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.850138027 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.839647228 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.841731708 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.84090547 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.841051525 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.840988777 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.84103997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.848617903 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.841029418 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.849641753 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.840819613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.841275491 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.841634708 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.850190477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.840175205 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.841923561 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.841336454 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.842494482 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.837366126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.841626664 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.842757553 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.842224061 seconds)
  done (took 49.688395126 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.836755901 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.987867162 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081688956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.858132887 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.838822792 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.839374779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.856509405 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.843273574 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.840787224 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.841829767 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.929443023 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.845825951 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.857948055 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.081012124 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.855261472 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.836044303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.835407803 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.835816615 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.992341585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.85365491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.85845114 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.842774096 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.856148729 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.851173547 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.839516947 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.838661709 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.841527354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.313534526 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.847414858 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.928221061 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.897715936 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.866195931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.287523105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.088309756 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.895265028 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.850501521 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.838761476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931370814 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.845367628 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.839303864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.856325092 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.844083902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.077502272 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.365518006 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.854256106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.838915261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.323760335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.940025079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.879239618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.850298512 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.080842918 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.859157555 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.840082255 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.840006121 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.876002128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.845920269 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.841989146 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.202578789 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.853554321 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.859753323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.844336471 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.842620671 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000944756 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.849937688 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.988195573 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.849161021 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.846570138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.840764529 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.08189738 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.857800908 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.3706894 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.854858727 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.84032995 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.928460686 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.99434761 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.346522787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.853361691 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001441066 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.303596602 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.864753486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.847854627 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.302270742 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.868138094 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847903813 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.840857634 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.842087052 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.839918375 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.883398462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.857729575 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.286708682 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.373639717 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.215893513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.8682952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.855620139 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.841569373 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.198793553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.848621747 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.840883438 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.073753929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381201913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.85673817 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.849028129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352022552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.858517957 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.860366603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.84971553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.086987432 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.857613111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.882963273 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.841254032 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.848433079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.844010038 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.859718739 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.849267588 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.840845326 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.342788837 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.94799212 seconds)
  done (took 228.91037058 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.843605921 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844623999 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.840812232 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.845826885 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.839777215 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.841365847 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.840355399 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.839995438 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.842500664 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.839879323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.840803418 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.842343685 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.845675155 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.84046627 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.852365899 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.842303389 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.443175994 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.840893787 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.841777527 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.842488287 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.481014954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.846304664 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.841800116 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.840926627 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.842421275 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.844194462 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.848757968 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.849382395 seconds)
  done (took 166.621170995 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.842364749 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.954668001 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.863712167 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.872724274 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.850727032 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.844888877 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940967351 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.860656375 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.850518011 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.844010324 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.845442586 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.903226732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.856484876 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.942617316 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.875285614 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.95064148 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.946472858 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.850382325 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.845603991 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.844653362 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.873224263 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.853079381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.904782344 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.971378224 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.866705288 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.956973875 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.863332795 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.84447887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.844860644 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.957280094 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.867145611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.906093517 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.876778804 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.863699894 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.962463852 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.962444837 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.948161861 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.948376555 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.850431227 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.844678264 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.84502713 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.844807658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.958301769 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.866709189 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.847643607 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960223622 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.864566717 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.845918604 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.845971148 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.845456297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.859909247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.863686864 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.909627976 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.978817565 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.883936201 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.869866398 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.943903361 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.96829374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.847230263 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.944591713 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.852959084 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.959763108 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.868517949 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.848275199 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.847349962 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.850188083 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.877461148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.952336349 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.951085527 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.855268084 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.944387168 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.883902207 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.856085899 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.848669918 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.84966903 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.960024821 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.966552877 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.880933346 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.883220603 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.87598081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.856305844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.84752227 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.847891661 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.863796797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.851467399 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.960373555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.966426638 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.853562912 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.847025959 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.848036324 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.8479673 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.872451867 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.968947199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.885983852 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.951841924 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.91273303 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.924157472 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.866822176 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.861374582 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.852302986 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.909995344 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.866989046 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.858800612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.132361547 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.908737526 seconds)
  done (took 200.300829299 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.218568612 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.896770701 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.904863442 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.151991535 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.206247613 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826313049 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.895244239 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.894982283 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.919214559 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.079915322 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.973866244 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.913250988 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.883322084 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.870607802 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.892227199 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.919572089 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.902355108 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.232012714 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.118037613 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.043486909 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.884412424 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.195031851 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.200269549 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.48703231 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.946357044 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.288053483 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.45660922 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.025769138 seconds)
  done (took 61.010999412 seconds)
done (took 809.425396493 seconds)
SAVING RESULT...
DONE!
