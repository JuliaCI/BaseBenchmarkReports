cset: moving following pidspec: 19756
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.411060643 seconds)
loading group "string"... done (took 0.593126314 seconds)
loading group "linalg"... done (took 7.328821608 seconds)
loading group "parallel"... done (took 0.162983987 seconds)
loading group "find"... done (took 1.168746239 seconds)
loading group "tuple"... done (took 1.804987527 seconds)
loading group "dates"... done (took 1.25303622 seconds)
loading group "micro"... done (took 0.221697302 seconds)
loading group "io"... done (took 1.025818661 seconds)
loading group "scalar"... done (took 39.429862202 seconds)
loading group "sparse"... done (took 12.554376778 seconds)
loading group "broadcast"... done (took 1.015093308 seconds)
loading group "union"... done (took 13.035821125 seconds)
loading group "simd"... done (took 4.922177961 seconds)
loading group "random"... done (took 9.792256203 seconds)
loading group "problem"... done (took 1.872126692 seconds)
loading group "array"... done (took 22.530134109 seconds)
loading group "misc"... done (took 1.746076877 seconds)
loading group "sort"... done (took 3.70021881 seconds)
loading group "collection"... done (took 18.55582486 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521656635 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125248806 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1187375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119485229 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147688499 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112902318 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125496834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085848555 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.819072818 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149093137 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118137831 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428005637 seconds)
done (took 5.187953256 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175889135 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083367558 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082552905 seconds)
  done (took 1.304033021 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06585187 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121958347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067157048 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067214652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06733478 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066702045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06688675 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066104565 seconds)
  done (took 1.661435636 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073668764 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069536744 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066351961 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068456361 seconds)
  done (took 1.41476236 seconds)
done (took 5.770781832 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.786344123 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206214889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188030322 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413016101 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133057531 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159502919 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6439566 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32880629 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188980673 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081181967 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108859849 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328410081 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112083966 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.623072317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074467713 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090905754 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137061932 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429339507 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067289069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08210036 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089140922 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128669181 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087297172 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074726221 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147544763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067681912 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136304114 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080269592 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066760606 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213759148 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172599585 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655444114 seconds)
  done (took 10.278019067 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096272089 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097857088 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068870004 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123861269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100384302 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07100845 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070566476 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067248939 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08707945 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128103922 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088342749 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101131688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065950261 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069039126 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085166691 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204254923 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080098676 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08132808 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070492389 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075567279 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105080053 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078787486 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077096088 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07684097 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128743646 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18086687 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100439155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099239015 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069059072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08117006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115784702 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12878437 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067585071 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066542022 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12407027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095509328 seconds)
  done (took 4.60132999 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00269112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144095425 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090995325 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13524682 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065100352 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109634719 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066301458 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080762759 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209787225 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.458128211 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594028716 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111233472 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111855448 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103481026 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067384733 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068730798 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066852543 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504908315 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096777226 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108182718 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08266841 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070748691 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069492083 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354477837 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068027457 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064741885 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069128891 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057712312 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126032125 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068440229 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946616566 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126380038 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066635674 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101219254 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162102394 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067124567 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088999982 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274955736 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069293395 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064612124 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153792248 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070606303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066780105 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084092302 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104170206 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113264286 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066592342 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066929677 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165782855 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064588393 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080299095 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.659521572 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154356168 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079085126 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065251569 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252423382 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087758354 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070381108 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064099642 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186403108 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134241735 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069073741 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067046382 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068696195 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069910044 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381423634 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066482356 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.160324648 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067685867 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077064683 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069604033 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069685827 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073298625 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072840204 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088003406 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066553305 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075327375 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066547275 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066342112 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067011788 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064048826 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083723053 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379796942 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066860059 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068651778 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064786567 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089541479 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097259465 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067319605 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065798739 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100833304 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065032702 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068049391 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066445947 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107029163 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066272092 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083893209 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070086448 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113342489 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066247247 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205256591 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067865696 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096572984 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069226802 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099376969 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083430226 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070552617 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.42126532 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065661416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065243495 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068265129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065570489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067873519 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066216609 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079628044 seconds)
  done (took 21.486279076 seconds)
done (took 38.504232646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236364765 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079168161 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076540653 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074145225 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07405493 seconds)
  done (took 1.770277779 seconds)
done (took 2.980575193 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122916996 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100694983 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064838994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097278953 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064093635 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102327577 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101169386 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082576713 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100436137 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064145279 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09799294 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064650277 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063996596 seconds)
  done (took 2.358821509 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083280069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084429229 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069828518 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083135067 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063794719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083132403 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08167563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089327784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081136389 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073058278 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064123045 seconds)
  done (took 2.060698365 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08240143 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08474632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070842024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082978996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064832474 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082470825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081952349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086604391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081854148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074642421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063536913 seconds)
  done (took 2.057974283 seconds)
done (took 7.677130721 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077981381 seconds)
  done (took 1.271110485 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593437569 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.116310404 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082025774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111484459 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189400168 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118814761 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272674507 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087538296 seconds)
  done (took 8.946596293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090279831 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069401166 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084152067 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068311725 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06792307 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072283006 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069052419 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072214943 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06820633 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071402332 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069553336 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069294047 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071013726 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071364986 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070938124 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070730797 seconds)
  done (took 2.423498203 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091886817 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09172433 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0735047 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074818393 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072572822 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07177738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074140903 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073908535 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070427007 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071877919 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07445415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073565348 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071295484 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06468809 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073998584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075079681 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071187993 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073593458 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074407671 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074842126 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074162728 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063880046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071563878 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073598064 seconds)
  done (took 3.080544619 seconds)
done (took 16.923445387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114457132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071072769 seconds)
  done (took 1.386010007 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081261893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083236536 seconds)
  done (took 1.373703947 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083044657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064817544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091015189 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07784409 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06659358 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065647718 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088153371 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066147044 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066158482 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066100808 seconds)
  done (took 1.943935744 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068171981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077955281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070032992 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081445443 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073481873 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064266014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071890058 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067502496 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077264426 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062810113 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070895663 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082456421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070894181 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084314434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07166261 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06822157 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070515678 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067121325 seconds)
  done (took 2.511633765 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065194483 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066652964 seconds)
  done (took 1.345690958 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066612905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063299056 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067042437 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066958575 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06359043 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06216581 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063153146 seconds)
  done (took 1.665153194 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38576292 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113700295 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315080399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073173843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082868912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257348081 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066016596 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070652504 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070108618 seconds)
  done (took 2.68992807 seconds)
done (took 14.131943954 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079501963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086898292 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096954466 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374054131 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09144954 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065490281 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113669713 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187286787 seconds)
done (took 2.32239408 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212147756 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638208559 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404447747 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204558803 seconds)
  done (took 2.464086588 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343439956 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088044452 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060278992 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067301401 seconds)
  done (took 1.787707392 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066520868 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069182584 seconds)
  done (took 1.36345268 seconds)
done (took 7.0517015 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0666546 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086048024 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06522422 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066072557 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063670563 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066368488 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063321654 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0639451 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066327014 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065862782 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068354493 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066263916 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066073958 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063674516 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063372183 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0660241 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063784877 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063639489 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063326043 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063382541 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063604385 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066821487 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064075933 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063884706 seconds)
  done (took 2.842546774 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084157744 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066210316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071142927 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071506566 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069616798 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070920017 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071034098 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065396865 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071208718 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067964185 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068846126 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069402356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068433158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06941789 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068430404 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069681925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071689412 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066030829 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068279014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069220285 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07106113 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06600713 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069805648 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071290494 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068861278 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070977864 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068331819 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06627072 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070935386 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068677167 seconds)
  done (took 3.326970374 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069398514 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063104891 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063893116 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071291554 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064210217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064489062 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063358208 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063565385 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064734389 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063581268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0648071 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063839203 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063334961 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064580749 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064544693 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067320047 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079240175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063769648 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064246178 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064042618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067068664 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063527446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063687037 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063448994 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064248848 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063562787 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06395408 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063593591 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064262712 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06376642 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066707595 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067701711 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064222841 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070839028 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067331202 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063238304 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067644019 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063336678 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064107643 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063126362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063031313 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06356544 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063492094 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070558368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063779098 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065355898 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064003811 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064512562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.17677475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066451908 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062875122 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06337091 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065469104 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065151164 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066999126 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062933018 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064414245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063494935 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064653366 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06327031 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063137637 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062831108 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066356829 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064231171 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078884404 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070001549 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063362213 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064654496 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063778077 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065697116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064429294 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076530025 seconds)
  done (took 6.056827096 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089709703 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086387324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064598761 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064932275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061511272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064048888 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069284818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064001456 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065053146 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081141019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064187533 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06495786 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065695059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067199388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064233206 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065152684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072180579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061474482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06356389 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066972556 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064057253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069545853 seconds)
  done (took 2.74417242 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154334973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070379798 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106059522 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075267329 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069513905 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07482692 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0693861 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069980964 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069538884 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067365216 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06742022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06971329 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069548767 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067508017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067810839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067626127 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069999063 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067412866 seconds)
  done (took 2.611122628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077395183 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066528988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086939138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065622167 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065756818 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067927524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07019571 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074041845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068369155 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066197172 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073580819 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068458582 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068018746 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065749919 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068094701 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066238564 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068154608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065563706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073492438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069969192 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069800309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073989624 seconds)
  done (took 2.779011971 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079741483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067722416 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080370823 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067809648 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061805848 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063871727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069772753 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065636034 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0694305 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06776095 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065594902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064093211 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068908647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066104993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067936256 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065098851 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067018937 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065550762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067278505 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061429677 seconds)
  done (took 2.593667101 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08680609 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067301361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067450394 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075844889 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067642549 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068017263 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075254751 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067255517 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067592872 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087767425 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067250716 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067639148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075310786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071873543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06780644 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074569344 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074844492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074623329 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067117912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06732723 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088187749 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068044102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07491832 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067403145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067236549 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067517058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067904169 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071804314 seconds)
  done (took 3.254927383 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066545301 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066450888 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063349478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063335509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063205326 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063370878 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063274197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063310447 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06613499 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062968152 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066039443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065938493 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065878881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065383066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066216184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06623855 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065896073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063516755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063288139 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063742275 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065745668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065712359 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066036214 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063689078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063397724 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065705584 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063414961 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063435101 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06682982 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064179253 seconds)
  done (took 3.187643065 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075438556 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072366705 seconds)
  done (took 1.394079831 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062917797 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079631298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062872193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070104947 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069625169 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06624238 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073799443 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069281323 seconds)
  done (took 1.796773972 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081942207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077378402 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067399481 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079102505 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076878772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08316926 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134998311 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06683737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073379666 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064791836 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080151367 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065667479 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073089816 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066957811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072227472 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073058384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063621048 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071952894 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068557437 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064498776 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067648678 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075099191 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069369198 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061639676 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067328624 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08823674 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076756088 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065709174 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069487772 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073077878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071857853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060221799 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065900753 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066538847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063987296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076277804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080725871 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069199887 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074749988 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06689104 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075948106 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061070794 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070461797 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072994079 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076212122 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066354275 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066917431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06103326 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064573554 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0681192 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061246573 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069117632 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060974397 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073167282 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070081258 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077249848 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065558379 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067997056 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069468241 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069616379 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072938034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068637035 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069556888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066131025 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076207017 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071196983 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074501889 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061028346 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060164777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06400083 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075552733 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088815731 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072121486 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066602433 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067036679 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063807461 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069452241 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066773244 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071339098 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072934784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066130821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071450746 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073575208 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066459618 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068662447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073721202 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064384747 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068622499 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064066927 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083116003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065360246 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063973528 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064042405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07670072 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069479121 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066710146 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064245847 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07366497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060370244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066582301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067288191 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0670866 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07677486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070464371 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07004661 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073965113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072681709 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065742596 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067831872 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062355291 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066743294 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064332975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072211823 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059160711 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06815647 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066250989 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066022171 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073193856 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063399142 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064702578 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072628054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071017932 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.18981844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063165405 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070329986 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067182537 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069815001 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075309699 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064853956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061838389 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061311848 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069971681 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066759112 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070143814 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071255435 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069781324 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060803605 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064375579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0719091 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075175699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067062492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068584283 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072160332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068249205 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06582076 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072865696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068914581 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065526148 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072488672 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067601565 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061681066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069284652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069281547 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065216086 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069975042 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07049157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069129891 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067030892 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065432117 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072634111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066800899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065539045 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066406879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065052031 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076768003 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068785994 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061658705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063569784 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075437394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064810333 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066263062 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066106831 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068689124 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067586669 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064104538 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066198231 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068599162 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075932401 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06957348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067365875 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072504298 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078531951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066416745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068555777 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065764881 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067381399 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067287725 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075188818 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071858236 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07135472 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068713586 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062602539 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071811533 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074307551 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065247711 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063560301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065075132 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069340714 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07155174 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07029416 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067470403 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064142658 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06719774 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069653822 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069024197 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065639599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065553549 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072188851 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064194779 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072657264 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067311624 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07640981 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069437763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06106053 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069233353 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064360442 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07233783 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060979425 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064312647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065541661 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06690399 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065288535 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068312167 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060313627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073391609 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074148838 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066743805 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065464275 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065624984 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07346976 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067306401 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069211307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068883658 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071144005 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075988279 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06438921 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068609097 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075595668 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06481549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059340816 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070484454 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063593088 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0640871 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064051939 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063067769 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068143164 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072619106 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071655904 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059045034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067557274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063337766 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064087397 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060251576 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069641758 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06764141 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066455789 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071448534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065334114 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0653799 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068746459 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06450178 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066122439 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065811996 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068154126 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065832357 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066802502 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064408232 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068046213 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064254258 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062828784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066732029 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065049607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065507064 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070066931 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064601887 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064931956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067185283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065235764 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065656703 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065266009 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064345181 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067629402 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066240874 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06514148 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06729808 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060544988 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072085601 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065259139 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072255787 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065295135 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061789422 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070657233 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067561832 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070227946 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064232912 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064651282 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065499946 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063632853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066541023 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071296559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062737786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074234734 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071393323 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065014516 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.066645814 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06410919 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065080477 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064049601 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066126782 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065107572 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064905567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064363461 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069787232 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066782061 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064818654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066434984 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064945462 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065447596 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064877824 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058652025 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063432933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064228982 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064625844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072710526 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064669043 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064369501 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06407594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065226286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06351373 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061123984 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070548464 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071116665 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064411208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071193214 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064217732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065272218 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073536547 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058945803 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062153764 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061976218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062376336 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070542864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064526049 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073136997 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065013323 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063795671 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061191721 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065103652 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062845219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058266976 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062389885 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067351384 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063751471 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064177033 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064246511 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067238082 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065270433 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073785422 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064079702 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06514728 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064184633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061323247 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063891736 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063490297 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067125428 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064866446 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063044361 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06220942 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063899819 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065379717 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06627879 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066321086 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065798702 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070737047 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063671844 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067079625 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066166556 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058946612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.303704548 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06837181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068505059 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06817421 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072554126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072799239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070112548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076873982 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068737888 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069721071 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068574765 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066082673 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067748496 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067701367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067795872 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066864009 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069286407 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075933071 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065461994 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07094276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068074913 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06833913 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075080938 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06828462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070577352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073509066 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06864325 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068857493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075259269 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071544159 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070509497 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068491924 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068628896 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073031884 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066809688 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073777193 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067902078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069087065 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069577253 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065232634 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066930567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066709556 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06635748 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073286582 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067690658 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066568732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066286949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064660106 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068075555 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069726792 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075116867 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069310505 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069870278 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061689028 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064289836 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067335202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064859566 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068783664 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069433326 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072943521 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068978179 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067399262 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065662892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075872191 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073274224 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071001588 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064724586 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070626913 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068110786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069199751 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067722781 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066916756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068174567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07081663 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068409598 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066201643 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073582494 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070455759 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06847548 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06845148 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067579169 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067037637 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061995682 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066929106 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068566558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071312286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069114471 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066616287 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077377263 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065221984 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067187492 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069899662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065956969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071237224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061752901 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068120655 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067395227 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067366456 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06181572 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066249898 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065644941 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068936507 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066163797 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061431512 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077330674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075918696 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070297912 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065712102 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065437578 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061521167 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061791488 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066277424 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067804815 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068420281 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077689998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065924419 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06624669 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061537533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066717858 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069070995 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069547992 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063491393 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060939825 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065456496 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069105479 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071297821 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064708952 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066480701 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069397231 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06836505 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.200378494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069691071 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063700163 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07019573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079540287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067313943 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067787298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07282152 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075308113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066840844 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062512948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066396987 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071004643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067220925 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067458028 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067758303 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082040089 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069801396 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065970106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065549972 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069235499 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066208185 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075025191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067547227 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067655339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071250995 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068464409 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074618513 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069766755 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073996028 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070243686 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069908893 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06591822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067213171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065126369 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06597696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067405062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067337674 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070827695 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074018695 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06590525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077265961 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075980756 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068915212 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063505458 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066091537 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066465863 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06154702 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067391128 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064578569 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064921391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064772994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065294641 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068479143 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071660631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067532038 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067010748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066695705 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060874037 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068605275 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069672774 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0680047 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063757176 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066697833 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066909521 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07092151 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069534127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064218074 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068634728 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068337966 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06768931 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061619068 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072980277 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066127049 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068653032 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066141498 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066801249 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066934427 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069757864 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071029426 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067972806 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068761375 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0705152 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068178755 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063981655 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064097664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072407451 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064294517 seconds)
  done (took 42.347698738 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101325142 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063437515 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062912889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061946813 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073461304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063614854 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061691874 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063324789 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063022393 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066013883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062646877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062363313 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070682642 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077963111 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073721066 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066860131 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062158616 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063141039 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06278665 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063879156 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070521562 seconds)
  done (took 2.803384116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074293897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077961276 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076326617 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083403428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071713384 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070965852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075508645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070700719 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078769203 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073150266 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078965561 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070563584 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072790143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072861222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072751097 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071232151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078888815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07160832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071080574 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075744216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071633733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07543019 seconds)
  done (took 2.98838667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068020288 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066724936 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068689557 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062415511 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06543088 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061545805 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069902039 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064475965 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069236887 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065710219 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065851048 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06605635 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068854123 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061415521 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066976873 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064359355 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108540739 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069953248 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066290678 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067516942 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061620386 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068434544 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062495101 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062023511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06576717 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069976541 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067243325 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064445478 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066366997 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065333037 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066180692 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063848105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068288356 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067176744 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065651995 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065106966 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065580781 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065712162 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061214601 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063892332 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066206944 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061588754 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066073549 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067369438 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06412254 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.0634969 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067392331 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065357129 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061351531 seconds)
  done (took 4.612709171 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079495846 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110080581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067141524 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091470763 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079398024 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072907431 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070306228 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089776386 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063403789 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063921146 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082538464 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079302912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065557111 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069967493 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072727554 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065678566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066456534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064568568 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069522165 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064973651 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069216162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07212143 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079782148 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07798932 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069407957 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065381492 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065014503 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069950908 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077168165 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06971479 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07009139 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070423267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080308951 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066999484 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06492696 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067960865 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080861467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065514431 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067507616 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063395168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067818293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069648253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07195782 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081192853 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066056538 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070585187 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065022565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062906393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077286446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067511962 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072876622 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078926453 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069490029 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06540648 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070239364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08020524 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06551875 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063529922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068281825 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07751909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06307126 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068912045 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078303296 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067144262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072195201 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078842323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070267864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068816126 seconds)
  done (took 6.380966362 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075509001 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09622241 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083757902 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083192449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07518162 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075369499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075701589 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07537221 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075520503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079672327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07606591 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115266455 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071100224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077827036 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075483601 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07552661 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075668359 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075527241 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075869568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075439323 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075606016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082904259 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076235545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083622086 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080214078 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071040879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074957547 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075546454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083306793 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075878958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088434593 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075099584 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075464569 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08312215 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079798859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075107922 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065800876 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074907795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075606828 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075325276 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070865161 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082720687 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074674968 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070517822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07563159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075006497 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08264711 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079247971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077403394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079631635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075253587 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082981478 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075334194 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07541628 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082623786 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085586473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082422455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082780596 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075342747 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082287442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083153621 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085097893 seconds)
  done (took 6.251824141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082663246 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073137443 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082065467 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061215922 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064330518 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07155163 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064387845 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063975557 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075248544 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075782347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077475605 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072363663 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074359396 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07636425 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071522634 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074414834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072267557 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0717749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073690114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07149502 seconds)
  done (took 2.828522361 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074209344 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083285092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066774846 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071127572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069108069 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071440208 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068356475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069388452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066956971 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06887396 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076422511 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076077226 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067125689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07158038 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076050522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071422582 seconds)
  done (took 2.520101317 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084263927 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073073221 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080251603 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066418151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066833081 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062772746 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066087848 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061308927 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062082596 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078643699 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065763202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076255892 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065757647 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064925256 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062519803 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071018462 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062121391 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063416104 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065461871 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078420593 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069559637 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064420412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069088309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065561001 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067936793 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070161445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065008728 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066243401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063014304 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066542009 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06927853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06913248 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063416922 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063971608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065011207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063744263 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065565573 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066555989 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071400196 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06599248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064657495 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067586883 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066269446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066859285 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062178119 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066756155 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062392453 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068332109 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063921253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068553191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065625892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068240991 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066698394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072557856 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068821967 seconds)
  done (took 5.08228467 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079099303 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069941866 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061947949 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064009149 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069296897 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067843768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069432844 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067379858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06718416 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064180475 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067321352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069286339 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067611745 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069807084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067481972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069436091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061663327 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067700389 seconds)
  done (took 2.605489619 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071460311 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066518301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073851564 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066171165 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066056436 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068383481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062514476 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065236052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0647073 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066010295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066129778 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068926811 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064763558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068063428 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066131726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065513836 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068572081 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06492699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066130243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062282948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068371414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06519481 seconds)
  done (took 2.844719971 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095077756 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083384764 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14151865 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078994776 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085089939 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072021752 seconds)
  done (took 1.93634591 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091709513 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100785859 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06718363 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06916308 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076062451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069859332 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070350844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070043262 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078290378 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075794599 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070550357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078505536 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078586864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077792695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075678815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075788604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070430188 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070436561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066329182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08391128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070055916 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078898128 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070444224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070016799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070635797 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078135092 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078664925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07587513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070284134 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07837973 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075777514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070059614 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078890319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076519961 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069792692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079033982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070163494 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08358714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07570247 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077777082 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069207354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075894943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077699406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074067868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078043225 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070970677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074548091 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070515404 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07044085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085748514 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075827035 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076966608 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077802713 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078858251 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078645887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085195209 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076422576 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077294529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075927746 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076156995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077480276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076089921 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077442854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075802104 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075638847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077809056 seconds)
  done (took 6.387285582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104276163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067251025 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070233069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077169283 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078093953 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070430579 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070240681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070113835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070186393 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066700191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108297179 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07032008 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077439706 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078362482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070235758 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070413771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070647827 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077582779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067449359 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085703606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070602493 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078070766 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077893999 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077336972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076362547 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076162241 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070484077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070186125 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070223255 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070457779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074477413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070719547 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077578386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067144327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078051669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070937965 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069842346 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074716165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07020519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076162966 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077927862 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083675086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06984764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069813133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076144103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070253632 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070268647 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066892122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069646047 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066754122 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075823337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076048852 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07597899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077135989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070211906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070204014 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070165506 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070001507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070583518 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075661577 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077049124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069833341 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085792498 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07019201 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070144933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077811171 seconds)
  done (took 6.29020809 seconds)
done (took 129.693687506 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192078376 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165246341 seconds)
  done (took 1.733431297 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069226703 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098824225 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077412547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128736449 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067147935 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100423999 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099837236 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078011843 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066483112 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066648008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066827165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068857434 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131737612 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066681074 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067481075 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068952137 seconds)
  done (took 2.712655142 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098966724 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162559624 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102997621 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064693553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098981901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07331958 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064995503 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07552572 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071040378 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065693272 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073838026 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071003215 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065490679 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070726091 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071187569 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073071895 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065329251 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072809119 seconds)
  done (took 2.834820676 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099484504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092092212 seconds)
  done (took 1.585236666 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16364199 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107500572 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148433851 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351343963 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16408997 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151709968 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146802291 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145807758 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119591868 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140173104 seconds)
  done (took 3.029386483 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100392084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154218094 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266805053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117879878 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073398912 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094246061 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121080028 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078994292 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08072008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080215189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080383924 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076686752 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099872593 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073058238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073724796 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076152554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103313106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073130549 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074385481 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075956036 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100914385 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06632418 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073372615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073475818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077065039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077334017 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066409828 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065721998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076301721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074600066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076154904 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092479262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077363645 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105572434 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070952327 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106628858 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07651933 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072783538 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074360832 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073389479 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077653181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077830263 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072581707 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076170205 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067062335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076632061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066419087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066009849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077479928 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066943714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077861 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076269535 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105293029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066846567 seconds)
  done (took 6.023834897 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102835648 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1058768 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07182474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113328339 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102786648 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072720131 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102933349 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095471434 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103483517 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070817368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068410645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070815423 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082387939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083198022 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115798864 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107044876 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073685348 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071579348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106369843 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105483874 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068575089 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097379763 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090989092 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103108051 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067762309 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070408427 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068451272 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070197255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07645065 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078561097 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069803031 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080944882 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085022275 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078581916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067737874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068411248 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068624185 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079716474 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079274081 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079142015 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077649269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068029005 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068354319 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069709359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07013895 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067923461 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078735812 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080334495 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078656288 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070177205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07109417 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06829076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069533379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080314662 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078113046 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080670793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080130386 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068118099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068696153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072818199 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080625311 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078971247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079152405 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069171851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079196333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068179691 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080266329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084628484 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068272843 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070365457 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069156453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069705646 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069542229 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077491906 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077549089 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070148301 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069856254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068567776 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079718577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078034345 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068226557 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07656847 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067511566 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068564227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069586927 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069385474 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077532057 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080083579 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070019516 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068362962 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069305629 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068428169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067578176 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07665899 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080606881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079276327 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078744586 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070434051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079038809 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078409102 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070107501 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07891772 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068134099 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070279072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069574281 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077755382 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076648647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078670411 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068810811 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067852776 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077009363 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07920485 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067903551 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07652558 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07867177 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077747916 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067390076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079297203 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068113852 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078247124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068986383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07798521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067577489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07760615 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067348209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066765558 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067843162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077428694 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071509663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067179991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068773338 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068708124 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077609631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080102097 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069610027 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07650884 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076896866 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069142108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076792622 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068372204 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077536995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068550184 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068591998 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066403974 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079865187 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068262612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06743018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068458984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078475273 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068077373 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078329572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076176312 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067063109 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08025251 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078165738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075548828 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078271493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069578414 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06755187 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067241389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067867111 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075891495 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077507025 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069128559 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067383253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076035324 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077485732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065913264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075989425 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076329737 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076298372 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067510047 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068570715 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078189032 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078291334 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076585376 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076312387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076459757 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067339354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075626971 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076490153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06727271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083356577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067277276 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080955178 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07691128 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075010318 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076692596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078671577 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078363989 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078203802 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081694122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067732524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067300641 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077971808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06747033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068845363 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076551098 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069163848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068892094 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081611751 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068007623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078839102 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067391212 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077447949 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066702637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069046619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082115965 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06805016 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069123605 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077751815 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068560277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075822688 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078674208 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077032108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067413579 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067671218 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07599067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.319747236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070846876 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07129061 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073959535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081375393 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080341004 seconds)
  done (took 18.555992239 seconds)
done (took 37.875279329 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214397337 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157437454 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185740789 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120814524 seconds)
  done (took 2.206321094 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119374812 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103049477 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094968497 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066572717 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101139266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066604636 seconds)
  done (took 2.012705077 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313445818 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212124444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190433982 seconds)
  done (took 2.17357251 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203033795 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189967943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423217099 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264051305 seconds)
  done (took 2.649753548 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145571273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0890497 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068161196 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084364008 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133511303 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160410709 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100310607 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125445931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079104946 seconds)
  done (took 2.498132967 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149284912 seconds)
done (took 13.147422791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12124928 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203312476 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092995019 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.173199242 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073702416 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.116142762 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 0.172013537 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.237846997 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088968011 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185208172 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083183002 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082450052 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082072967 seconds)
    (14/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.177540426 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1780703 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078553174 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074140832 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.155192294 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110807882 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088189264 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173363717 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133994074 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074544545 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207301261 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.216328713 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.240279001 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080631018 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077564701 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091369108 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07393605 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071961066 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110402343 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.162729694 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077260825 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088946024 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095017733 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073049401 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093279079 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076943916 seconds)
    (40/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184859245 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073413719 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221426235 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164730731 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051369856 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.200792309 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074701279 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125348321 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091718702 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085821464 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065253837 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083182038 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052395913 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077245477 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14696622 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094224763 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067721344 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07462666 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07644092 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051290689 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125878024 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185809906 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079162047 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069531008 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170907326 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156022583 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077850294 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 0.130369883 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184085109 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069895204 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066358194 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155298636 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18152569 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069991264 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.186352152 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076445264 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.066554798 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067202102 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052525565 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114023132 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090108893 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072636442 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146645974 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070253037 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063674576 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090739313 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097144976 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077097082 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.27424955 seconds)
    (89/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052931795 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092416244 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07580895 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078409273 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090996107 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169269008 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080850677 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071270848 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090615759 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07435296 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067762339 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075160413 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162671243 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073054102 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109111365 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198505197 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07879925 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063317934 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068058648 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06571582 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073691917 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154930847 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081341836 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108578904 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073349086 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.133084663 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076904334 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072659835 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145257918 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088968912 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089139086 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.1777772 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06825768 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05208808 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052321232 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208264985 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195999676 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051975179 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065872172 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.13633078 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17277951 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198985566 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074121966 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072676584 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07170691 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073689817 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050624892 seconds)
    (136/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110844365 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069935025 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065474604 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0718669 seconds)
    (140/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141807644 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191026108 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074246594 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05116194 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162121471 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066938674 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068723411 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065655907 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072846936 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050755667 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076366238 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092970935 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081102699 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102170789 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155668788 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077613806 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072787107 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074474143 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066129787 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072057482 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076267442 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074368566 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051880542 seconds)
    (163/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052518632 seconds)
    (164/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110781281 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.29122822 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073965168 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068911429 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051526887 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104502799 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075711111 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17656526 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090232033 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067051742 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066785478 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051884586 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100828714 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068327926 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13418196 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112750703 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074301926 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07330013 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067194778 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089420962 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.164205391 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075449925 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061791736 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.176210368 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117139177 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149781112 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089266702 seconds)
    (191/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071937681 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090547492 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051524655 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065351768 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066254295 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20486708 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.155012179 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051048769 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.27328271 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071614847 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066519248 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062449153 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073380567 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074946701 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051780292 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089249737 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051590705 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072232588 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066503074 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065245201 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075693085 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073163855 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053241739 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065657867 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06573362 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100872616 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050991987 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065608596 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065785863 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052128422 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052298119 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071613503 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122442705 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12583725 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139035581 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064776504 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052243508 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05274906 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06259255 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05239064 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140642539 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099410855 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051426704 seconds)
    (234/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188269187 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079904197 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051582611 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072999929 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066311051 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051105035 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089446772 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098861106 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052045604 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062233747 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196266591 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144609299 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072708567 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066200231 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131540506 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12027277 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051545838 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069337104 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052503711 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072853829 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130348063 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054259194 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091302493 seconds)
    (257/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061469196 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073983121 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0655297 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05134474 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051023187 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074243829 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066117687 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061911784 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052172675 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067795246 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052517346 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051403372 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065436892 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050866939 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090815564 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065441573 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065097192 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088616776 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053628149 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05265729 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050940433 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074229847 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052701661 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067026486 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074092015 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091326933 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064335515 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096102792 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064902 seconds)
    (286/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051887866 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065701444 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073258217 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066071246 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065852972 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066557606 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054212709 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05431433 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072104521 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087372009 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051455752 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091066521 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068730849 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090829182 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072351319 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051372823 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05144197 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064081938 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052713169 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180628693 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064998892 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054131398 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140560756 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052252809 seconds)
  done (took 31.152784761 seconds)
done (took 32.623887477 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085051227 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09466645 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075409966 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095106773 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081714325 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07717617 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073418238 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079299753 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080951496 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08247948 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078734246 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054612072 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074623346 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074980977 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075252462 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092344855 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079225765 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073749053 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073907086 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065467919 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073637797 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066089874 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067287478 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054332085 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079128691 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072086 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072895019 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074287216 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0662751 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066085388 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070253993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074022567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065349018 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079219158 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072897796 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073376815 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07527577 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077090042 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067851869 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066034653 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075062692 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066015632 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073244245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074594729 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072396369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072045526 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073952016 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078665895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091707164 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06816517 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075508271 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076485938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076264099 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073187493 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070319263 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073360127 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071689367 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091627788 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073928633 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067847463 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074655023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074931366 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072620154 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073667029 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0734221 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075738608 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076757543 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071760121 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07511708 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072077581 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065524804 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073408791 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06969884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065741837 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076095396 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078071127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064677912 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071720741 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073185707 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071517722 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065362882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067501763 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067643641 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072513289 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067440716 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05432623 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06952583 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07282162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065174365 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073699983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072170632 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072827855 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067319657 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076671219 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064775034 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071251696 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066158412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065268957 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067132269 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069516409 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065541508 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067590746 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074451246 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066763733 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072152765 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079278559 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065343191 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072771325 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064748916 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065004696 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080029102 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074929203 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065876667 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067580729 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064401464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07287366 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06459018 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065487133 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065688826 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0654535 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072108675 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066585769 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067709536 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073235197 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078294607 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065798418 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068820288 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067173206 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065046577 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071129362 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065445848 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065271928 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067039482 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062235939 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066911049 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065300147 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072483363 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067565404 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207135278 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067865579 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073944672 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070937391 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071881678 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071705699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06520292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059370776 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067999329 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06708003 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068214656 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066291536 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068002673 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065935262 seconds)
done (took 12.592553495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066498195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140083623 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097866908 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096373845 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086716323 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066945937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076982501 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101496914 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068483043 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10237309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088220566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086456176 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11430421 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06467256 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066161858 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070198837 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06732666 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081840236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101859008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087171092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1158181 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065544728 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093422064 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090100519 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089016081 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094511722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070046522 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070848302 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070479813 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102885534 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088685693 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070329999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067390947 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099097091 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094161037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084217394 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066582771 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083344159 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066769002 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066478239 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067901096 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099840388 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080914153 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081609408 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070803558 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069648507 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067321249 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083975608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090648495 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07966752 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086940982 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102187475 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069255161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066047178 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064705035 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08695193 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065495181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069391356 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066797822 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069036656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066108057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069744603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08130596 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081153269 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070543469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080311344 seconds)
  done (took 6.899956739 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085046833 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091470934 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084962314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084353816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065806302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066730847 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067170802 seconds)
  done (took 2.113042227 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067160207 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088481475 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089957031 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089428857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082246103 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088261929 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075929367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067214748 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088540439 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067540092 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088193559 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101328982 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069933162 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074309526 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091084853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066815565 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090889058 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06717804 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0697131 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09078187 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069037123 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096011159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070003176 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067001571 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081695637 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0672714 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114235555 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07092951 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068461245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070338921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064686763 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107475202 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080784677 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074498086 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066659955 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081248364 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081556551 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065547966 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083214071 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075141248 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080347035 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067578604 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067513982 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064505374 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070566931 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077326467 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067407693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066976948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069594115 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086509478 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067299211 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080090716 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069496995 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072246035 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067796424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073218335 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077195822 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067571469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086706682 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067772221 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08364651 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082801844 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080383507 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082399738 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068830161 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080677485 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080381684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069138154 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068641227 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070382576 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083189554 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065103159 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068407921 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07751621 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068954133 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090739134 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090094152 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068897395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080691657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067696306 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067244173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067734211 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090068126 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07238908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066495205 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071106127 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069992896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065112837 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06609127 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07092063 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065025965 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068298447 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069513876 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069597716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069122115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083666411 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069247689 seconds)
  done (took 8.906056464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069013253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068013989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069579372 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068316741 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06836385 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068457948 seconds)
  done (took 2.00069678 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093043075 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068876758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079915803 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073343203 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105026658 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087052738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087635333 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078286521 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084024261 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078628986 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087403517 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088852124 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092561128 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072522468 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087307978 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071827347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087070089 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075200803 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078501843 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072661824 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087022188 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072794822 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07266052 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082307382 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076376786 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071579931 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067616126 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078896263 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078549473 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078644031 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072292438 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076539813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070896675 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07872304 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087055478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070807826 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071605127 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077324189 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072597561 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076115531 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087856059 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072964804 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074369532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077183501 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078304718 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070659858 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076958489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075655447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086705378 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077406926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077111365 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070961836 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07542818 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077577179 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071076425 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077963164 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077611329 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087174509 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072189624 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070415475 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068507638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075911677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078418146 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075318567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078957652 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077396373 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070800211 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072701923 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072919423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071614896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077648269 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068616439 seconds)
  done (took 7.162725119 seconds)
done (took 28.634597345 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531741837 seconds)
  done (took 2.085845905 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612712678 seconds)
  done (took 2.192194442 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.474443796 seconds)
  done (took 8.053433038 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400215063 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524571749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721080184 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131702459 seconds)
  done (took 3.393493864 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701987368 seconds)
  done (took 2.287535974 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215180352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202313116 seconds)
  done (took 2.009735574 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374949628 seconds)
  done (took 1.952492309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133019334 seconds)
  done (took 2.713024749 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257722105 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174999322 seconds)
  done (took 2.017229764 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.472456668 seconds)
  done (took 2.056328311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855777812 seconds)
  done (took 6.441136313 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212162335 seconds)
  done (took 1.836447094 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234810943 seconds)
  done (took 1.819047645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.771848686 seconds)
  done (took 3.354737162 seconds)
done (took 43.798826521 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080174914 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08101741 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080055579 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077805457 seconds)
  done (took 1.886827032 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076617648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072769875 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076800698 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072290373 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076575798 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072182911 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07417079 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075239208 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072814399 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073102465 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072432358 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073218133 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075018018 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074069689 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071278325 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075056336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076178941 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072613233 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075197199 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072671291 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070622861 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074659816 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074727577 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071777546 seconds)
  done (took 3.357843206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077687022 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0733475 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075223451 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072600598 seconds)
  done (took 1.891410075 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077651843 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094598695 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08976444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078749046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092505089 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08680971 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068957242 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069153067 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07032662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07775885 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068528764 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095964889 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088298125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077152715 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079880304 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065396476 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067952765 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087269196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077564637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078176474 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06998444 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077415892 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067606367 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088790613 seconds)
  done (took 3.48431429 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086230063 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104591864 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081801925 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088257757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091002594 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065026005 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087250543 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091674199 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126744532 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065523509 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070408019 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065552425 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072836426 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064783822 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080784308 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107283261 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111164881 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068484538 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096800196 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065445644 seconds)
  done (took 3.290086842 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072269268 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069856937 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066128386 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068533374 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076798514 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073050503 seconds)
  done (took 2.026299859 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068145947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067400974 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067190858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066363846 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072411968 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067009296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066731542 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067375142 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067747321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066749138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066944799 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065609945 seconds)
  done (took 2.404956569 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200975562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067914064 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069087252 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065789759 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07093316 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066081195 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08101032 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067715083 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091386682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066330708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066521586 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068199302 seconds)
  done (took 2.579946964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207185102 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075958796 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23937077 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150838815 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110281988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115228699 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112004535 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113527137 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141950603 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100679949 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16859833 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166444021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108197409 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136917735 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088828473 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100440152 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154187397 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162642297 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104955707 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167232285 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144919141 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126861229 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15314405 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1014481 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10576177 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121914003 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071355398 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079572279 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16952395 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132807247 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143715167 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110241161 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091817889 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176222922 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171541362 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141324775 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147606687 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084908326 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104936865 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135133427 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201254823 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088649819 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162448373 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108703473 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218393771 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133487318 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11996048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119943566 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105424894 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09020832 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14589795 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183757025 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136261247 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086826616 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123800346 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114633973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114096211 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114219481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180377304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161461527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127683515 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071085069 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107875274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154062723 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134103234 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108722809 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124946628 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092203219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134990233 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155097859 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120025461 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144690448 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116281273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08846297 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119464369 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140050646 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127511618 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160905199 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124244636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072596912 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123436804 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101397298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080270654 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144579705 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074752406 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176511543 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099158444 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10941335 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124793219 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109740881 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108560625 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159249426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102859281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065319869 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246056706 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121517529 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146526706 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087415904 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108641041 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117256194 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078042438 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13783267 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075115458 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124005954 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077402998 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128000544 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130803274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076212646 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122632503 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103960292 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100749788 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132558741 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160305594 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088049574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081050418 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169511975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122158138 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103592874 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144254228 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157371185 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102002479 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100982399 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149048844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179336871 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089549007 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163470188 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105974207 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083003264 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087282665 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12317551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111409887 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123101346 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081735306 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1181252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169144482 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074811955 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095359813 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133172942 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078985374 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080936071 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105495699 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105631451 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095640918 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100181668 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102607335 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135866624 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123464797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104964587 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123508433 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098306265 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316245983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088133408 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102225548 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104967553 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070090666 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134841402 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15849286 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078854775 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163820193 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123562528 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116410725 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119547851 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083273034 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14028555 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080140461 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069978856 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144926334 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110533671 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109821563 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151283585 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116008865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125991651 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118787356 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13395608 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133218689 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130199969 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105643859 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088029636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111501298 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126927173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072674753 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090797894 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080270595 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104883534 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095600769 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082923903 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140709749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123658589 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108889772 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112090832 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096482712 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14772051 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075935346 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127512134 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119396994 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095454928 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152939217 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153625002 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131497651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099277558 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136643885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070003008 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074007522 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087995747 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122645074 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081964041 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083422375 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258643225 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149046067 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130472351 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13685887 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124076696 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120636843 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157097756 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070488839 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117865295 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147125007 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12073936 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104045387 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089888162 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098606638 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142568083 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108129867 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183349075 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116533653 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123426148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15341735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101461049 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079949126 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103552084 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135461313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10348103 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143691266 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099918757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087910203 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109836896 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074227449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098714107 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126909224 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118797923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13506817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115347037 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131986291 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077074835 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115402141 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120850801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121574209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063922315 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120584232 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162418611 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094464228 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119414328 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154541666 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079403209 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133843759 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175761821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144155435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084454133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107787059 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264074535 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128378998 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119073121 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141328257 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10803398 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138259219 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109621632 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086172967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087110859 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097768988 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104393472 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094350116 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10633165 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113912039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094883334 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131093879 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103645386 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109988536 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117379365 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09890501 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090423477 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096114603 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176583018 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119320996 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17123725 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099220317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145190166 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164770078 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07471222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079859717 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078203846 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140241252 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084178125 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129888567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106667979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11703338 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123394564 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145086266 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095582576 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068156037 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109733555 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133089469 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123834705 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098733815 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10361371 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165101922 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101491511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079308579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114542428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116552395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103206047 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171241039 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06128769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10612399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075848508 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080316689 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127861099 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150703468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.222310788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103263469 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120297853 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111855134 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128144131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101788651 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109527378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126251907 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149949489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127516792 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088841765 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112191415 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128225186 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156483205 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104675237 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097261991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174152127 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152599643 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16004759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088186307 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11425056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114300423 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108567272 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138015889 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082853238 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162811457 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081698933 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135651697 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103369868 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089033307 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128826638 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107898579 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087982705 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148153348 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117717228 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082627745 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077220692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117530482 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119509383 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106456458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075631048 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13933067 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073627154 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132496708 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160236693 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080707016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107672986 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096855137 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079522856 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105496615 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10137592 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087035713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098923382 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318346159 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088396654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151692312 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134661711 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112498297 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137263855 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102583614 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63931308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077961693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153411843 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115727173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174128112 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100021167 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118073878 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109798446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122809663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14452512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104264861 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179434138 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130924322 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115702639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079843986 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102629905 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103621178 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087371097 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107435821 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113511348 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114748885 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091799125 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115427558 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12394968 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082249748 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095779309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156738287 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116799739 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143498876 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140248282 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085479943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11807745 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137795221 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07991102 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120337253 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15282825 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106567116 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099924906 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080743321 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099799984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158784787 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073335236 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158489792 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119580797 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108734609 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257906718 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112722209 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130527005 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106595477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121771225 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092167305 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109975325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112760654 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081460477 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076820574 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106241792 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110948972 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098474696 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097675513 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098688916 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151693752 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072041133 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098033209 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113980003 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143912194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174312634 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088385622 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082237218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118179192 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113658579 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112760256 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121192422 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078923384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082078686 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080661515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07816252 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109078769 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112355809 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11425658 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111440954 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162957312 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082758382 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232549542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095535918 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104945218 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070125825 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077869756 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09584092 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098316307 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107338572 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109561112 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159217495 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096018609 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089661705 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091039415 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074399919 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083503945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128837777 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10977527 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118921888 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098969833 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062129321 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108095727 seconds)
  done (took 58.981616523 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109103395 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081688476 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093594111 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143795183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122753739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202044175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153673184 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188201987 seconds)
  done (took 2.814666108 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068839604 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095565501 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103716497 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082612027 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067068858 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068898952 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231439126 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080592102 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066205565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098402185 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077717291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068567264 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427736735 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06622951 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067021749 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061154381 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067333794 seconds)
  done (took 3.493366986 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385905221 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60999688 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350340077 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071682538 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.445676043 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08713782 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.129155192 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129252986 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072948494 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537554585 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.403008313 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125417891 seconds)
  done (took 18.053446516 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075002425 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069388342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083189439 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083441103 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072459873 seconds)
  done (took 2.089456415 seconds)
done (took 107.970829972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080950548 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60770133 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052879813 seconds)
  done (took 2.394351257 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08283792 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086015487 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08551453 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083649727 seconds)
  done (took 2.046383636 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073673568 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076559896 seconds)
  done (took 1.851246098 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232094417 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163409933 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095534661 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083211152 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078962846 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079965168 seconds)
  done (took 1.953851555 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072129888 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074839432 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072828238 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076241016 seconds)
  done (took 2.000958808 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076851482 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052503148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054457071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057604082 seconds)
  done (took 1.948573732 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087926862 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079261546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079290527 seconds)
  done (took 1.95519858 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102749911 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085808075 seconds)
  done (took 1.894769045 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082550454 seconds)
  done (took 1.790318654 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100630825 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101673972 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13126707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110777942 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139217961 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109842133 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084694167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085975005 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076146878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087181562 seconds)
  done (took 2.734027327 seconds)
done (took 22.843666887 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078519504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368870492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360858294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090528746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676639492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356795206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.0236917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093010225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115005187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068319496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084565367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656904308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014746461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32391098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99752385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319652599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65022718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068408804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067869805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067841663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010047221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067877114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067418069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068388026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650582837 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372186295 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0680142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318918514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067808818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069975789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35624674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068215518 seconds)
  done (took 16.362033027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071136555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119716827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073450185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08564622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07026898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070373358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072114011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069117461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120866864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067839899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08593402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068172221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071913183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085961029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087593054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068499937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068769514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068552042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068705234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068914479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087876122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067500387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068259154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068937675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068293566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079939706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068331183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068399132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068742566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070355628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07108759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069088066 seconds)
  done (took 4.142359978 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114513031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124300612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074029207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104172139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110946613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069907376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143472119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094133825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127874999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06829148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085383752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068242891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102898286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069072183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088516473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068460632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069318681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068840667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068592239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068428287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087934486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067762802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068554094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068786957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068692038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081593477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068445167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068262425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068044008 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069945868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071718132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068699871 seconds)
  done (took 4.373719041 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073427722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075908947 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083931653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084939522 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070115886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071990457 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07392478 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069268557 seconds)
  done (took 2.333581866 seconds)
done (took 28.927313355 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079409783 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069579754 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073406303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082536778 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073362682 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078919867 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067697982 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075931218 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072700902 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073489798 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07563303 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068092743 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071323019 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067464845 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074250425 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068038435 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079624509 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072130864 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079423192 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079454329 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070352117 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073580165 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075325297 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079432317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079189815 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079105068 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077965375 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073328826 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068929455 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07094436 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077155979 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084153234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068699796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079115163 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067776383 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067681447 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071942401 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06807845 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080188712 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076821753 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06986032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076437027 seconds)
  done (took 4.821747536 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087807314 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092638042 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08613069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062174735 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067107806 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065621156 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088910433 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060082989 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059533017 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088453773 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055693209 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060046006 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066032562 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053916981 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060414558 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056934724 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062408234 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055663842 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060575536 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059966079 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0890621 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054023453 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077447716 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063569826 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055794173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061995867 seconds)
  done (took 3.48459753 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074567585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085826315 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089958998 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132002699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106304502 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079447236 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079139078 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095928283 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088699829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067242606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071125478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092342469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089213027 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073839908 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067214659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08645955 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083593186 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068833439 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073335172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094959938 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087306609 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085823569 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096550805 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084055101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067121155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070601805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071804944 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082137415 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072880821 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077623338 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072116151 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071532546 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069714971 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.090577994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071728484 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069538892 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092634335 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078904495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079404509 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068916959 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076378855 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069158388 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093281924 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127346746 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067707204 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074183452 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071714241 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078058432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068340893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088541107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079936021 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067527032 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071659559 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067062164 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068154598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081655663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070157057 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069817422 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077489031 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074042582 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093060067 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073037589 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083967785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067624658 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076401387 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067537792 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06852149 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067233584 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096976261 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069944761 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111549316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069561561 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069262923 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07764591 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076177672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074315486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068292663 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084093731 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07886682 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071938736 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077450241 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07138495 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071249951 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092605231 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070580402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069922939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06991796 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074038045 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072187915 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069797721 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081670241 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067462491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071366911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085905327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067989641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069333597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073515669 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07248315 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067771004 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079733838 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073143108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068639289 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076982384 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067695794 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070705299 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081474952 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074566145 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06717704 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072285879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073260662 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06880034 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069370749 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070694961 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070137626 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076600652 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074587084 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072670068 seconds)
  done (took 10.790197295 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165579665 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158066315 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069780628 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150049887 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076663448 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079687125 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153670232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09546686 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068350646 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068720246 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068881127 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111376761 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106214091 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116093541 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078941242 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067561881 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084831871 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115394013 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152617978 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14749512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085388299 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077341194 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070254879 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069420193 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071080936 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079027649 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086539377 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077076976 seconds)
  done (took 4.513763075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081152743 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105583079 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07445625 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091446561 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090777514 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068200922 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070308217 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069745746 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081540898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078543802 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068016516 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073280598 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07491009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07108009 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068768624 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074616672 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075160824 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069896632 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071202021 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07351744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078775644 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091493895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071949109 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067056953 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072570057 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067418059 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063557044 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084291555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068217671 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095481969 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065662994 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072720569 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082600254 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068897338 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067967567 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067976341 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067727832 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068085579 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069779548 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06658681 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066293495 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057463356 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067121958 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079164425 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074972193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056089925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072940947 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073242298 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073424758 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065500115 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071373797 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071023008 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071193577 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075487962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071675749 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073031088 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069411843 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074512925 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077164731 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067721703 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065133577 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066205243 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072904406 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065917196 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076773612 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072308386 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066479111 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067184628 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069618875 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074989872 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067608549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072266251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065289768 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069778351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072527605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069815119 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068822906 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066059243 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067970726 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06843119 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055581097 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068145815 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053768037 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071268293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066446582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066418506 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068146744 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073002781 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080197171 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070193024 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073804157 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069580039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066982542 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071058411 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060466762 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070600854 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083986516 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08311421 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068235245 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065673642 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081621947 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073216657 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06732131 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056648748 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072969935 seconds)
  done (took 9.282789196 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091692362 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070919966 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085543186 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091806327 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08780445 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.0753494 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077924125 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069427997 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083493573 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074068197 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077488986 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068191066 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07848626 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077327361 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070276271 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077600934 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072253656 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085543542 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083219641 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0688478 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076554757 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080727593 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090722933 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082298228 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081946053 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082424441 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090829324 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077823065 seconds)
  done (took 4.001243375 seconds)
done (took 38.614000444 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.808753261 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.980925112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.802888333 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.158758706 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.064313759 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.90434241 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.943035485 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.800276724 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.049396267 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.837060797 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.007597918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.993444667 seconds)
done (took 66.088246758 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.824465961 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.9502085 seconds)
    (2/2) benchmarking "String"...
    done (took 2.035292007 seconds)
  done (took 5.727402044 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017431179 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.357728291 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.047379876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.799480912 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.805094105 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.118499958 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.599512527 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.306838562 seconds)
  done (took 30.77684151 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.956378632 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.033598732 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.483751101 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.515955471 seconds)
  done (took 15.780351665 seconds)
done (took 63.948126592 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.812535834 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.842693666 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.808408959 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.78550828 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.861161239 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.811659256 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.071057383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.041267583 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.801988435 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.794859294 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.803539442 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.241172289 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.810827818 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.186042396 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.80296473 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.811710878 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.833180188 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.377728733 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.962111483 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816402322 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.804564282 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.85872291 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.809899492 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807834542 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.806999071 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.804173379 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.239530451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.80445817 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.431805854 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.805338042 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.834774448 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.341862504 seconds)
  done (took 206.37137754 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.802128911 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.9065059 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.95161259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.845145805 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.347663915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.983781425 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.922383646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.378278692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.806867214 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.814741574 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.094115104 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.80273612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.101944734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.753254146 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.831892644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810115041 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.941441788 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.10495535 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.83728818 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.97309077 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.817867291 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.968405065 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.933465207 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.061084936 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.826839986 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.834776778 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.962985111 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.829719811 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.999750412 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.935874003 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.846550586 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.818880949 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.027076878 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.680253043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.827875336 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.815501516 seconds)
  done (took 171.941957831 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.203596011 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.804685821 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.803694175 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802989397 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.816609376 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.803109914 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.925933535 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.929928249 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.40569237 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.564791401 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.857371441 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65637378 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.806640218 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.803384518 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872161016 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.818177881 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.806917724 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.819592039 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.83276524 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.804329458 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807539157 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.934615748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.817893174 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.247071707 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.811089803 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.804200789 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811536728 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.175739895 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.805372284 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811491805 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065969795 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.80666339 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.803966909 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.699824876 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.466160576 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.813579108 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.888892726 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.806647081 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810788533 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.807356663 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.02672743 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80643291 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.807102753 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.808151588 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.986160695 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.808027542 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.929167159 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.807549946 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.324482123 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.806510277 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.806884379 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.514880302 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.519084056 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.809197572 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.806209619 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.809328476 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.805148276 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.805267374 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.813931273 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.560131019 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.879796331 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.807856441 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.809894527 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813520178 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.808585677 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.054710047 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.807997929 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.206426428 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.867287041 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.048446019 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93685 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.81089402 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876521656 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.904680252 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.809397051 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.810298648 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.809321643 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.808799668 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.888709389 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.807932294 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.809500892 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.93643533 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.816179306 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.809048135 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.860530878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.87705311 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.809102359 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.700441758 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.812015436 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.808507598 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.15185419 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.811251496 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875868229 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.808646075 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.809433036 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809190928 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.941338353 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930245355 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.603009537 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.811702636 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.597910951 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.81063534 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.957883375 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.808629856 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.999127644 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.812768176 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.890911335 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.814741288 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.811007786 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.809061501 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.843460596 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.809898495 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.870258103 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.808916798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.18425407 seconds)
  done (took 407.239081245 seconds)
done (took 789.554531626 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.486545067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.448166377 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.560546433 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.469640733 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.444920101 seconds)
  done (took 14.158982194 seconds)
done (took 15.906268761 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.898300881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906399919 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836648105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90245393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.833138592 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.903486851 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885669103 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.837142809 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868091469 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.836725643 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.871576533 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.839061339 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.824651776 seconds)
  done (took 25.99421292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.047496888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.053671857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.886660383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.04027846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.86099133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.042483552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.972387039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96197118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.963167235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.829591318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82602919 seconds)
  done (took 23.237163871 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.044002646 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.056519934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.892200514 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.06359995 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.865865026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.060063325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.981042067 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.969986145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.971498635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830463022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.826568602 seconds)
  done (took 23.314485968 seconds)
done (took 74.292751258 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.819725724 seconds)
  done (took 3.571875763 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.844105711 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.004240423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.828138047 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824512426 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.818834283 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.822439932 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.824906327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.819108963 seconds)
  done (took 16.536319656 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.817318285 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.819683116 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820692408 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.818632299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.820704483 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.823094776 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.819112073 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.823210608 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.818167781 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.824474914 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.81839571 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.813712894 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.817937845 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.81669716 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.816636597 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.81653514 seconds)
  done (took 30.855892499 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.814698199 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.813235801 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.813461724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.815746189 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.81496422 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.814267002 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.815992052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.815684451 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.815765397 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.815663384 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.821672963 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.815270559 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.813896233 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.813561244 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.814490908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.817261381 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.815877486 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.815170915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.819650419 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.813842978 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.813686514 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.815775995 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.811651993 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.812049867 seconds)
  done (took 45.311650927 seconds)
done (took 98.024463638 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.708200377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.198098969 seconds)
  done (took 8.649976127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.81546405 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.815091753 seconds)
  done (took 5.410899007 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.81314892 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.813524909 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.812940497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.813775918 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.813999144 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.812919102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.812075482 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.812882835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.812642353 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.813705471 seconds)
  done (took 19.875006022 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.812255177 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.812586501 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.810095061 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.811395012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.812805014 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.809954443 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.812604649 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.814185721 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.813479933 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.809286519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.812100561 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.811453137 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.812392061 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.810219889 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.811931639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.809788305 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.810844511 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.810326735 seconds)
  done (took 34.351204783 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.812784279 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.812611175 seconds)
  done (took 5.368557628 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.80948532 seconds)
    (2/7) benchmarking "second"...
    done (took 1.80968577 seconds)
    (3/7) benchmarking "month"...
    done (took 1.811273351 seconds)
    (4/7) benchmarking "year"...
    done (took 1.811057262 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.81060832 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.810651844 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.810931727 seconds)
  done (took 14.417540018 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.813365513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.991174506 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.056479278 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.466455236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.815353384 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.816173704 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.810039612 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.817156949 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.818154685 seconds)
  done (took 20.149878364 seconds)
done (took 109.964296551 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.627101635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.806615019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.17210056 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.848637596 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.86694226 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.146529773 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.827750335 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.111928229 seconds)
done (took 43.148793572 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.843542118 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.361599016 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.401530722 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.290845447 seconds)
  done (took 12.796703703 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.790469231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.331821621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.837992573 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.389484148 seconds)
  done (took 20.114907574 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.168078619 seconds)
    (2/2) benchmarking "read"...
    done (took 2.146830816 seconds)
  done (took 6.060209963 seconds)
done (took 47.557373417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806569026 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.807319901 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.807227136 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.807192827 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.8036039 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.807262706 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.802531692 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.80437519 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.807261379 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.807394387 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.808043831 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.809100331 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803371779 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800652265 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799648138 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803911228 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.799195213 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.802785808 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800138714 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799952207 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79946446 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803411018 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.801714201 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.8006446 seconds)
  done (took 45.029074512 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.803915 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.803294665 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802345788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802806218 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.801345788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803333079 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.804111645 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800675986 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.804197906 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.804085001 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802235919 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801326591 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.803977108 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801355032 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806377066 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.803136141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804650369 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801674592 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805280921 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.802051649 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.802664772 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801938775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.804814906 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805661056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802790069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805422505 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.807202378 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.8026909 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806588415 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.804013268 seconds)
  done (took 55.8394894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.810509953 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.814069692 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.806694474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.807670053 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806996152 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.808225107 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.805941095 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.806738457 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.807434025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.805132577 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.806599354 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.808070126 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804606766 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.804122215 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.80361987 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.80411062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.809128682 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.806117931 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.80433474 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.804272716 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.805364907 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.802177859 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.810638568 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.804263371 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.804204423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.803908586 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.804750308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.80901122 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.803063917 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805337992 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.804038693 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.805543325 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.804862739 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.807349741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804183924 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.804599235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.810119897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.812590296 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.806515443 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.80259232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800293966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.802100409 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.802769388 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.80288347 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.809560711 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803347262 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.802250329 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.803849983 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.803388294 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.80552246 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.804689894 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800590672 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.800907731 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.799419094 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.801658591 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.802449876 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.803075804 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.802032914 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801682586 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.801298256 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.804844579 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.803700528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.80180219 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.802128505 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.803159537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.800984481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.80255902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.801930485 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.799894926 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.803807035 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.802148312 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.801676502 seconds)
  done (took 131.668931476 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.800659484 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799157604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798449529 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798777487 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801667051 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799934109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797933824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800783605 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796716068 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800576679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803923526 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799160758 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797318581 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800062149 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797973944 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801354967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802632465 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796679202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.801073243 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802715696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801808209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.800635698 seconds)
  done (took 41.332495058 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799739927 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802906535 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800110651 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80664731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801384999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798249599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80151493 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80339132 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80105902 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804314531 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798149506 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801253945 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797287847 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798308498 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800120431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797345324 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799736721 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794267155 seconds)
  done (took 34.13788981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.797832724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.801610197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.798993858 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795033138 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.79622662 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797108397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797799192 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801782999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.796702994 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.795054143 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797783629 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796891575 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801864279 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793385579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795538682 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794497542 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.795516631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792611214 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795453202 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791658834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791011779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7948071 seconds)
  done (took 41.248393616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795257928 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795136391 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790572193 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.791763346 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.791843658 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794692659 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797468477 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.791367743 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.792374319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.792317783 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790814523 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.792652173 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.7946958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791245208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.79073481 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791740236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794547401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795979334 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793790576 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790737624 seconds)
  done (took 37.582426823 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792146438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792432954 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791256396 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791324954 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791090605 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791428215 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792667161 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795268803 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791733806 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793263258 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791312559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791394097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791521987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795389294 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793495927 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794014769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793615603 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7942952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792299801 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794596524 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791920806 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7919868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792640353 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792933493 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794747828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791628318 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792036538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792959523 seconds)
  done (took 51.917804876 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7949047 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799467961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.790648414 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.789607602 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.79293285 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.791262393 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.796731586 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.791657703 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795001661 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.790456525 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.793701506 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.794730875 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80146028 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.793871769 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795044905 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.794287109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795501265 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792118692 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795595101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790698916 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.79387214 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795113568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.79361189 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794047687 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792133351 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.794100377 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791519117 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791013614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793645705 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795415982 seconds)
  done (took 55.537820295 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814442 seconds)
    (2/2) benchmarking "in"...
    done (took 1.813765531 seconds)
  done (took 5.351417049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.792955384 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795464983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.795561072 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.792451142 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.792256758 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794575089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.798283616 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792024437 seconds)
  done (took 16.076713776 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.792274735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.796504761 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.797000046 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.799694007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.794398348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.791947155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799838533 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.796806739 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.795967302 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.792593075 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.798238005 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799454034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.796369691 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792686333 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.796819349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794274013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.796285212 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.793447194 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.793805316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.798906814 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793735793 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793842091 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795528827 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.793953238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.794146073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.804198737 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.796176238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.79543019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792684015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.795382784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79787531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.792962659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793677361 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.793268705 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.796179093 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.794717221 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805019726 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793480363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80073578 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793690357 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796416378 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793865739 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.797223172 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.794198736 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7942419 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.794585872 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797443883 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.797360817 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.793158673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.796971105 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.800612334 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793263101 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.79446333 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802772628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797373732 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802186881 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.796465454 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.797527669 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.807500691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.805337617 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.807486626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803466455 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798180036 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.796481857 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809030008 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.81623182 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801297358 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.794843623 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.796096508 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.800410703 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802674712 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81016811 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.80372815 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.797684012 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800050384 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.802820786 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797936142 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800056378 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803950532 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.799960568 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.799588344 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799764546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805459798 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816815299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795046876 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.799783632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.803564545 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.801042398 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.797809872 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810243533 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800949668 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.801506776 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.801152527 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.796235116 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.798605147 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.799554953 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.7969138 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802337932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.798431959 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.802600966 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799652637 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801321562 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.806276938 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803709073 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799281232 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.805497364 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.802472671 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800111758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.811074153 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.80425458 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799892556 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80189649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.809726271 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.798735721 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805946655 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.80724984 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.801428907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.802811982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.800711742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.804479632 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809300851 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823273977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.802991542 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.804675134 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.803834561 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.81254265 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.800344216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.802906895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.80420221 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.799809485 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.802618899 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.800093816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.802380361 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.800532223 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800730746 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.801523422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.803454992 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.803544961 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.802078001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.801033207 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.801773658 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.805781675 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802189616 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.802828864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.801814963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.801603849 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.805034542 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.803001351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.802177964 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.803782331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.80086156 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802789156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.803164004 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.805792065 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.801026422 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803468391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.801008614 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.803323504 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806644152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.804785676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803554822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.802401271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804748877 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.802525153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.810160325 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.803184837 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.800679351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.805102301 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.804767503 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807085653 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.807135868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.801132167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.805156378 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.810412586 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.804414939 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809992383 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.805920465 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803464834 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805052326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803638653 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.806714848 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809540651 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.803419996 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.810409122 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.801867581 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804862955 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809475292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.80278207 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.802453032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80406455 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805588309 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.814453131 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812553807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810958414 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805691013 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.808664721 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.804675322 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.815858404 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.805783312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.805572724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.807822747 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804738452 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80838528 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804847586 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804013061 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.804885117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.803388726 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.805657833 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811255147 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.803591346 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806393268 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.805323514 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805489759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.804301158 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812004101 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805980892 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.804975892 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.804491783 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.802641125 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.80702329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808766066 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.806119075 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.813092214 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.805638254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807482079 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807720643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.806043576 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.805560898 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.807026861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808319706 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.810376293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810439635 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.807401084 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.806156393 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812634292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.806601739 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.810068311 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.809605277 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.808160977 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.80589201 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.808874594 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.818894269 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809073224 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.807873377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.806781807 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805013935 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808131858 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.816884171 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80830685 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.807369874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.810616328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.808989347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.812825288 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.808108812 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.808716303 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806347328 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808517919 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810365529 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.813920803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809203919 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.808678868 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.809638251 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.80820238 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811742087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.814158926 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.812870909 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.80655729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.808415879 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.811324551 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.816639754 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.806588546 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.811129294 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.808319913 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819905705 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.81628154 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814328971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.80964064 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.810631113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812972309 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.810011922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.817123116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807577175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808253047 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.808831215 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.8082707 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.811216383 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807320572 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.811998303 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809488742 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.810937984 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.812220531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.816130274 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.806548934 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.810367635 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.808720674 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.812186014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.813293361 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.810134773 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.811103429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809261765 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.807981984 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.809599787 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820224019 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811459664 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.811341735 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.812174666 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.811646322 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.813608913 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.810551758 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.812867917 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.81129079 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.817866561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.815276946 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821523134 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811431396 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819083961 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.81009199 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811908531 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.818196139 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.813117455 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.813962564 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.817110506 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.814564981 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819090903 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.812366284 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813952828 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.816650115 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813836978 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.814059562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.815788528 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.818427058 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816471826 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.814733597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81939036 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.813692877 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.816047697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814890794 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.815118169 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.815124878 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.815524091 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.811547208 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820183067 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.814742728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.812796387 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.812008687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.814278763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814743712 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.815607393 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.817650285 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.812825398 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.816605898 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820382113 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.813141905 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81577439 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.816600466 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816793573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815444622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82154738 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.814615704 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.814284069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.813904637 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.813409804 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.812639188 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.814436801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.811519104 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.813395669 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.814983805 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.819460236 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.814200289 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.817851751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.813925246 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.814387043 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.812824841 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82218945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837309692 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.81379726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819112903 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.815802518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.813657881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.818872213 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.816876835 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.814368939 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815400128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825693141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822273467 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.81712227 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.815494874 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814650197 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816080219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.818239291 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.818477982 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.815276815 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.817266645 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.816405919 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.813730231 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818639337 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.818186124 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.813944177 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815924207 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814174153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824293234 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.819255807 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.815485001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81555746 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.815658688 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.814761507 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.814742261 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.819422672 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816287826 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815710771 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813690919 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819238189 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.821602269 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81886456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.81498415 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.816436951 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.813569146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.81551956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82280025 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.817424171 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81741791 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817366212 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.817107656 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.822512552 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.814580913 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.818671984 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.8180313 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.8203289 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815865249 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.829968766 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817573058 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.817182611 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.820282259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822347269 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.820807801 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.819077392 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.824189032 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821290571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828531088 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.826071465 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.826092717 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.820421187 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820327079 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.825727756 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.818573577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.824987407 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821726148 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.822079524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.822165049 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.823050876 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821967309 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.830397812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.820582754 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.82282475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829323007 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.823818381 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825516421 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824048136 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824869411 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.821068793 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.822062325 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.825669048 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.821517495 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82811612 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.821215224 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821966228 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824635516 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.821179692 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.821852391 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.826861497 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823889653 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.8228245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.822908776 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.823897314 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823210033 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825113046 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.822082073 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.822005848 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823548968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825606672 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828277261 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.823531061 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82608357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.822183323 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.823999448 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822833639 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82749086 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820984354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.824043458 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.823865404 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823772468 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.825391911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.826735846 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.824521041 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.825402791 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.827500096 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825134979 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826208732 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.833428796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.832149136 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.821575243 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.822453567 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.823204758 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.827652018 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825094035 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.824621424 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823911736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.826513841 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.825621841 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82371981 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.827074425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.827586102 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838184311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.829667909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825120659 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.825556471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82818104 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.827871589 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.823154991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.827900345 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.827233189 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827931439 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.83021899 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.826615972 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831548331 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82520525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.826373596 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.828378802 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.828938738 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.830811862 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.829137615 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.82563147 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.825319898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.829390445 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840506453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828395662 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834489515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851535998 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82559957 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.826903024 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.827881104 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824492683 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.825746491 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.828526119 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.826663306 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.828377383 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828604355 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.826333046 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.825719945 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832393769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.828672226 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.830122113 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.830364697 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.826590867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829113167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.825723367 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.826693288 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.830698441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.826988695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.826848793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.829011825 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.828312947 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8385223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.835491479 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.826097172 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.827096047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.825591025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.83039179 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.82805934 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834844439 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.83636708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.82758562 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.828361534 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.826517607 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83027746 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.828502407 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.827701918 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.825479837 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824504184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826195924 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.839412979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834243342 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.831904786 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.826716187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828075949 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.830902023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.827003025 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829162443 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826799018 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.828198423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.827429303 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831572316 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.829965942 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.830906404 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.829249478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.836049639 seconds)
  done (took 1082.294856987 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830232747 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829456939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829006537 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828357026 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828996071 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82900176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827859743 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830135382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.828566899 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829902796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82843493 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829981466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829417657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83112615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828811918 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831098985 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827617265 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.828399101 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831100308 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829657353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829439391 seconds)
  done (took 40.175132513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.832947556 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.827718306 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828447041 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83294586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829383303 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.832501382 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830036223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831318289 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829524049 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828322036 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.833898194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833099015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.829820046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.82860809 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830010652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83367342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.832931604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830412074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.832560668 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829548137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832327402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829749743 seconds)
  done (took 42.039576523 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.830459747 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.830743065 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.829478574 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.82844848 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.831500129 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.830593613 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.831410408 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.8317078 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.83468199 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.831281422 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.830372058 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.832857607 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.836073024 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.838257831 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.831880484 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.833733865 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981061682 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.832007292 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.83231435 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.831967785 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.831779306 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.837224263 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.829329605 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.832675818 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.831559618 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.831422095 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.835948704 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.834615023 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.829942438 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834654262 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834958975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.835968885 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.832890394 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.836163228 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.832285032 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.832007374 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.836914004 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.831865867 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.830993841 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.835970935 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.843148616 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.852865187 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833981246 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.839134592 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.833505184 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.836245193 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.836136245 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.839731898 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.832307264 seconds)
  done (took 91.768260636 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832589274 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.83739202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83374156 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836315202 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.836206587 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.836814239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.837672605 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835425396 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.833260741 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.833922204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.837959919 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.835573713 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834916032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.835727282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.835207626 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.831817133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.83417005 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.831462331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833936052 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833599175 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.833280259 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836859927 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.836425924 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.835985655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835222325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833095135 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834678868 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.837660758 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832796448 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.834525241 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.837940431 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83833587 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.836030986 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.834983214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833695736 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.838011795 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837088475 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.832923839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836709558 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.83543645 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.83656344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836356463 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.838111496 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840199231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836591974 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834225624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835101271 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.836512956 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.835466628 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.83664592 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.837864758 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834433281 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838120664 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.836560101 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837516097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837312262 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.837387209 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.836948138 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.838417946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836733006 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.837511726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8394114 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.837776248 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.840234163 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.840105095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835520878 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834599555 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840260556 seconds)
  done (took 126.618617692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837821143 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.83813542 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836271453 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838584918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837745154 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840523255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839526375 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837756145 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838274758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835886011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84025278 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.841238656 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.836082199 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839822205 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836260107 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83858953 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837675516 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83819188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836065457 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839291372 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.836719536 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838670817 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840618908 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838017285 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839690014 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838796906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839676912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83863178 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839905216 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.839298263 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839395637 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840126543 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840174208 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838535521 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.840449137 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839644197 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839905562 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841334148 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.840432904 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839566202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.838853724 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839342654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839578202 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84112189 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839664622 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837950449 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841504033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841171576 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842607731 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841101014 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841976095 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840899526 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840913394 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839410817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841010796 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.843426555 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840591293 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839497127 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841223756 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840932717 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84047079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.843372087 seconds)
  done (took 115.818087623 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84171687 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842689649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.840820544 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840323388 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843725471 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841123894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845078644 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.84295176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844640175 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.845396595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842983208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841355885 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841827738 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843904414 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840650839 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84199657 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842106225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842700492 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844441321 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842133394 seconds)
  done (took 38.622472169 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.840276881 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844586813 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.842024703 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841914245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.845376723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842728832 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.843680238 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844708105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84175233 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844246468 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844098217 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846441943 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840882693 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841476306 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845186465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.842357964 seconds)
  done (took 31.26137906 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.842421926 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.848616609 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844223739 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843272418 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842397583 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.842749598 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.844778221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.841996284 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84345963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.844280437 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.845525937 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.845428946 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.844826945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.842932773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.843922717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.845619414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.843508462 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.841474361 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.846006263 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.844310079 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.844155331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.842928256 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.845546544 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.844793164 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.844195288 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.84473633 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.843641825 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.843811 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.84377513 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.845993913 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.844235041 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.843399222 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.843797115 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.843729152 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.845241308 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.844780238 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.846904672 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.847269478 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.846708835 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.846445425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.84742252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844557534 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.847459436 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.845441712 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.844297378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.847024583 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.844409087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.845779538 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.843999647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.846325741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.849000778 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.843880079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.848042787 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.848681098 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.847550149 seconds)
  done (took 103.244658103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848036924 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847988369 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.843365857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848255473 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848510249 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.844543725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849220207 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.845186728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844880286 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.848399067 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847038345 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848954237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846344521 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848507603 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845127384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848426266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846141974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.846339481 seconds)
  done (took 35.019020535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846429888 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845904455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.848559715 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.845502038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.847026605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848728202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847029917 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.848516626 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849451993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847457248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845401851 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.850204838 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848139776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.848480504 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847143701 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848061424 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.849758163 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848017602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847429853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84583886 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848878587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849888239 seconds)
  done (took 42.427023288 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.84714398 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.84715384 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.860292996 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.864247577 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.865408705 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.876520127 seconds)
  done (took 12.934938572 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846826637 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850392877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848350935 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850382111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851232309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847062242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848133977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847160276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850708767 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848809967 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848969492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850635441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85067864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849038218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850170119 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851614181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848795603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848590241 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849413619 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852824199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848972767 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850205198 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850696227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849503962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849601169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84950095 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852801908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850585761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848953481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85080163 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852772984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848602845 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851670228 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850222511 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853251398 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851380351 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847840483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852061897 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852177858 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849840126 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85146909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85071892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853654133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850317896 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85159137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849435923 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848554004 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850098166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849306592 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852824046 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852571633 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849427002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852954707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852013013 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852490527 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853657849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850409868 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852014352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854034315 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850171716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851427974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852921759 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850961732 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851994493 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854243899 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851367419 seconds)
  done (took 123.920853802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849569089 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851323552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851794237 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850436557 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851886696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853951421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851529526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852124625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850799637 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851382406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85271246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85212743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852119704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851830974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850724487 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852280318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851545273 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85214705 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853577095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855384001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851371399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851758168 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853121109 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853605696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851995152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853221005 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85287401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8532417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851195717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85193436 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850798145 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852282323 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85326133 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852635756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85315845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853799171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851995595 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852518859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853388937 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855160497 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853547712 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855223446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853300848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853209794 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85399418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853575155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853531069 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854214531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854090409 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854360155 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853561759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85537835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853211445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85276765 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852348653 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854076183 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854249919 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854898034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852423032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855816105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852842984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852228042 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856883498 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853853576 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854000999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854806162 seconds)
  done (took 124.075587569 seconds)
done (took 2527.677603358 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.888364224 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.120375963 seconds)
  done (took 15.790775706 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.01783558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971503907 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854628322 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.853579783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.851873734 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.871164191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.867885044 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.853077768 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855025365 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.855576917 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.854941495 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.040948235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.855210435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.852238456 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.856550764 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.949670328 seconds)
  done (took 52.051785711 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858039412 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.859521767 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.869750571 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.862217964 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.85897295 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.878628371 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.893075017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863738697 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.91766627 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.873697884 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.971784216 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868971126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.859789738 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.928345812 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.870922411 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.873004037 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.956548775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943280501 seconds)
  done (took 35.793277763 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.939313822 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860221865 seconds)
  done (took 10.594053647 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.875554815 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.85701666 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.857176607 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.863105748 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.85346535 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.863993718 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.853081284 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.899323786 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.876716786 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.856459899 seconds)
  done (took 70.446128739 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.864967564 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.860556631 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860024271 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.857786922 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.85560103 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.854477463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858224458 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.854279874 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.551401392 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.894279633 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.86485006 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86554717 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.859709538 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.860312511 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.860806878 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883254616 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.982067216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863051598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.859464417 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.865928257 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.861308017 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.9145666 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.872347597 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.865531551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.89061675 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.554219513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.865794769 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.865486682 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.984355075 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.859345168 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.860301004 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.861703287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.86310408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237902508 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.138225437 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.857967376 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.865719173 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.868147922 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.860290898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.990614455 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.861081766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867450953 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.805281904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.11451264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.972912866 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.906559155 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.249937972 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.862061981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.865649688 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891292887 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.865650187 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864352737 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.875649448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.373049957 seconds)
  done (took 132.180617096 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856930558 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.120468506 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012022537 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857480967 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143387052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070474039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.855078041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907148031 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.857391586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08923813 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.075968516 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965388513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854571269 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.858393682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851688591 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.856796664 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023140374 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931435907 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862073899 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.854346628 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88804495 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104456508 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988934276 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.858598964 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.879506098 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071458431 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985570191 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9679184 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.307392394 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.856782837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923395726 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.856480652 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.858447435 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.854591616 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016271638 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957230008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946150031 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85823131 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857033872 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856672637 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.532945238 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056118003 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955685512 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003737701 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.11399566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063984013 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648438684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.862790511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.599128724 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024247882 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093724721 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.093177519 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.983869171 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.860834365 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.120356223 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.858711977 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857073115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093449644 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102050325 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.961296435 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85823433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858102753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856019114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10651182 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859160982 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956546196 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858878747 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856554391 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955719943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962894751 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109314546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071850203 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.891139982 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.16214928 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.332735972 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109787384 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927025618 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092126555 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859423615 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855901911 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946500412 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.705094624 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061623958 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111956933 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11643603 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896669243 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.583394742 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.859151166 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.089215138 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085912927 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.132048053 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103569955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.015429227 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.196808521 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.860116334 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860839881 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.100337856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001034192 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865575078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223979961 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09599609 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.434577931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.892797403 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176922057 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996391015 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861638161 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.505705453 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860542333 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087032018 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.904511844 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861897074 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861986888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07934957 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.843221532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860749207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.583210541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926826072 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.860462084 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095576518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860396262 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129015688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859761804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103776162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233798751 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896416028 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.036860366 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105447565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.864043476 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124829059 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107591313 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979156537 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139165283 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.782805059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.861755577 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154728358 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863151274 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.861852398 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.035836663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865116081 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098928482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865776503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.154480957 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889407415 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024857786 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867523829 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119815561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898244481 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917870979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.865051417 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996984714 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862114478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.737048363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01896629 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865849785 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.861085129 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405799039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.863119038 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022670265 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.099499914 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889484069 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.940300001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.541725082 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861611174 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951949384 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892049388 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.218072701 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.864798 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.080997808 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.863243249 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.398761361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.86284393 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108840357 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101260583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.868763088 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863006032 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.771823318 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.866749585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864369014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.026277012 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.689714479 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864738088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068240718 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868692799 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99895182 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869041859 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940560017 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.219089776 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863888156 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.864505075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.865501081 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.863750991 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865291609 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07491892 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.896460476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.393940424 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.006154669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138969163 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185216908 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120665667 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.910328243 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869932916 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.1109105 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867713234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931268086 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866392389 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890317213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103958356 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869534191 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081044901 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150964979 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.846296345 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916033972 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.867353939 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868901573 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.783471396 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021860736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956987447 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865748837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.86571717 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985718817 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994189316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080921182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.867012935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.098878453 seconds)
  done (took 902.097231431 seconds)
done (took 1220.733528934 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.868015447 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.866954227 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.851026696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.866157384 seconds)
  done (took 29.25262533 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.875695213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.87191335 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.873877308 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.87194727 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.875637222 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.873029666 seconds)
  done (took 13.041834444 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.887416666 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.866396687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.866600712 seconds)
  done (took 21.421361118 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.942730431 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284722565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.98688731 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.316091009 seconds)
  done (took 10.331757401 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.877609598 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.874270199 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.874960147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.876612994 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.877464683 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.880320937 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.877489121 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.876470963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.877067063 seconds)
  done (took 18.69496993 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.270875464 seconds)
done (took 98.809804344 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.934643364 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.959297357 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.890593575 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.869111658 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.164742435 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.701659824 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 4.868995076 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.408585734 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.988232531 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869260114 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.994637961 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.434460232 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.019549487 seconds)
    (14/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.143373316 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.9371003 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.91541928 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.898173974 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.146804117 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.805352848 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.986789805 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.86858971 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.896284543 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.995800226 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.194449801 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.17556389 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.87074155 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.381680928 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.888752219 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.25492627 seconds)
    (30/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.899942399 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983527043 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.808243531 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.432314494 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.98458017 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.907668556 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.976340123 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093615864 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.568151378 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876130632 seconds)
    (40/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.227502372 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.268457247 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.853165247 seconds)
    (43/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.257951798 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.856451564 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.104472067 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983368613 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.854618723 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.049283224 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.223461649 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.062934653 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.044490792 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.242186998 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.989540325 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.871374846 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.871107917 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.721263159 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.897592347 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.871970877 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.235988953 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.955145667 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87226326 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.567004376 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.949283198 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.969123131 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.983266661 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.964585379 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 5.623066009 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.049804519 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.941338937 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.874899205 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.013495477 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.239786344 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.32985143 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.076470493 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.963023027 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.579086441 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.873688887 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.306577489 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.947199101 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.956738105 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.143256624 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872681418 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.893518127 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.85650722 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.563192082 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.887617001 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872208699 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009492714 seconds)
    (89/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.014029349 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.812976762 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.906684064 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.162518058 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.215823954 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97775299 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.787732534 seconds)
    (96/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.957994641 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163104577 seconds)
    (98/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.886826575 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.951605064 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.95698618 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.438935666 seconds)
    (102/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.901442501 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.049862803 seconds)
    (104/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.714219466 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.061747427 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16053285 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.006441414 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.27557069 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201128894 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.951795778 seconds)
    (111/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.391056479 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05962779 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.086538273 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.594382931 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879150974 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.033085295 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875756764 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89453511 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.786415783 seconds)
    (120/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.884196896 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.87152951 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.668752819 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.353524827 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.029032347 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.367738583 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004582769 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.115579221 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.341120061 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.108176233 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.342633536 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.899793093 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.130277805 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090682666 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.125301538 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.054157257 seconds)
    (136/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.176715554 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.959026244 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247921237 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.002796428 seconds)
    (140/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004658073 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.121394304 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.000944867 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.159241077 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.054585499 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.964665982 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93925677 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108702437 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.89863212 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.029717491 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.89908379 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.514705173 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.720009386 seconds)
    (153/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.210331705 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150014713 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.872653566 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.974252881 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.893904615 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12216651 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.963588597 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.962910724 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.891869693 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.00367695 seconds)
    (163/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.342743902 seconds)
    (164/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.076458603 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.17850727 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.902219361 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.873734535 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137431682 seconds)
    (169/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862828758 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.0699413 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.003596068 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246960626 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.926748562 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.873193295 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.092952265 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.009460471 seconds)
    (177/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.650851659 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.122818882 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.948438556 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.898371744 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.901600582 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.983177921 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.874345076 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.410844962 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.918619585 seconds)
    (186/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.378231425 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.803644786 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.419433317 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.909608126 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.094928705 seconds)
    (191/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.988672951 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.516198718 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.023159041 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.268309179 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962988062 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.857385866 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.861982503 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065511294 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.86427254 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.92261536 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.002382612 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.374009792 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901596989 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.018761815 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.569887737 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.904841863 seconds)
    (207/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.25714959 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.903065117 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.663222322 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.090603188 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.679131791 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078748584 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.436668403 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207750486 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.023065007 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.049181653 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136900873 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.123557592 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.514422963 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.21698087 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241058611 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.902514528 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.723938143 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.012532157 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.878706123 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918852909 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.928070793 seconds)
    (228/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369054613 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.193370341 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.032471871 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.876029905 seconds)
    (232/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.010564948 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.178653968 seconds)
    (234/309) benchmarking ("sort", BigInt, false)...
    done (took 6.879532204 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.564449176 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.253814519 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.905492662 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.205559765 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.810378713 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.83586336 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.210667701 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.181090919 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.128625947 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.490739062 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.895338203 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.022174856 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.965202998 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.006883099 seconds)
    (249/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87822629 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.067830821 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.945390566 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.860675425 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.908878078 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.97010978 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.86180639 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.324049401 seconds)
    (257/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.051783992 seconds)
    (258/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.897455024 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096325083 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.069938991 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.984492249 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.248634015 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.786327918 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.228319151 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.353933408 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.076377819 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.862566483 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.327883303 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205933722 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.083717126 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573717427 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.191200923 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.017407359 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.103505254 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.86325834 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.906746569 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.275812591 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.775096831 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.315164726 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.143816492 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.056933573 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.683636071 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.975650695 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.865285338 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.064596991 seconds)
    (286/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.976854634 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.156458086 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.640040535 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.56695697 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.215026189 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.883507943 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.91179984 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.064086088 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.992419121 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.813479068 seconds)
    (296/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.058965951 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.28445763 seconds)
    (298/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.96645277 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.691663918 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911262192 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.552428292 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.1648557 seconds)
    (303/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.256511449 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.548844679 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.880917408 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963118953 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.866153849 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.321976631 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.867331034 seconds)
  done (took 1023.313527751 seconds)
done (took 1025.181435271 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.913976 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908182769 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.889915205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.912130756 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.00442042 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.9206182 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.900512022 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.892405588 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.939956167 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.939348644 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.889722673 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.919724432 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.893968797 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.891097531 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890971577 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907449621 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.202280595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.915980684 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.909589673 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.89995055 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.908456962 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.891973998 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.940189402 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920147008 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.895281415 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.893420201 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.897775085 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.912812644 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.00383744 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.897024454 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89358166 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.905110839 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.20231319 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.914442576 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.886425628 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.914345448 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.902916124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.900639872 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.896470089 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.926342426 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.348868268 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.895452872 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895933286 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.895571361 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.89344123 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.897395796 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.895271197 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.898374166 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907953565 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908295555 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34486592 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91023555 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.896450373 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.895180886 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.905425808 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896291196 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.897796224 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911323976 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.914828577 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910667657 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.197183426 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91974981 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.896473639 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910044514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.902280652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.382004076 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.89234662 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.897940466 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.3522975 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.90133585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.381314289 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.905627077 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.894022526 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.908961612 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927892696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.205168855 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.912457318 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.8943266 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.903688991 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.895929394 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.905610682 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910057922 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.901234678 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.896145545 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90975278 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.932561025 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.905172031 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.898303391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.905782232 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914455972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90332147 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.907808863 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.899263502 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.89191168 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.904825541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.898364962 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.89959901 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.899455629 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.900113113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.904561051 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348215207 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917320255 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.892387705 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.89374737 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.896527094 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909962326 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.350191033 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.900115521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.915844332 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.941372454 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.896044823 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.197275671 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.924601633 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91209156 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.904355815 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.900556109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.891630144 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.196566901 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.372225888 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.914661125 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.898637841 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.896904388 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916349082 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.901353112 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.894999289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.21121728 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.924078798 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910481268 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.018744997 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.907174065 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.92760741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894803422 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.900049894 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.927906762 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91454336 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.92837682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.90139785 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914586548 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.91418049 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.894639928 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.907595785 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.908680347 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.899985176 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.90436943 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.892726218 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.928746498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91304733 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911960344 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.918618078 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.019988812 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.897113019 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.198877767 seconds)
done (took 298.005319242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96639622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.895467204 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.993793618 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.896992849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977791218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.983987663 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.896242356 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894279264 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894416961 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.267318716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.895677902 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.89718547 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.887773632 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.896205854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.979809028 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.898371904 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.894023691 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232884161 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.89795324 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.969970388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.897325902 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.896022319 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.899194794 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.316762463 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.889897434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.895934362 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969150531 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.899483851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.237380114 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.896842799 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.893802846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.239667189 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.991478788 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.916047982 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.910118362 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.907313727 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.981286778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.903922534 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979084179 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97934942 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.999361138 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.937139135 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.896659573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89265803 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.902958669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.900044625 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.898401256 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.92675183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.896627323 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.897652778 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.232799201 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.910006263 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897692862 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.897971577 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.899163086 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.929851976 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.897342909 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.899979224 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.992270009 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.900875487 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.96105926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.272793106 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270850016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.900040599 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.890269014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.899622174 seconds)
  done (took 186.238398651 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.965223694 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.972652385 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.966471751 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.901980859 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.949896501 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.965857587 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902890635 seconds)
  done (took 15.449471997 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.904012851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901628392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948797414 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.948119328 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.899346436 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.047706336 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901998549 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.910337122 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908321965 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.951837759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901620922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902643277 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.899615453 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891437222 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.94718419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.909507836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.015145792 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.900843351 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899666226 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050382013 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909034086 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.899105802 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.960227132 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.912337293 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.90074885 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.907268378 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.489011591 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900049434 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901044656 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.902983875 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899852105 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.941835045 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902985727 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.902512584 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901225947 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.016900544 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.901534174 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900739813 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.903479619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.894740318 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.904150745 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.902866357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.903307628 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.900330969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.903942519 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.925322882 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.904610136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.903151818 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.904456673 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.903702413 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.950448542 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.904868231 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.90079074 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.901234251 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.956243666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914307485 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.904261998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.902816921 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.904765839 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901762938 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052396975 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948127482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.905888696 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948439627 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904012189 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9072605 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.905345947 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.904179663 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.99569476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.905367759 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949647649 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.902584322 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060874692 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.925639256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905739402 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906597889 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.904502609 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904581531 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.905520601 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.910540817 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.902445298 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.904277506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.909390173 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903669602 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905065341 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.015767524 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011947656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.903438192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.916505174 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.911014885 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.903346759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.957961854 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.906884385 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.902956558 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958040965 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.020353826 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.959427617 seconds)
  done (took 209.05712323 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.906650309 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.911933279 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.904793798 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.921859394 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.904111643 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.903476186 seconds)
  done (took 13.282278685 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.906461026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.906772827 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.907731417 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.906196138 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.903992187 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.905459363 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.905768713 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905448939 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.909215896 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.906681101 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.905790367 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.904542016 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.906199575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.903668112 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.906116558 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.905889882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.906656322 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.904789183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.908943713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905829248 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.059856706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.906430286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904494905 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.905795823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.908570003 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.907771115 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912082622 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.908915948 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.907280905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.914825011 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.909135707 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.905505884 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.908054091 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.912886185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.910609803 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.906207817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913379609 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.907915964 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906408692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.907855805 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906028787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905449213 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.909068339 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.907869177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.908408881 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.91183729 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.910775902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915338181 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.90890176 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.90656386 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.907139558 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.909156484 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.906868683 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.908223909 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.908554011 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912686496 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.911257825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907875425 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.915128533 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.913552979 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.915883805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.915988509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.918567503 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.919234756 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.92378257 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.913058184 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.914567651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917969524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913514239 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.913787334 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.914874552 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.913705429 seconds)
  done (took 140.462717391 seconds)
done (took 566.323854371 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.012053353 seconds)
  done (took 8.851511235 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.037098193 seconds)
  done (took 8.967873213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.386622782 seconds)
  done (took 10.22688112 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.924582359 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.930751738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.903994969 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.908210599 seconds)
  done (took 29.518942114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.050462331 seconds)
  done (took 8.88686593 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.923495594 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.905226146 seconds)
  done (took 15.700623655 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.94984444 seconds)
  done (took 8.789521187 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.998899054 seconds)
  done (took 8.84260605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.912966799 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.940852289 seconds)
  done (took 15.706688755 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.892516633 seconds)
  done (took 8.731995011 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.665023049 seconds)
  done (took 11.509544029 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.91164105 seconds)
  done (took 8.762750734 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.91438681 seconds)
  done (took 8.752738554 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.202208066 seconds)
  done (took 10.041263061 seconds)
done (took 165.121069108 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.909502997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.903409281 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.902694214 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.899884599 seconds)
  done (took 29.452300387 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.94764873 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.948062454 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.949869832 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.962980882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.951718936 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.948050277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.940884964 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.940769139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.958305376 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.951361988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.961188552 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.950837394 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.950075964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.941088747 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.953726256 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.953039722 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958523941 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.950891113 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.941522458 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.952813744 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.916320417 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.960958825 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.953078914 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.915914923 seconds)
  done (took 48.597728788 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.112266371 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.984791293 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.065535674 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.965399656 seconds)
  done (took 9.966603356 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.967790375 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.969949368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.979332208 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.019355594 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.042456413 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.978527696 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.945445047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.938295141 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.923830919 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.968778257 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.043806599 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962436097 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.066317219 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.914759462 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.101628342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.915193856 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.916198944 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.967661525 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.02127975 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.032836016 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.915591491 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.967693962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.972144279 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.961322119 seconds)
  done (took 49.330422163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.916316759 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.92330502 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.923791182 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.919940379 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917002473 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.914771966 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.922297564 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.917466794 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.938407051 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.917566682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.913244529 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.914539156 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.914860209 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.916760957 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.914229236 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.928157496 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.930249656 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.914589263 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.919572565 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.926133194 seconds)
  done (took 40.243093629 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.909719025 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.760339276 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.259965902 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.162528329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.909368768 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.904208825 seconds)
  done (took 31.747017259 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.927669763 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.922323047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.913326901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.970289401 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.048036405 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.918266288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.91611536 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.925173968 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962598188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.9769816 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.931835712 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.944639496 seconds)
  done (took 25.198777913 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.921234824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.908003066 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.90786885 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.925505046 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.928167595 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.922587519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.921054961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.908648466 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.926747053 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.933743086 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.922583679 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.927402865 seconds)
  done (took 44.897121452 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002562433 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.80279916 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.977062992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.636377681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383235723 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122448699 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427741053 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252467598 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.913577582 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18752437 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056053105 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01807548 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167893328 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912836277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929684905 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.398672961 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213149448 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143065516 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941525247 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701593694 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96500013 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452102674 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.77616014 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973087022 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127530281 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.045820174 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.176636272 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874639868 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050819643 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954342099 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924947628 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914502778 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190657484 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29774052 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00912649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92569162 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567152259 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.635396765 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.89874374 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.688980167 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.76332101 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037160601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924187394 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916658339 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851603257 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43687957 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293120256 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.919091083 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.628888751 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916799746 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92433114 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005330971 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.917655603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.732473082 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867622412 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194880418 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.914586914 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918676082 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487106223 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.072616567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481837139 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.889079257 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.108747632 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714087963 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317122294 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.065490825 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.919570238 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918801527 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852026117 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703859493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41597965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064867418 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.934849298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568838669 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2357634 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.086996041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857412987 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201243441 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.735781099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.893577093 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146770145 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869035745 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852735068 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.77823858 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852040651 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217957706 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954077125 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.562504904 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950716745 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255943157 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926822169 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934207295 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926086532 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142491618 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.483455294 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919353128 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.820808331 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062046162 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93845833 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256891057 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851197179 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.919419488 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174394681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.131370801 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173657734 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.437353771 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078291107 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917541565 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.99669215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.862427299 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967006022 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.198062876 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977295302 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055166528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976476313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.882709095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25030191 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945282198 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.080298909 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.075984785 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048558004 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.2490392 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.217511254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986181409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920813195 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919597949 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.784134848 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473365488 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.190386462 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.92430341 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434941648 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969594988 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.921221609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857740605 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.54949779 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065262682 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.8957411 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147588361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907146752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23312021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857773223 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06814326 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.032442917 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.141497149 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.570347202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.995428972 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179690317 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418183565 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.205770312 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968667883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940081738 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011550061 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944349272 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.366341538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213272272 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.926400588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.9263292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.83445717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929112194 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923479116 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.928903774 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719434883 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206726872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948565104 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926508104 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.812936424 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.939636634 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991072476 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928247735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934860572 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.470866217 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668667204 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930712839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.554615353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145753293 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934744178 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.692999618 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036303782 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.008433823 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198650576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982353476 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.859883835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.636473177 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.616166603 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924537195 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859795567 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.925773561 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931453742 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935633506 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.303970278 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206292811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966570521 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.831806066 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.968058454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934985495 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.930645649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924058944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.473045172 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.084722332 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.503601874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969965436 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062916934 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.938807998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859801018 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929044693 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929981261 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925607479 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88282217 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98008451 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.714775749 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306787013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181035661 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573259784 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941925295 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.882717448 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.983315065 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.948105906 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.853694614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882608592 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.026575471 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938874382 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.937185383 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.72848357 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.634889952 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49441886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253904353 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240365357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368436362 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.43735939 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.228714533 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267756439 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15907298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456906426 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988259369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271761057 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868974672 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008562715 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.573445771 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274507616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942759491 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154839627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319845735 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.769597434 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095149835 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141108427 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963360147 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857299997 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889092173 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.126718721 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071056321 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.744852867 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129380961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263870743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.705292511 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020275695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.92467331 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6280755 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011501122 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.642511287 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289849494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464961554 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.959910016 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40480449 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929835635 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375218246 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283191236 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25851715 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.049447613 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861734587 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939304763 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940899953 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.926708505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.929774919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.80484304 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.178071825 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939676101 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16601944 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.212506768 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233025088 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.834568711 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.934880927 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931770244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227426263 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755068515 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096251197 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.412796717 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.461953725 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931001742 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.865401685 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865195778 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.624143387 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938329183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906181019 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158818833 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.113949378 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918547263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445440953 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171612578 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187203178 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.946470775 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210001319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206211153 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665569826 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957247057 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.031595923 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699743364 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.036721268 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.199613768 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167194233 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728549214 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158074195 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.980549751 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.743570964 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.929184004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144744363 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20089608 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928712276 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162772857 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.654457483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.027399568 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258554971 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988288667 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.941828613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082808084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.12088963 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938960546 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015545506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942967114 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.944995873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943780635 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978641078 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955691627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.053546266 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.946463601 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021313509 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074245258 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.467967398 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.935218375 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215913129 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300395956 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263349356 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989623828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933537003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933379653 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868011654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066432779 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381159379 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207814545 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065046602 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.228444147 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9556747 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707885647 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327184653 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174839808 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210896964 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.829290827 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934892503 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958331806 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.199805547 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944794553 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144769342 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174905806 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261779313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405634764 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.199150177 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302538354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207923225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303558646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934294514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526727618 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.043978003 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635106129 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.976227261 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130420915 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199740204 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94635666 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319201409 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957920995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.133545461 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.45225689 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731501902 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225405663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.917434518 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993307984 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216150089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322873264 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248282116 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006540855 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947236541 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.648316454 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074212115 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.814967538 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.201677526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934751698 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147006544 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.646581467 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944550091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218619991 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241951255 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.932098267 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.819958859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942347164 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945768817 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15922677 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21117641 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186851881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947354917 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944076291 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752935525 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21739375 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998590724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873531956 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937537008 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035238678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183771813 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95838414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45548899 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.648247719 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244194389 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.869048034 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961445025 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473152392 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311702315 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267191354 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.488040648 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163125498 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.492104303 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932863535 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242064695 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.94255299 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474109555 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241724485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.940917361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.575080884 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976686076 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.2139939 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258254989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.045132863 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728126957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.91083304 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16024013 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530825086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881663819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937139755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.994698598 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937756572 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.067021513 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948501455 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.821921533 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897809011 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.687779127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433985787 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.9418537 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.925673412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.730476123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.601993171 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96927739 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08383231 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944366544 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.650855741 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.234557343 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193741722 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.573116412 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.941309407 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.943309062 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941308737 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869112978 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134932405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.315370291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237996912 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.41469142 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.97755692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944768981 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.15724863 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151636378 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.926429125 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077283331 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45194585 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979988005 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.669757837 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.623671502 seconds)
  done (took 1716.790053431 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970462189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.947764048 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.951265069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.034086389 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.999003127 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993949483 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.982802419 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02454153 seconds)
  done (took 57.774959775 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.93772923 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.135362274 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.948092636 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939284863 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.94596127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.939674783 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107890377 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946565813 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.942607369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.94557949 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939092313 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.934829873 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.269494502 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.961829675 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.938623891 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934681977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.946318631 seconds)
  done (took 75.628263371 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.939196534 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.15530764 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.975909259 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.966148704 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.892375143 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.956719565 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.936531684 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.954539803 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.942880677 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.169974216 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.274302056 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.967585638 seconds)
  done (took 91.002475446 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.949925276 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.947446415 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.944932246 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.946679229 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.947194494 seconds)
  done (took 11.610933715 seconds)
done (took 2234.106071784 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.19100076 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.162609564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.181916859 seconds)
  done (took 6.216153633 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.094281087 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.1416666 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.262816039 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.281677458 seconds)
  done (took 10.659299293 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.238733423 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.321707365 seconds)
  done (took 6.436710485 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.361112052 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.947137436 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.34341854 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.948234489 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.947680464 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.946246395 seconds)
  done (took 22.723536142 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.951458493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.956003055 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.952514244 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955275799 seconds)
  done (took 9.691789609 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.931103297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.666111901 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.930220698 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.942450994 seconds)
  done (took 21.34582904 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.696607885 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.384672041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.69571049 seconds)
  done (took 9.654191448 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.457803097 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.837458942 seconds)
  done (took 9.171770508 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.204869083 seconds)
  done (took 4.082298763 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.980920129 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.222775102 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.47163727 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.469116339 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.551070189 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.805073278 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.268097457 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.194293904 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.375525632 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.385528899 seconds)
  done (took 25.602110302 seconds)
done (took 141.293361815 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.328566028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948064417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.159456296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.297488273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.241868857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.218139682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.353280441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.279548709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.790500255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.786244314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.293473722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.198178946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.304656988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.186697873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.310253845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.184921871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.1804681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.340456389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.032164478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.229097706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.359702392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.92495307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.135307273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.93485418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.165696014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.099799371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.516433861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.183579366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.186310902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.521098916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.09751751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.38535675 seconds)
  done (took 175.05261673 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.704366872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.945853065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.943662967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946082412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.344107294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945797552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946681861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944544481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.040642145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.036301077 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950181817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.358414493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957101724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945298594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958554203 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946047016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.261942547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.763326879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.955976957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959929485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965598837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.188834093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.963351794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237288645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.280360897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967304341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.946076406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.967437881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.952150123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.939527864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956026175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.946945625 seconds)
  done (took 210.047414391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951216005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.949416559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.947692151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947242043 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.947100493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947855936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9509936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947136852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.555983254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.556753665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.955211484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.953364005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956999971 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.948288109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953051957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94761447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955532492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954478759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.95194964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955512265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958179032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.73307168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.955991028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.73529654 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954295121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95482002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.949886366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956882472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.958767626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.960830643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958645119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950449915 seconds)
  done (took 223.153055014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.151506929 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961434271 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.962064293 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.909804624 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.96261463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961938932 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.917638569 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159546314 seconds)
  done (took 19.890327474 seconds)
done (took 630.030902917 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410717655 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253481307 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.132670924 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.986796491 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.219543598 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01426728 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.98195236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.046025669 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.719812976 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.047384467 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.669976057 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.994029934 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762161538 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.002364637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102868747 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.040015539 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.524977625 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.614221228 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156744922 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062431032 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.152257417 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.926221986 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.06122941 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.745455777 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.776977406 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969264532 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.162803303 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.532523659 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.989689109 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.146507548 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.734225062 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.38077393 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.991259796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.977884833 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.038379671 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.016983528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.345736196 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.985603244 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.100595066 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723454255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.050820491 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.60297158 seconds)
  done (took 107.03840772 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.94980994 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.948753326 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.948557162 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.94874986 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.948881149 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.950981191 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.948206802 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.948128862 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.949014547 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.948985678 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.949549868 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.950120716 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.949580515 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.951060018 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.949318332 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.9494619 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.949777861 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951938006 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.94839548 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.949832514 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950977437 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.948921357 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.965611175 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.949997041 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.951204119 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.950610676 seconds)
  done (took 52.602132968 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966596632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.127748776 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.217653741 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.979795586 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.962493579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.966407011 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.981654391 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.971565906 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.966300702 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.966317391 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.060241041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.973979634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.982433842 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.223535102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.975797097 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.966989108 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.966455725 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.965475464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135707737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974532644 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.983090316 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.972203313 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.982886009 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977523349 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.965590987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965152743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.968358163 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.43132523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.972860907 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.058400795 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004491704 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.982123668 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.384746623 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.242978067 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.01258654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970226213 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.967611179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060253818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.96745599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.9653444 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.983402785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.966029539 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.221136676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.460889024 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.974993711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.967339403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.443117961 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.074056128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.006925526 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969444265 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.2264013 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.978444005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.97134745 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.966830937 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.00119251 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971348935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.965573244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.287452989 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.978417041 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.984468734 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97409802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.966587795 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143939774 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.974182181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.130616649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.975317812 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.97458538 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.968600897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.22670104 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978948282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.475437315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.975818552 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.969516708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.058943628 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.136012001 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.468001288 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.980527599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145595877 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.403295605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.990904255 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.975666741 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.419902186 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997047118 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.974301424 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.973301694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972215977 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.970529987 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.017206063 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982564923 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.39597158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.477819408 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.301900923 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994699539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.982168698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.968120306 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294260528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.978740889 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.972814803 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.2167744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.483113938 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.977388579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.97681804 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.464379404 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.982005487 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.988133603 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.977152331 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.228275781 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.979299374 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.072885737 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972989588 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.974207841 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.971224349 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.987129728 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.97621683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971908282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.450720705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.077747144 seconds)
  done (took 243.752766293 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.963365439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961230463 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.963380015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.961216433 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.963159188 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.969116942 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.962624514 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.962840426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.969912734 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.962298811 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.962800824 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.964774279 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.966423675 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970083331 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.448240206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.973543574 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.57548328 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.966954369 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.965266347 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.962274115 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.646741425 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970734359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.963913074 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.962804911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.965501708 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964632506 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.971347408 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.998982964 seconds)
  done (took 170.737871334 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.975409807 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.156305698 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.988937972 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.010803468 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.980847277 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972430154 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.995854465 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.993321141 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.975933609 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.972429114 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.972645257 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.034963053 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.986478739 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.111015194 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.004694449 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.004919683 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.075978021 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.982175212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972724088 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.975572955 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.000433719 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.967828294 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.034691478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.099994294 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.993814214 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088934221 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.974555394 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.977760887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972543484 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091850071 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.993057939 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.037166087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.001192492 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.993160154 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091942788 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.091882199 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.085230947 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.005214334 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.974877595 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.975579859 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.975042938 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.959690294 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091743644 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.993115807 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.975030021 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.081796718 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994964364 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.978741335 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.986220412 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.975178269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.988243577 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988953721 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.037239393 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.108796101 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.007356122 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.003098398 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.999506123 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.257394423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.985177919 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.075368271 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966079814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.094737492 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.996634473 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.96034687 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.976251461 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.982197328 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.004681963 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008770751 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.08180138 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.98222494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.075796747 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.01058621 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.982720768 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.974400442 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.980065757 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092466044 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.094388908 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011381638 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.01135318 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.006070979 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.967817462 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.974543799 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963274713 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.993263216 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979740858 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096492915 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.093805836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.986285729 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.979139815 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.980330953 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.980103207 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.001009496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.098688709 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.010129323 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070815135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.045163888 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.050572237 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.990329212 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.988437679 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.977262007 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.041850981 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.994117422 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.990041702 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.304383471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.048567546 seconds)
  done (took 213.858591258 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456570466 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032946862 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.03485209 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.287047485 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.408735599 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.887418561 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.02362026 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.02409039 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.04475209 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.213483665 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.101028476 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.046576944 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.007701563 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.994970557 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.023557646 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.042608808 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.041408128 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.364685087 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.158636936 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.190488482 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.004969807 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.33774493 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.347352978 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.422182514 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.060247931 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.365368121 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.706239756 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.167280841 seconds)
  done (took 64.704137065 seconds)
done (took 854.571880933 seconds)
SAVING RESULT...
DONE!
