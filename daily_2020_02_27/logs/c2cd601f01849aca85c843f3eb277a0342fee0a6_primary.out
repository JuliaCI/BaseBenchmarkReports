cset: moving following pidspec: 14590
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.278911605 seconds)
loading group "string"... done (took 0.681891062 seconds)
loading group "linalg"... done (took 7.991073011 seconds)
loading group "parallel"... done (took 0.178204649 seconds)
loading group "find"... done (took 1.177445633 seconds)
loading group "tuple"... done (took 1.860699252 seconds)
loading group "dates"... done (took 1.285189671 seconds)
loading group "micro"... done (took 0.244250277 seconds)
loading group "io"... done (took 0.964969303 seconds)
loading group "scalar"... done (took 38.967458074 seconds)
loading group "sparse"... done (took 12.394974946 seconds)
loading group "broadcast"... done (took 0.995100646 seconds)
loading group "union"... done (took 12.808406674 seconds)
loading group "simd"... done (took 4.714966844 seconds)
loading group "random"... done (took 9.418449315 seconds)
loading group "problem"... done (took 1.864576224 seconds)
loading group "array"... done (took 21.760978721 seconds)
loading group "misc"... done (took 1.769968771 seconds)
loading group "sort"... done (took 3.437246555 seconds)
loading group "collection"... done (took 18.00807198 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.565980987 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134731013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135866431 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129175142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156292567 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122859505 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134070116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094244642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843124482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160930398 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124897381 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42865767 seconds)
done (took 5.535378516 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182231073 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089562434 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091455124 seconds)
  done (took 1.325928895 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072754919 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133946315 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074693848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074938945 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074707512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074424646 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074678142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073807487 seconds)
  done (took 1.727026137 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07893286 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076933513 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07644134 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075520932 seconds)
  done (took 1.45459658 seconds)
done (took 5.918227955 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.805332202 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21871774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194937987 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417071492 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136623756 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180969648 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658926333 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323177699 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.195554257 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084287102 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11636513 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350473697 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13143522 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653682158 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083029618 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098370291 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145498098 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459715591 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074896299 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089861671 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096153826 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13648186 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092881258 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080741657 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153876117 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.074482577 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14292176 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087108748 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073366426 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22644523 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180134681 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66579582 seconds)
  done (took 10.613429722 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107288152 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.107910525 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076106881 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13294211 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106776408 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076946411 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082591588 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074724178 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097571919 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141062532 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100538695 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110946055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073053142 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076781794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092701648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213087539 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088589255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089714064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077933089 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084980303 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115619482 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085817678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087479703 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087819607 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135979696 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188083902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104012907 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105119291 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073844558 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090835573 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122040504 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135206458 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073691402 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073090838 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134323994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102666244 seconds)
  done (took 4.907347278 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.017052569 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151063106 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097787876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140959605 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093466665 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072252404 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115354934 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.102446326 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088609937 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218287358 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362986608 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074246296 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.63002737 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071917178 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118190102 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112865126 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074843621 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075517309 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074837412 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548369 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10521425 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114324744 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088986187 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078663302 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076151878 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362872438 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074963831 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072309976 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075419677 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064078665 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129330769 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075425653 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970168218 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167614183 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072910686 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107475221 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.298999189 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099271484 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148947306 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077299931 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072553326 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162062924 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0786778 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074005902 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091780615 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111019409 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123750065 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074295667 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074159527 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172048623 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072389483 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086487545 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.147729612 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159738736 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084514756 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07199401 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286833582 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096285092 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078413907 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072917003 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211306679 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131214375 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07579707 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074807911 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076142299 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076037241 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391215078 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072908563 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.196930098 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075069228 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083210042 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077188414 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07642884 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080116565 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080365109 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09590735 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074551337 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081682883 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073895033 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073663001 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074819285 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092290583 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.407046836 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074073446 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074755876 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072170294 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.202220431 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103146831 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075827298 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074200306 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107100356 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075148159 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074827728 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119574491 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073916275 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090004079 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077969253 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119556805 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074893673 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101965271 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074392417 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10353838 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077013252 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106226995 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077028036 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086465837 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076161112 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.451016564 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073117471 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073890551 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076349416 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073701923 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075163481 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074074999 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086045001 seconds)
  done (took 22.923296848 seconds)
done (took 40.607829481 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263075382 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082203395 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080524602 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08074155 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080046027 seconds)
  done (took 1.823970887 seconds)
done (took 3.042957928 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131563508 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108577893 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071640134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105664844 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072382622 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109420485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109059356 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084955532 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108641812 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072488734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105878048 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072591353 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072212433 seconds)
  done (took 2.464784281 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091559681 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093152225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078397312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092454379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071032741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091571388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090164305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097790213 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090123699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080698973 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071476037 seconds)
  done (took 2.161768636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090628967 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092706252 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0778174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089869594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071265804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09101222 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092545893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094119147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091247754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082102426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071075907 seconds)
  done (took 2.154114248 seconds)
done (took 7.988972232 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085350053 seconds)
  done (took 1.286523611 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579302499 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.940706424 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089613793 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118201843 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20144656 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124239584 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.266848506 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094336361 seconds)
  done (took 8.797711857 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111307031 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077168411 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0795796 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078761482 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076321983 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080274188 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078510634 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078575793 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079260455 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076742065 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080270848 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077098114 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076535071 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076278717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075982187 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076880943 seconds)
  done (took 2.555394821 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101075655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099114652 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081378351 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081631793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079587833 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079476746 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08166986 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080819651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077783405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079757341 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081836605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0804171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07893338 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071387856 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081171402 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082813014 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078291159 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081636066 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081348674 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083131472 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081723189 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071595792 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079299632 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080973543 seconds)
  done (took 3.266634105 seconds)
done (took 17.116966575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113354994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075324796 seconds)
  done (took 1.399443021 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087849704 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090550859 seconds)
  done (took 1.396160289 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089187939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0724245 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096423356 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084526465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073419121 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073335991 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093301529 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07322984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073950163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072916472 seconds)
  done (took 2.021638092 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075585201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083907326 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076540442 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088444511 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081028434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.072147429 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078850492 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075376185 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083666876 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070233018 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078404653 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090262058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07869591 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091962673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079211226 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075244557 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077147381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074171082 seconds)
  done (took 2.652287918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07301872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.075491322 seconds)
  done (took 1.372043305 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073390585 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071140418 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073913129 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073054478 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070947343 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069897578 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07025085 seconds)
  done (took 1.722628068 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392997713 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126515021 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329232566 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079157063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089242207 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273095476 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073789499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079118194 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078582557 seconds)
  done (took 2.785982197 seconds)
done (took 14.575911333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088691639 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094265993 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104903856 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386198345 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098745493 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074009351 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121600229 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19366768 seconds)
done (took 2.393985687 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221227369 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.704445893 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448195231 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220616804 seconds)
  done (took 2.601047837 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360905127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097306703 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067036002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076019363 seconds)
  done (took 1.83865711 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074810368 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077811859 seconds)
  done (took 1.384408688 seconds)
done (took 7.277752869 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073780398 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094307767 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074245947 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071498097 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.071090257 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073631516 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.071244708 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070854699 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072073292 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074180133 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073768058 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073583834 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.073978919 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.074526897 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073698295 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07134524 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070975341 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073725628 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071155395 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071678453 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.184566493 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073691664 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071534713 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070802288 seconds)
  done (took 3.141535556 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092800551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073755701 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079823589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078855047 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077112173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078998129 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078816567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073903936 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078771895 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07597503 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077441399 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077355966 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076180126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07729401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076415965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077671743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078600158 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073825507 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076248844 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077284 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078457538 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07315212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077133512 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078524719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077331708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076592277 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075605379 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073471324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078682541 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076443642 seconds)
  done (took 3.5622009 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077768608 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071247811 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071639123 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079486207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071033551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071332252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071460479 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071794428 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07213995 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070834626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072011043 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072309604 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071323567 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07160061 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071661668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075434143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087356817 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071040132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070408437 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.072104945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07415492 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073201557 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070847121 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070830789 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070892938 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071017936 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071232932 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070853432 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071450336 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070564253 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074581687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074814465 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070797322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078810918 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074501675 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070683462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075070465 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071162655 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072236318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070741423 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070645725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070979068 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071834868 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078678121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071445466 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073263842 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071921417 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072553089 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071427685 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073866359 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070649375 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0715721 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07275478 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071922564 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07524484 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07106997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071478905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070546996 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071379373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070411547 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071054625 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071255821 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074522111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072239647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086447648 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078405452 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071102399 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072977142 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072249634 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074541685 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07263508 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085430241 seconds)
  done (took 6.500809251 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094769672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093403227 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072959346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072613188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069360265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071769216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077946709 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071404722 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073088737 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08913483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072001191 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072690156 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072648526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075341832 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071562195 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072700152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07964723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069288883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071185713 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075638378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071954678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077184269 seconds)
  done (took 2.923058167 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16124923 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077156947 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112999303 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082142246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077337823 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082006709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077258266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077136198 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077420911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074337522 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075250576 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077070838 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076808212 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074760512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07511049 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074387044 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076942324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074623758 seconds)
  done (took 2.749741956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083830069 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072943575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095216747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073423399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073126761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075432905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077789809 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080871049 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075750117 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0731412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081242638 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075895194 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075964188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073416953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075621006 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07343339 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075610349 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07279865 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080676321 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077000202 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076984415 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08096666 seconds)
  done (took 2.948168002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087179244 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075766782 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088435821 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075192966 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069492365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071348712 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077812456 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073577122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077608209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075754436 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073613701 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07205287 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076141367 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073081298 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075867797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07321407 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075555682 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073298084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075504802 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069055535 seconds)
  done (took 2.758213517 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093197399 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075977135 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076149148 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082469164 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075867663 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075442811 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082653433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075773986 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075388434 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096786465 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075119528 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07552904 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082647319 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07933264 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077473578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081517299 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081694542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081409273 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075720524 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075085846 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096318044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075171295 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081835129 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075471028 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074913134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075272009 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075540016 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079421194 seconds)
  done (took 3.479006524 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074029939 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073934684 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071202881 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070510403 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071147316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070494133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071298594 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071199155 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073964679 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071013926 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073598239 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073616396 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07324943 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073461956 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073504482 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073592978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073506021 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070839309 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071154764 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070930894 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073140947 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073783994 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073370764 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071849438 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071487143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074216481 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071572311 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071523066 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073897015 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070723367 seconds)
  done (took 3.424445762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082229136 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080783303 seconds)
  done (took 1.417365974 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070349978 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087696823 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071315219 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078095952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076892018 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074586025 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081423805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076500675 seconds)
  done (took 1.867255084 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090203538 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085908999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.075597258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085096625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083970358 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091144954 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143944382 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074406128 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080431139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071701002 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087312865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073134 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081065008 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074908405 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079523498 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08010057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07083673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079102736 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075442871 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071804458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075173813 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081982547 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076118344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068699896 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075539977 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096429748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0854527 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072626259 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077235443 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081463951 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08005635 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.069492358 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073545772 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074073199 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07215362 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083576801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088391185 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076714968 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082241368 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07443476 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083095216 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068664054 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078376772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080752966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084445266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074860097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074353783 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068618068 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072487205 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07696996 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068668282 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074555483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068743154 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080570511 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077307615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084412258 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072795288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075467727 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076667258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076811421 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080891413 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076588141 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076679583 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073868176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084087424 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.078640947 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082182453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068864856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067799199 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071848919 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084083412 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097325265 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080385722 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074573094 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074334151 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071722407 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077110989 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073960998 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079446033 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080478955 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073589043 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079555334 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080818885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074299428 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.077326904 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.081665298 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071759792 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076698686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07193112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090056615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072557636 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071961958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071550633 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086353854 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077812469 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072769511 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071499267 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080551794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066950911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072692375 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073516144 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073579178 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082502008 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076720979 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076876079 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081506443 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080540639 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07334332 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075388228 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.070579333 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197946594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075046978 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082340917 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069373367 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077904439 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076735564 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075719074 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083693328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073484809 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074444724 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082284896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080124741 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073456259 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072080537 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077397025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073963647 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0778511 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082181869 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073375775 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068888635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069620028 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077750481 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074542958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077562235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078440445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077355093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.069076433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072926918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078899081 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082125092 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074509435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075209138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080238112 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074910322 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073377408 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08019803 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076236452 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073357213 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079908486 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075251192 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06949284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076187503 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076981953 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072659339 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077337667 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07686269 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077078284 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074113667 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072867807 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080427968 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075133131 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073979929 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074993698 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.073421508 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08500035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076499911 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068792206 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070784038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08181154 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071413513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072979329 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072575168 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075413884 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074377456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071424941 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.074167984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075984469 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082845472 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077600988 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073752637 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078849988 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085504194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07315759 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076029648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073696989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074635936 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073876462 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08341478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079858386 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077962443 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077102135 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070771254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079136809 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081947883 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073398501 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071952143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073590207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077845291 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079954906 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077509399 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074896576 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071765301 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074930906 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076024958 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076638559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072941721 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07320926 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078809659 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0719684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079012013 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072987973 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082986407 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075786337 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067837677 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074709678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070562301 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079122672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067662697 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071363898 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072327701 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072880162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071890011 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075559381 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0671137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206335509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08360102 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074887662 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074966524 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074643548 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081386165 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076328443 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077667115 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077475407 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081335563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084935761 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073327313 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078710665 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084389858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074256087 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068162524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.081873629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073034029 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072940657 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.074160388 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071958424 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077731786 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08190918 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081181902 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067853276 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07723397 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.073086572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074038756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069180273 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078448469 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077600256 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07543914 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081233524 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07468701 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074528933 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077715011 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073449107 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074965832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075394816 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077366172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07481929 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076632142 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.074477181 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078043191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073652895 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072499847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075653989 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073886098 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074604452 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079523004 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073715375 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074453685 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076140169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074543717 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074436563 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075536562 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073901485 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077236624 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075944312 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074591787 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076611325 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068953207 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081687814 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073538011 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0815008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074628833 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07185924 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080811384 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075795029 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.079181298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074888777 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073617599 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075825213 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072846113 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076322075 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080690954 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072236612 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084438159 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080913978 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074638996 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077062123 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074759017 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076052012 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.072806791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074552816 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074067102 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0746757 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073988292 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078256909 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076492221 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074762895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075540056 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074385981 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074515471 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07439638 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068508819 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072828425 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073118571 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073689079 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082411271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073565652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072935033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072873958 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074215156 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072516228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070758789 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079890518 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079408584 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073649512 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079122779 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07283777 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074136445 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08300772 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067803596 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071292136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070699502 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.201243132 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082922197 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.076148832 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084418259 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075196776 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.073805976 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072332558 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07566388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072742837 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069198715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072078639 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078010723 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073779531 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07384845 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073758176 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076840707 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074193492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084093861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07339751 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075272176 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.075014353 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071563351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074288441 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073257611 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077187896 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074643846 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.073034345 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07172711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073236029 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07599881 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076380285 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074480312 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076044012 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081515215 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073636914 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077913125 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076626182 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068223419 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077427328 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073368813 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074211547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074079372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078102218 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078472176 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074632091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082509485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074511689 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077286761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074080502 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071337904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07375299 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074099732 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073761959 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074451144 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074936684 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082123312 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071916048 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077713983 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075039736 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074289971 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081744501 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074741858 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07789774 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078783883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075175044 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076077791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082173714 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077431033 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077496705 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074428823 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076164861 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080323469 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.074183046 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080368957 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07492188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074836661 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075928485 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072211467 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073798436 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074254065 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073760069 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079848773 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074773087 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073319425 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073274233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072005246 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.076153233 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077047408 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082576614 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077016548 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077783169 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069772373 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071160667 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074469122 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072707089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075724377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076709536 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079805342 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075746598 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074230784 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.07241206 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08307687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079061246 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076736749 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071892386 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076881572 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.074901805 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076116503 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074997543 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073967301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073604556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076218482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074718051 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07210394 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079593911 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076298936 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073333046 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.203671027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077447968 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075616245 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069313649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075639279 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077699692 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079991383 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077498126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073986384 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085572984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072038217 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074363218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0768811 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074123225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079531961 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069910301 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076226184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075918586 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074681431 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069448508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074326854 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072584524 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076436047 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074377875 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068625589 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085285606 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083409953 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077862323 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074517086 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074312554 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069092338 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069148342 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073792577 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075528044 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.077062789 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084008467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.074186043 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073047777 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069224315 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073587206 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078240665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07761265 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071645884 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069416908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074412307 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076644246 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080345558 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072428056 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073725257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077348632 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075631555 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07243512 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076679691 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070430367 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077674587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086953766 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074214934 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07521886 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080949131 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082166774 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074759526 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068948556 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074571859 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078147328 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074343506 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074547963 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074286474 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08911878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076859472 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073339387 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.07269953 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076827989 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073312586 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081937738 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074406493 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074193204 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078921978 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07806875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081592025 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077188066 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081545925 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.078361466 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077096269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07292699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074633605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07200313 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073179811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07545634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074144978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077897739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081257669 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073695526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085551683 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083431858 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075770593 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0712516 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073779262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073149694 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068418529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074257476 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071719825 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072144971 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071736394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072455556 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074425034 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077882398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074444088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074214769 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073634512 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067582233 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075378534 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074893768 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07444074 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070367738 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072569736 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07372472 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076956099 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.206403878 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073835073 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077356485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077058122 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07584101 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069903421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08259769 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07403825 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077199676 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07362416 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074077107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075255462 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077429872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078440683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0764769 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076827047 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077899761 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075626179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072347994 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071106999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07961464 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072372785 seconds)
  done (took 47.236056184 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108207385 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070356339 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069706514 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068670417 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079265292 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070138747 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069428749 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069949984 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070361913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072209504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069422894 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068748325 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076846818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083442439 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079117501 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073479776 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069337857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070207851 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069211065 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070071672 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076732356 seconds)
  done (took 2.893217498 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080128273 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083707577 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082480485 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087981187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077666325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077518644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081952635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0766078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085131445 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079320263 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084683646 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076619573 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079714877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079450091 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079501371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077922748 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084527555 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077628801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076962425 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083190496 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076996076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08260728 seconds)
  done (took 3.102036152 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074198621 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07357352 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075619431 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068215647 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072717961 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068251359 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076587354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071055487 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07591544 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072716799 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073317126 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072239477 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075142222 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069148071 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073627345 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071337883 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114399177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076732687 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.074014874 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074790128 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.069038452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074906488 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068474152 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069018088 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073032623 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076109688 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074017682 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071321158 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.074147679 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072512916 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.074080152 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070851562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075701639 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074023976 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072742093 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072548394 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072845898 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073392823 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068756842 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071117692 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073518003 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071307741 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073799485 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074403203 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071372275 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071535332 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07551451 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073738523 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068731787 seconds)
  done (took 4.939538631 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084398988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117432934 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075161315 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096272881 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086339557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079060917 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077087724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097422673 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07101297 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071123795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087675967 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085596555 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072925794 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07683946 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079682918 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072086598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07318522 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071388325 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075600807 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07222238 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076268073 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079800815 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086501204 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084558801 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075758476 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071371071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071541663 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076525124 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084950308 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076303265 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076518257 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077744316 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086664126 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074705832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072246562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074544063 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087545901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072525422 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07742326 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070940924 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074457609 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077158286 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079526132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088175307 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072911383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078325524 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072558696 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06971246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084647757 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0752388 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079950804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085900577 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076066972 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072494327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076509709 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087211849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.073250608 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071491257 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075571332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084321615 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070811065 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076046193 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085463237 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075273949 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078905173 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086108383 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.079446059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076092426 seconds)
  done (took 6.83409 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082932555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103182551 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090024511 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089663631 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082580068 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082617206 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083393585 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0823812 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090752951 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087570333 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082763907 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122530027 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078657631 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083987345 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083259856 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082595322 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082661506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082653125 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08293425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082939321 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082232411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08927896 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082860071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089138295 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085875111 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079029588 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082243255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083013047 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089059393 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082959956 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086327223 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082709772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082251682 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089837938 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08599999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082702754 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072626675 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08210304 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083227636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082459349 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078317859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089541767 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082638328 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078252026 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082520259 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082045178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088942784 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085936458 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084804963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085956872 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08241069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090102086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082175154 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08346931 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089981503 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091533282 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088983591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089469945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082455253 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088612136 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089088767 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091627881 seconds)
  done (took 6.662119433 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089724017 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081445459 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088728322 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068873449 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071332982 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078868062 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071182496 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071499941 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080457442 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082602734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082717231 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078682001 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081566412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082376552 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078760295 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08101078 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079245564 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07868637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080387883 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07878985 seconds)
  done (took 2.944736296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081673017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090951396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07413975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079185279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076641024 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07862392 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075533081 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076200725 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074282463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076076266 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08273125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08244969 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074173731 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078335067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082686657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077989542 seconds)
  done (took 2.610884962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090806232 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080061026 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087598587 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073451353 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07436312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070165272 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072264693 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069023172 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069340451 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085400412 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072947708 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08338612 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0733549 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07269075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070038608 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077837568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069361368 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069802016 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073569766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085526543 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076698259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071145611 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075951336 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072813948 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.076186256 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077040104 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071711451 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073506233 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070150271 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073326413 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076122093 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076551245 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070702363 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070575742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072545166 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070539864 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073644386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073109086 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07822954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072964361 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071705079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075106293 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073365211 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074205064 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0696426 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073336201 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069433178 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075109525 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070422157 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076000894 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073197418 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075860264 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073678394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079167779 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075369431 seconds)
  done (took 5.450505481 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08608407 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077446482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068826563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071438108 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076768397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074465837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076608757 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075133926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074651514 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071258539 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074571782 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076213813 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074615313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077404497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074321607 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076661535 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069483024 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075016994 seconds)
  done (took 2.712518673 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079616769 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073229538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08056232 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07340981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073587102 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07566885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069651235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07215975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071894354 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073214983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073747926 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076169687 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071917628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075358831 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072948246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072757238 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075551797 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072156727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073441444 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069385803 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075647045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072127419 seconds)
  done (took 2.978786296 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100601796 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.091621884 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146944135 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086394306 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094056659 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078975204 seconds)
  done (took 1.955159912 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099422043 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109277899 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0738197 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076593006 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082871874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07739958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076807693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077374798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084518926 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081826316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0771011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08555052 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08556722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083554565 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082229545 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082782225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077379983 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079266987 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074217634 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089604656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077016629 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084601073 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076635919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076706923 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077471444 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08354565 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084549557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082653471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076877016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086040487 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082768763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077542958 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08530097 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08235045 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076508903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084887867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077408378 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090137029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083020456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084167973 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076960774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082308777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084836675 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081405387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084690209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077690379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080984031 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077620378 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077234803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090944237 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082722797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084125265 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082704826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084818588 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08515229 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091264265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082261174 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084073613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082283893 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08230236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083913975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082822005 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084199969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08249521 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082973118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08374587 seconds)
  done (took 6.806014255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111044618 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074821053 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077978077 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082163462 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084584814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077296968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077481555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077265933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077781625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074370711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115103661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077164813 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083593221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08424864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077725712 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077438956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077945581 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08384835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074677319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091349472 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076959873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083883299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083885073 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083323696 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082226471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08296033 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07726531 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077115268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077091776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077178575 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081307246 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07813626 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083904336 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074696567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083917247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077689636 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077158511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081869086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077464004 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083756884 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084047248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089570636 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077448136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077216799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082690638 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077041485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077205108 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074444169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077168164 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074653878 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082682154 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082916212 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082977422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083486757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077192272 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077299527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077748335 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076868314 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077831493 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082598446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083900717 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076927924 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091596313 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077354505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077309348 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083952773 seconds)
  done (took 6.719818052 seconds)
done (took 139.851852607 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196241137 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176449866 seconds)
  done (took 1.727180244 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076441919 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106203062 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085073361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136336266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074986145 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107448022 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106505185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085641449 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073682573 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074195892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073497095 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076092048 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138677427 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074044885 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07421474 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075865685 seconds)
  done (took 2.806106224 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105733402 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172547365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110302727 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072069785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106424871 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079933001 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073313043 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082509674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077967906 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072969156 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079491361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077694516 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073272658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078336085 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081071525 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080424438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072530689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080305386 seconds)
  done (took 2.946622003 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106377662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098533149 seconds)
  done (took 1.57329025 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16272874 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140676046 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209027119 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353222085 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164466517 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.158661269 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149111601 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148325145 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120532134 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143693199 seconds)
  done (took 3.114445771 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107811655 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162081121 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278910655 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125491594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080331252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100173661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127651391 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086691752 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087544569 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087290592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086507009 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084141772 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108072398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080777638 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082093072 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083480335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110980233 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08099793 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082699015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08272894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108681816 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07357586 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080693468 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080686402 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083924519 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084103825 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073077429 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073213919 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08354049 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083046096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083271478 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098874375 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084039114 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111914106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079214895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11233563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084106457 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0810139 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082975749 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081411777 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085464888 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084883307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080128842 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084634316 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07365784 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084759551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074169725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073395739 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085224204 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074203436 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086067637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083312506 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111237045 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074953407 seconds)
  done (took 6.400019995 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111385652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113501027 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07816689 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119337319 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111150521 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077330624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111229905 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104126964 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111642594 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077606193 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07570275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077485017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087179844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088942052 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122882766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114430523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079931727 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076732417 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114425847 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113042165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075871286 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10695246 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099984481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111205341 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074660072 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077782432 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075458443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077859079 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083271411 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085389519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075447946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086278274 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090695457 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084044565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074704373 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075571192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075736414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085979271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086435208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085883002 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083901641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074787452 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075669306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076216324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076802407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075156109 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084468545 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085665606 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08463076 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075412668 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076994004 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075608351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076830462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08663023 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083013068 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086611661 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08648858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075870647 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075238227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07838989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08698034 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08588827 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085429091 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076524998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086315332 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075525001 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086706129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089352101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07630582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077803933 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075830336 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075557124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07932791 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084001656 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084687463 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076648184 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075766633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07596578 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08616918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084935982 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076457324 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083199945 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074927724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075976288 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076967605 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07666323 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083107377 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085592118 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076368691 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075280919 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074707954 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075220739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073078285 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081930838 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084129321 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083087985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082556376 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075303403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082722622 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211960957 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077499469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086874163 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076738804 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077846815 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078493592 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084290628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085913777 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086047453 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076599818 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076940843 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084129291 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087637273 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076902271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084775711 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087869331 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084998251 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.076003491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089347151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07584639 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085653902 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076507445 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086634104 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076592405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085492303 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07569662 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075607664 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075912718 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085289191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077598802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075685748 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076308254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075899602 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08530037 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088952031 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078030198 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084446492 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084569859 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076746059 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085495206 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07547479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086912176 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075573391 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076799211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075273105 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089570614 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075497709 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074794047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076007327 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086427529 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075688472 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08595403 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083982893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075038226 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087611224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086036993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083579968 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086381184 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076920018 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076640346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074963162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076193952 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083722397 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085456045 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076924549 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074742336 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083248633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085851736 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074159482 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084507099 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084160271 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084719321 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075700601 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075281738 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087146324 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086359232 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084018984 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08394158 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084919969 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076792332 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083751585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084125397 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076042419 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090255996 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075890229 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088671466 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084127251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082358522 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084649853 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085552361 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085473978 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085677121 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087267684 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074090316 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074554737 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083474 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074758217 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073912034 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082119998 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076096999 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075575269 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08688304 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.206664989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.087525207 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075876037 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086006006 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076079271 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077428037 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09059779 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077261615 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077245849 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085908284 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077100798 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085136379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087029044 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084505674 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076117334 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076653199 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086920936 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085795131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078168483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076993805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078331662 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083648901 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084182575 seconds)
  done (took 20.176391002 seconds)
done (took 40.124206277 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211099071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15718619 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17659096 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122222408 seconds)
  done (took 2.138357716 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12189244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106716139 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098880669 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073062607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105134371 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072571272 seconds)
  done (took 1.984831189 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301375087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20728983 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187311384 seconds)
  done (took 2.099634568 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211353517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195674125 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455040257 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279468434 seconds)
  done (took 2.656579171 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150694448 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093482296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075268667 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091798505 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136422269 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164093925 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104430152 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130218823 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087168869 seconds)
  done (took 2.49270223 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151006275 seconds)
done (took 12.934160291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.117528612 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119148406 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121780249 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.134093094 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111247126 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.222423897 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090492671 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216080908 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.240410571 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.098693013 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083996878 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091134216 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.083632262 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.209464365 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086455514 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081456953 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082194623 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.099285585 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.174608835 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.086116357 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187599615 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192963043 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108597933 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149276921 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08046763 seconds)
    (26/309) benchmarking ("sort", Float32, false)...
    done (took 0.142495665 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074538438 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081435944 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.22719193 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082091444 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.130903361 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.081181046 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102746554 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082408657 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079912329 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.079271769 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075032833 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108994739 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090160591 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192925003 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079847597 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.374851716 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196485052 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.183479767 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100283689 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08391525 seconds)
    (47/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079589466 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058175136 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215820936 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084808866 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.089152838 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081061596 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080500771 seconds)
    (54/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070593207 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.070213397 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08818944 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156801338 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.220318929 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077020663 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075506617 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201395916 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073254018 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086690159 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085332674 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161522494 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084056845 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097289727 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174745152 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.101230939 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.072913583 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07290622 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082847086 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058356564 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095959494 seconds)
    (75/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091668251 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058907014 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072909482 seconds)
    (78/309) benchmarking ("sort", Int8, false)...
    done (took 0.150109079 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084058091 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086215949 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108515392 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103283927 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184035191 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.205686857 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058311923 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.072863099 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.263471058 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075357766 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.243916036 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071294472 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1036038 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074155287 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.236414823 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204061313 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152580309 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169824177 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081048255 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05908216 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06042167 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159082496 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162823635 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.122231722 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079443573 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.098531195 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115277458 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070043054 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228747939 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.11041773 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191656659 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080571731 seconds)
    (111/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.107061022 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096896011 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079395769 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084104344 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194654165 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158646454 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080964501 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076383788 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153004753 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154466697 seconds)
    (121/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070549676 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057920321 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102217848 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082006114 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135704598 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161068486 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.203165599 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.146881254 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081243218 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078849148 seconds)
    (131/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071391977 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080044891 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.075186349 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080437528 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058485112 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079541038 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0916946 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213091502 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059373356 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097368572 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163204341 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082059296 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075323665 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079069035 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084175864 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057962096 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086579884 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098706473 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130128297 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079875867 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082886043 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106106658 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079694712 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07241952 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07705274 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081074313 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162175636 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0808213 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059574039 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127570578 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.166751203 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148082231 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082296237 seconds)
    (164/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060332378 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129800183 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095502605 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081770752 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073133813 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122389134 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072883512 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059685812 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078210012 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058853959 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195463799 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057706157 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057788756 seconds)
    (177/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081329559 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.058150691 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084796113 seconds)
    (180/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071998016 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103314355 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099696052 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095231141 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073722772 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.181544224 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.163244499 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.315104297 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074926255 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165146338 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.116315539 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081486923 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076114125 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149895463 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.060004105 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.078265082 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.08326848 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.120043082 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09923383 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.124720774 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 0.140945813 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07433667 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058475614 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073705558 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078516769 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.058397034 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0604693 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.072223588 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059153676 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098458645 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090061951 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.110052859 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07258361 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058425079 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059334787 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08065282 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.088030033 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098895957 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075347282 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070489408 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082354619 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093413933 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.058447323 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062138866 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07447938 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084761755 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074305476 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058412484 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058458728 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080437673 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08354158 seconds)
    (231/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.111311479 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079161767 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058431434 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071108604 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058617217 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.060786397 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.074254849 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057679534 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0719279 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150690504 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058460357 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.088485007 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098572659 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149393047 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07470839 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.08059681 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.079541447 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075415699 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131767993 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174426872 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109496761 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182904029 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 0.204436064 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07312552 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098187919 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073042933 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072224301 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05826638 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110820336 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09601429 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080059841 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076052869 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082041757 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072136408 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058753573 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.072397854 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057805597 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082164286 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149195981 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060284746 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073216622 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073590501 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070912202 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072670477 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071564785 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.059542901 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073905479 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.058340527 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076176193 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059507647 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074071839 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058392323 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071688836 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073112632 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103966457 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081060582 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059122181 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058536152 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05901332 seconds)
    (290/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070661534 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070856959 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071262919 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058902932 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079960416 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072362371 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059085187 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074130381 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072395873 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186695633 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076270219 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072095235 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07899251 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05751799 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110357373 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058932036 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180425307 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078678513 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095454343 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.251017849 seconds)
  done (took 33.63825751 seconds)
done (took 35.057325719 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08951709 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100557638 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082751883 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100436967 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087427806 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083365672 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081011099 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085612081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086882524 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089315106 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085015437 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061972614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081637439 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081990837 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083135245 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098522886 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087158269 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081355578 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080607437 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072277991 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080726797 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073141013 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074927072 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061423665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086362225 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079333266 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079632085 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082441524 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072882967 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073937884 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076750392 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081300707 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073202043 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086327757 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080284651 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08060391 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082357352 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085260832 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075156682 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072930467 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082100478 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07317697 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.08091352 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081607831 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07988754 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079484501 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080503844 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084461556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098793415 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074971856 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082476758 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083323342 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082744268 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080835368 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077897312 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081631006 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078396797 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098627263 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081333764 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075292973 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082146154 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081583682 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079499266 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081193209 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080949844 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08318843 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083728257 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079057617 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082305783 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.079434396 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07324946 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080856426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076336507 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073647089 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084135483 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086212044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07186317 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079468409 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081031278 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079362885 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072631331 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075063439 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074516475 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.079861706 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074826121 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063728789 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077809637 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079995165 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072051734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081530646 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.08021549 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081159369 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074776907 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083486976 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072506743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078356535 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073745607 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073271725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075337261 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077895893 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.072842771 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075012102 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081974074 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074401448 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079617523 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08641849 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.072733768 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.079488018 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07219336 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07215309 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086470806 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082289073 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073097035 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074503995 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.071793084 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080204426 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071631413 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071905431 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071894295 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072185859 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078320402 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072724583 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074583832 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079548609 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.219971103 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07386901 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077510713 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075562232 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073274979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080211742 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073940196 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073086673 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075841745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070222071 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075618792 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073818941 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080858482 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075454792 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081861181 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074458321 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081624675 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078411275 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079955865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078817398 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071653107 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066747769 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075414884 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074871723 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075037324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073005293 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075195027 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072616687 seconds)
done (took 13.591400025 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073954748 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145997108 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102495388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103314508 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093256993 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074639101 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082587598 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106007687 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075413068 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107583416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096403989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093473672 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121020101 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07250207 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073373832 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078387236 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075179467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088723577 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107824635 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095621353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121864895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074004204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099554184 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097067992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095686362 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100997099 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075751474 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077967452 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077484349 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108666899 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097060518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078610001 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074705422 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105112728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100600513 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090333175 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.075001543 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090799373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07461522 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07354301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07569108 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105698647 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087809219 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087364052 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078505807 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085122332 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075173009 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089812351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09719806 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085886172 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093092374 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107275252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076398097 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.0909946 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072366285 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093751231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084305984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076959504 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074435178 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081877662 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074196556 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077619151 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08826314 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08746231 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07830155 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091981665 seconds)
  done (took 7.346366635 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091404751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100116077 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091188723 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092988633 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073296379 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.075559582 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074268681 seconds)
  done (took 2.103492957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075635325 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097368789 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097266789 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.098024132 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090620426 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096301434 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086202325 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07518471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095782337 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075754555 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096106879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10859457 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077908518 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081691487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099081932 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074640322 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099033184 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074526343 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07731157 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098292191 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076816562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104737934 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077993704 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075255393 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08895448 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074864109 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123050522 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079133263 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076528707 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077820491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073384909 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115865759 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088994915 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082542848 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075354034 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089344844 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089691061 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073529235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091428136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083655559 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089193739 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075645045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076455563 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072362954 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078844692 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085964932 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076400655 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075270883 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077563931 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09461348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.076327602 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088599748 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077572496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079917522 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076827776 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080888371 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085499278 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075470894 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094738364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076143511 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091315898 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091307679 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08873887 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091344302 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076503912 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08868762 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088927486 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.078325194 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077017443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078434985 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091705388 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072920678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076500684 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.085556482 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07715648 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098464631 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098534625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07665134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088706775 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075938698 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074689058 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074926711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097711753 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080264999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074393918 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079326055 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077717056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073181709 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073709534 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078971225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072896556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076281639 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078142229 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077575189 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077424734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091549872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.078131366 seconds)
  done (took 9.632295418 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077003172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076268667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0779442 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075896605 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075916732 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076194198 seconds)
  done (took 1.986343109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100560321 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076878392 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088609864 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078737371 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112317363 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095258302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095462548 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085549825 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091476055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086340828 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095200264 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.096584243 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100010119 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079951221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095829268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079250791 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095536074 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08242477 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086120916 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081102794 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093584179 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079906372 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080120322 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089788101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083539719 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079937354 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087109798 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086563269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086180691 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085647996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079772768 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.084041666 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078834669 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086252152 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095358875 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078207483 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079123444 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085026436 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079782851 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083339485 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095836433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079857994 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082346786 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084708622 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085374831 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078729471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08493769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087099893 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094581682 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084537184 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087824746 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078845196 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.082802721 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084494245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078298479 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084953309 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084884421 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095602551 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079725089 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078975099 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07604641 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084047331 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085393603 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083656964 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085232356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084673701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078689542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080094603 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080127341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07913819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085043933 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076184908 seconds)
  done (took 7.662555746 seconds)
done (took 30.231975221 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545046774 seconds)
  done (took 2.036536333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635572802 seconds)
  done (took 2.152011295 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.484386732 seconds)
  done (took 7.999969698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395239922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.495992089 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746568984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140804777 seconds)
  done (took 3.335816263 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.743798285 seconds)
  done (took 2.272509732 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233824789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220891928 seconds)
  done (took 1.992583982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38581961 seconds)
  done (took 1.902375031 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.159563955 seconds)
  done (took 2.677738786 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255270887 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185292056 seconds)
  done (took 1.96421112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.495844003 seconds)
  done (took 2.017558303 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.902436693 seconds)
  done (took 6.425366094 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223895605 seconds)
  done (took 1.79530425 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245082023 seconds)
  done (took 1.768698635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.881994054 seconds)
  done (took 3.407491832 seconds)
done (took 43.27330007 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.092043641 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093523023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093398708 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090325822 seconds)
  done (took 1.881289203 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085217375 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.082222227 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.084841283 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081033812 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.086567649 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081348778 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083298955 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083505999 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080521699 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081279269 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080817937 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080989794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083464155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082890681 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079348356 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083425877 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.085336503 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080976189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084328437 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.08157598 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078884354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.084085772 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083243341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080066811 seconds)
  done (took 3.508670939 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087412873 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081682401 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.084713911 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080054636 seconds)
  done (took 1.866739976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086556584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101164806 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09906056 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086765223 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10094979 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.095778421 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077365556 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077154068 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078673134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086167381 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076481352 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104496609 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.097369174 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086627906 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088791665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074938814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076346088 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096603203 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087030998 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087023187 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.079022412 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086673571 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.077059352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09789793 seconds)
  done (took 3.635461108 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095209298 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110197211 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089329044 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097832638 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100639485 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073536777 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096732909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100099656 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136717383 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073633311 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079177197 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073857638 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082075975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074029063 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089763769 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11751038 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121790931 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077076617 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106082846 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074633462 seconds)
  done (took 3.409240828 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080897465 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.078144012 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075910346 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074100988 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086207883 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081479061 seconds)
  done (took 2.016951969 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076243045 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.077632675 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.076779385 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075499608 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.081059074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07616261 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.075092682 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075617302 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076166259 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075548261 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075322594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074277498 seconds)
  done (took 2.449762803 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207935874 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076385923 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.078504527 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073925632 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078848744 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074488208 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.09014041 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076001737 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10124237 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074721851 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075507864 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077267913 seconds)
  done (took 2.62137857 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216261703 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08447395 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24582294 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160596242 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120696132 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12420443 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121459786 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122711345 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151481524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108823077 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174215829 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175714319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11566455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145133723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101887485 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107826337 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164163039 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172567253 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114395401 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174647315 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155372287 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13526218 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155790151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110982331 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114166945 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131504789 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079766599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089187792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176974446 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140715735 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151779262 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119755958 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101378076 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183728333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179550181 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148788157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15639553 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09344876 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111103469 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141319225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206373957 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096952096 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168039811 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25909559 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090869796 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141805819 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127194731 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.128459785 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112655626 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099247619 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153783043 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192419522 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145921815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097063691 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133989176 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124003598 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12252014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123201474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189117745 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166821443 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137171723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079834391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11742658 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16045212 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142749219 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118068559 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133619771 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099224646 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144297581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16236357 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132450527 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151766916 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126611355 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097662685 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127649194 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150315085 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136069053 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168110315 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132073888 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.08057388 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131793177 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110783037 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088618093 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15731163 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084032026 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18191951 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107344633 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11423474 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13364701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116902293 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116727266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166403088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294056418 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113303426 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.076187332 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11504447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129120431 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156496991 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096135952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116842687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124220205 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085799985 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147722718 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.08447966 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130338562 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083754064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131662552 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137015456 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086755399 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131134667 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112815716 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108961888 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139734848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167339493 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09659794 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091260803 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176015821 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129541324 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110967583 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151328152 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164222457 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108097129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110237715 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158199134 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179382972 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098666634 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170116353 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115827874 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092643041 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096551936 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131192972 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120380707 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134051434 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089872505 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125680894 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175230228 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083519156 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103583568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141716836 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08623772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08808365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112820437 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113194486 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104736878 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109145431 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110268538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14444907 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129717509 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259102732 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134087153 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10868142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180157863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095899779 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11069562 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113331114 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078147943 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144991641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167164992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088753847 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169586228 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130038548 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124697746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127269731 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092612694 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14851641 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088002767 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.079119038 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154279894 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119114729 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118239302 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158324789 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123888128 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133306311 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126196983 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142036167 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138329182 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137618647 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114495112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096393929 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119376682 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136147575 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081498289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098612843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087845973 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112837483 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104790472 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092224161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149285117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131217704 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118098758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119451164 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104988921 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154229952 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083980964 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134657175 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126321913 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103124284 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158416935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158136356 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138673288 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106442789 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141854391 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.223449475 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084196138 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098945144 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130795039 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091924237 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094085035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125762749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155150655 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137359367 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147514048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133821692 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130160023 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164926266 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079074546 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.128880215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153503591 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129988074 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.114471343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099767525 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.108636552 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150649915 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116338214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190226528 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121019439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130370079 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161427005 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110190481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088586018 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110089766 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142597886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112963052 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149360029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10771061 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096460505 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116823399 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083045961 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106165071 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134649353 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127710653 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142964614 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122573327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140720681 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085516682 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123740167 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131036393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12932692 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071888907 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125992292 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166246042 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102940552 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124509881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157232648 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087100767 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.288549362 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183807796 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153358103 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094428141 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117990801 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128267643 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136470722 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128299545 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148009967 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117946739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145326032 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118012216 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093849427 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097876312 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104909221 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113094313 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103084369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.114061468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121062862 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105090192 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140823304 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111089545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118785357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125497558 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.108918484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100222396 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105340635 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184076632 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125288111 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176873132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10735063 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149589717 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169733099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08319351 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087351224 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086024476 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14694326 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092410032 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137906927 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11574024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128219393 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131177239 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14932907 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103729808 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076378914 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115855824 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141022235 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132452802 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106556859 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114495262 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168376555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108052357 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08716869 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120693913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121833719 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257159803 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179168005 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070794984 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115520096 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086317832 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089645863 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135599679 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159567899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0895556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109286954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127357669 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121186279 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134906555 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110602882 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117862631 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135895025 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159301965 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136388852 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097763256 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119464605 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136017109 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162441882 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110049573 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10583455 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181258983 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158951846 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165911405 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097383239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121408742 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121025562 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118116128 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144898107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092219675 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168986566 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090302343 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143923557 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112680727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096326964 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137807359 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117800961 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096435276 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153065816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124293719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091095031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084943912 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126205576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12620171 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113892554 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083427551 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145929533 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.082102053 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138428861 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314042265 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090401194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113801343 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104905438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087865853 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116735474 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112002262 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095610635 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107732416 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178430176 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094417161 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155965819 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139933701 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120867045 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143531817 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110315145 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648413014 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086035967 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159810608 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124436177 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181438462 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108573668 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125206707 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116387667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131370683 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153693619 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111799247 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.194990147 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13967336 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122964497 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087980884 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110048474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112076575 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096584636 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115486433 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121043044 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123223008 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100902718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123946451 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132126894 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090280859 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104613513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162606784 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124037873 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150524992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146843408 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093996143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124532777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14394398 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088057379 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126378624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305644495 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114751165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110233494 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089558415 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110152094 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16670476 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.083227219 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170049054 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128354368 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119075602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120695267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118318089 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142351187 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116728648 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129783204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101840121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117233462 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121657457 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089857472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085061598 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113766445 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120414887 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.107847366 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106049411 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107092476 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158791284 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080440118 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108644178 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122473341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153740484 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180421856 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096334115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091203893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127394773 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123728689 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120588678 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128813944 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087128364 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08992591 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088301853 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08688212 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116362316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121178535 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123361414 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118292716 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169858401 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.092101028 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24794626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103274431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11245336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078389026 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.086340441 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103372164 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10516481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114484096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116678387 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31130564 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.105360407 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.100450149 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101168458 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083341695 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093030616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135687125 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11840382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126298729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111598093 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070941555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117907526 seconds)
  done (took 63.013124516 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116329831 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092183364 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.104752372 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152025669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13026694 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209680035 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162163396 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198406816 seconds)
  done (took 2.814370815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075858817 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104740018 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112780294 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092774093 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075566934 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077531783 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.240341375 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.091011299 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07416322 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105269742 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.087570958 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077676289 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447433044 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074556793 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075826181 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069941944 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07638077 seconds)
  done (took 3.596671686 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.412810957 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626387896 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362694691 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08528205 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.955827275 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100698037 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.147043195 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.145268482 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.087164738 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547311303 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413762963 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139506063 seconds)
  done (took 18.671093699 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.091377135 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083740865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098748686 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097847314 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086803276 seconds)
  done (took 2.102470216 seconds)
done (took 113.169131868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090847528 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.625037235 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06208004 seconds)
  done (took 2.358747211 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091168733 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093626042 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094385673 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092667979 seconds)
  done (took 2.021077998 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082596936 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084784824 seconds)
  done (took 1.81072958 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245809722 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177538777 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105141584 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091722338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088767828 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088647006 seconds)
  done (took 1.916486817 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080145443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083519824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.08030699 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085033272 seconds)
  done (took 1.972715755 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08529639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060345935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062804966 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066050972 seconds)
  done (took 1.918434693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095962789 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087401602 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.088144136 seconds)
  done (took 1.91567729 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110019071 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095057732 seconds)
  done (took 1.850478136 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.09109525 seconds)
  done (took 1.738597349 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10286158 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109481551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140841184 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119654143 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148263331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117825964 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09273202 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093682523 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084960963 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094483331 seconds)
  done (took 2.751110626 seconds)
done (took 22.516374693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088340407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376639644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368894358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099078863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678369521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365066483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.979496179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101872663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123486466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076091217 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093310169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65729819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970030246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331434402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955728089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331213702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659402473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076940318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076348393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076309795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963653473 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076586074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076874963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077376841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657058801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.381632372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076972561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.348800051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076404802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078439789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364342826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076751838 seconds)
  done (took 16.372867664 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079388654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130445932 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081959081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093409208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077899766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077614203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079639203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076761719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130489771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076219259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094685234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075760679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080280437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07699512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096432705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076892581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076956314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076956792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077330163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076935779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095277689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076076625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076628424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077428602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076894165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090117657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077068751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076928744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077183426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079392091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080342443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078486158 seconds)
  done (took 4.33465262 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126358653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136465417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082515377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112929785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120436925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078928595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.15309205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102594899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137180871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076790463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094081709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077240021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111600706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076918931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097310576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076848625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077367416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077294978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076764433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078105039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096614556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076680039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077434745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077695889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077040539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091551705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077091015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077024446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077017088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07895977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080477417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07741904 seconds)
  done (took 4.598302949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.082081322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083815497 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.093353603 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092706764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.078519933 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080315557 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.082659863 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077859887 seconds)
  done (took 2.336399515 seconds)
done (took 29.295500154 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08691128 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078245157 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081253561 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090609619 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082350119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087036071 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075103018 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084473697 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080941932 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.082247955 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083872423 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075392912 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080034971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075128825 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082728358 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07651896 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088511851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080354536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087894633 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088642466 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078600558 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082338439 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083919841 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088119796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087999079 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088356604 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086123358 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.08184261 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07699319 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078990044 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085992028 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.093555477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076962904 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087976078 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075914182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076051876 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079816818 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076569377 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087727311 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085863664 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077833878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084708339 seconds)
  done (took 5.114737298 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096522364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100952407 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094016044 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069853375 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074971724 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074114785 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098250394 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068116994 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06751145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.096791919 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063603408 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067844608 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071553505 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061873565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068571738 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064931583 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070379217 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063493863 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068478227 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06790026 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098083645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06224985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087510511 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071948988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063920247 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070478951 seconds)
  done (took 3.633496712 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082715517 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094393088 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098854494 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140384522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115163579 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088046015 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088921465 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104975336 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097958147 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075420764 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079858955 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102343264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099252327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082484079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0758739 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095277013 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092510622 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077500674 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082162999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103760122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095752361 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.095208973 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104521482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091995477 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075657923 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079391959 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080016637 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090554429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079254114 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.086007086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079340196 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080085986 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078223188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08778069 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078944975 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078115813 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104833488 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086402038 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090398496 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076794579 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084204449 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077430082 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101647569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136656231 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07545075 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081915461 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080020412 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.086247936 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075178069 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096554249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087823461 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075237902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078986541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074811522 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075227274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07887201 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077683518 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078361704 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085225113 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.083442202 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101402783 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081495899 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.09270061 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07575643 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085064271 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075046146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076909528 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07478962 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104998224 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078377562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.12031578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076503513 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077039485 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.084997043 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.086137105 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082720821 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076423221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092855735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087442772 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079784605 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084645519 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079443409 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078905827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10031198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078557718 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078288457 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077182617 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081807446 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079620297 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077232029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089613675 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075665206 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078962721 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093537037 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.076028651 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077172252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.08232005 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.08074809 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076134076 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087634569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080602153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076667429 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086103135 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076307156 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078561091 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088902291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082201105 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074872584 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080634824 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081627851 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076593867 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077248577 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.079171703 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077619324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084202129 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082126049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079734006 seconds)
  done (took 11.668457575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175816094 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168704193 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080241564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159003094 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08609171 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088327796 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161675636 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.1045092 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076963937 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077511428 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077269117 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120460786 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115636572 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125663698 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087849907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076531316 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093368527 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.125204608 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.163300878 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.157919281 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093454945 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086544271 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079134951 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078278451 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079867798 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087524876 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094784436 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085983199 seconds)
  done (took 4.714379706 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087638815 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11653111 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083687816 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100518793 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098940952 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.077069583 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079166167 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078485213 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090194709 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086027126 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076303278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082649995 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083167491 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080426644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076968937 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083310392 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084126086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077690514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079900805 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082137188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087077415 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100780156 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080501335 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075717265 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081392127 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075776106 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071398771 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093138356 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076680522 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105519992 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074869881 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081863571 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092182484 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07800758 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075844092 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07711827 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076280108 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076397954 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078333693 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076997503 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075234446 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065616949 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075704544 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087847736 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083713058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064894201 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080947449 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081664642 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081785611 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073711134 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079846078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079800539 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079525959 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084221922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080552387 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082067213 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078250646 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082780952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08609344 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076499 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073586075 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074499791 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081627982 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073272752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085642597 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081526454 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075538312 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075903107 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078167468 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083738294 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075855195 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081144092 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073456581 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078803023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081311555 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078044638 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07727423 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074392414 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076809324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076250448 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06303232 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076592256 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061452371 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079797871 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074046097 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074423365 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076122516 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081203904 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087746177 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077549579 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082428392 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077748349 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075392237 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080046766 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068481897 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079412663 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088122607 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090399969 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076162052 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074543638 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.09108769 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081148559 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074926428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063818651 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080750972 seconds)
  done (took 10.11087746 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.101445082 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078261388 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092913913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099622394 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097870571 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.08346913 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086444624 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077737597 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093010729 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083660543 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086080514 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076241588 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087199306 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086322226 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078442705 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087467386 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081138241 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094139971 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092474131 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076928921 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085552889 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090028947 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099900389 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.09179663 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089747875 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.091183089 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099749085 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086495555 seconds)
  done (took 4.184920733 seconds)
done (took 41.08767813 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.777736475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.927673177 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.745559413 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081937553 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.826096789 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.950752367 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.938318337 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739269576 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.939249592 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.780172003 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.018247621 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.951644617 seconds)
done (took 65.49084544 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.835414257 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878010526 seconds)
    (2/2) benchmarking "String"...
    done (took 1.975857767 seconds)
  done (took 5.522199633 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.006131145 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.311857361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.983766255 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.734077849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.740981201 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.054244718 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.5404651 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253039026 seconds)
  done (took 30.287956815 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.895949085 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.962150867 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434664705 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.467113123 seconds)
  done (took 15.483975087 seconds)
done (took 62.902945224 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.755124475 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.744132022 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.751504649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.717197704 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.794635801 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.745546431 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.001751949 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.744929502 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.734178089 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.721978995 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.735977824 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.202711257 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.745543051 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.301080765 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.7346786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.74374702 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.777365656 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.322467465 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.891610184 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.741743798 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.747612994 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.744600947 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.734316842 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.747478215 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.769075681 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.734247171 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.126973523 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.747495746 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.351459202 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.732960651 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.764698816 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764637059 seconds)
  done (took 202.541622357 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.731942218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.706456989 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.77121267 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760720786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.102399784 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.911383817 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.836127133 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.126963595 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.734095094 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.748467698 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.966505455 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.731107577 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.984682628 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.676703278 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759483604 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.839789647 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.919070503 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.96552548 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.763003445 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.897624355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.738195395 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.787015798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.735647795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.923765289 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.771543058 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.820120854 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.749295243 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.918309948 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.928401218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.906652802 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.776477795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.737714888 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.957959015 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610758932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.747789438 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.750106036 seconds)
  done (took 168.459483476 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.904023981 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.73808457 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736432507 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736112394 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.735387281 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.747944367 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.735872587 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.737901829 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86045625 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.355398284 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.241589796 seconds)
    (11/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.864640775 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.788591942 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737389921 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534701006 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.737473436 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804590027 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.749670743 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.739574242 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752880903 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.76434403 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739334206 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740536603 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862681625 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.747612616 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.949775482 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745661927 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738512413 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742066288 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.108705306 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737360677 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742757548 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.991187207 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.74052137 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738737978 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.582230386 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.292852849 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820563859 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.740072049 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743175318 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.738194168 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954744854 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739196752 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738316442 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.74065628 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.863815737 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741240878 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.859460546 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740991454 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.220723417 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738724691 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739547243 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.369711259 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.328938499 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.740400721 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.739982703 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.741434137 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.738640852 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.73866962 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.744748698 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.327310955 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.816263621 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741625065 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.742587943 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745073754 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.739718228 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.820452248 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739502859 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.053036186 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.792606484 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.860753615 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861283335 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740915997 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806826871 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83230272 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.740070326 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.738219124 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739530011 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740466279 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.819982464 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.740092059 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.864899321 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74767915 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.746723677 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.796187348 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812030953 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743891339 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594289057 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.746276081 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.744676099 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014557819 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81057239 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744853386 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.744405332 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744124753 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.865389739 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868377747 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462405393 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.748632887 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.371753138 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.753031059 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.881399376 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747743115 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88145166 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.745503079 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.745494127 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828064428 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75033087 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.746221157 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744228392 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777738971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.746970532 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.805820767 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744855037 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12032319 seconds)
  done (took 397.577391553 seconds)
done (took 772.209293019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403883533 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.366720899 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.470912377 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.387058409 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.364206842 seconds)
  done (took 13.672463293 seconds)
done (took 15.352320976 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834043591 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.84100038 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769375018 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838297708 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.767280212 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837110238 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819678998 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.771800402 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.806886667 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.771585344 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806258993 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771810791 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759359622 seconds)
  done (took 25.074727641 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975284669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977114244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.818473426 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976581637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794256087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.973806224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912380606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.899495339 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898566799 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764626331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760532006 seconds)
  done (took 22.432523432 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97566816 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983342883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825313032 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988187486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799317277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986108136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.915522538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.902925488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900385393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766849672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759430894 seconds)
  done (took 22.485451302 seconds)
done (took 71.672571869 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.75640247 seconds)
  done (took 3.437552717 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784480028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.951155937 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763253067 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.760402511 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.756997748 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757086496 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.760010989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.756195001 seconds)
  done (took 15.972013399 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.755387609 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752244326 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.755580579 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.755242846 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.754074183 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75574817 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.754627213 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.755155968 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.756667267 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752233049 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.755877784 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.753495886 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.753453883 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753538066 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754151572 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.75346893 seconds)
  done (took 29.753442489 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.755023419 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753359246 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753090315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754954463 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75449768 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753415577 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754944037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754411963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.754399171 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.753981815 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.754425298 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.753402757 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754109601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.753509031 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.755553696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.755372886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.754986708 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.754315282 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.758884667 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.754140404 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755418971 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.754355364 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.75398404 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.755560982 seconds)
  done (took 43.795772659 seconds)
done (took 94.641544116 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.527132817 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.389390075 seconds)
  done (took 9.599917764 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.760503055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756652032 seconds)
  done (took 5.261561176 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757900655 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756869781 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.758235062 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757519866 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.757940237 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757687371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.757520861 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758057548 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.758157428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.757486238 seconds)
  done (took 19.261778323 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.757880804 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.757940445 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.757087367 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.758476539 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.757666357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75586481 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.757767249 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.758017009 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758310021 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756907146 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.758445043 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.755887975 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.758988014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.756605823 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758994564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.755290797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.755774336 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.756509169 seconds)
  done (took 33.318155269 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759768407 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.759411106 seconds)
  done (took 5.204873636 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756658178 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755492003 seconds)
    (3/7) benchmarking "month"...
    done (took 1.756612245 seconds)
    (4/7) benchmarking "year"...
    done (took 1.756956624 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.757081431 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.7562076 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.756864425 seconds)
  done (took 13.981642936 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761433123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.919262215 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985216473 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.417107037 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762143906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763355367 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.723094213 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.763306184 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.764156948 seconds)
  done (took 19.545583971 seconds)
done (took 107.858385465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.560211205 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.755777941 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.999771849 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.87463755 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.772459854 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052066203 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793193153 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.065937807 seconds)
done (took 42.561613641 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788064933 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.973198264 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.067442747 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.782346371 seconds)
  done (took 16.509555206 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.740592959 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289503827 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.798116952 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.348631159 seconds)
  done (took 19.895694737 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.127771698 seconds)
    (2/2) benchmarking "read"...
    done (took 2.110113162 seconds)
  done (took 5.930345849 seconds)
done (took 50.812890457 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761366604 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761494449 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.761466307 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.759368009 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.758858603 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.762002873 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.758475642 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.758374947 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.759710906 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.761957653 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.762845738 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76165481 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.761653773 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.760380491 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762112759 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759028026 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759599121 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761759708 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758916734 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758506571 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759236743 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761369955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.760399752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.758930634 seconds)
  done (took 43.93939658 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76258079 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.760234743 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764400147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762396643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.760014519 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.762972235 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.762632316 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.760615335 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764313713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.764044964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760781769 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.761033439 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762581337 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.760671029 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764495119 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.759651955 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762585602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760729092 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763242311 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762736389 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.76447436 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761024243 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.760729798 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764289734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76084695 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762164579 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765185633 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.761688607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76443455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761065858 seconds)
  done (took 54.558448064 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769443369 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.771057043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76425465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.763808589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763636225 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765152242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.764740467 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764137054 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764610956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.764483695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.764467598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763960832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764579898 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.764328597 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.76452412 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765390418 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.76499021 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766221893 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.764895706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.76604123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.764413077 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.7653628 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766235504 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765534456 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.765695619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.766105338 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764761266 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.765607538 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.765587788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.766173653 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.766178465 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765516381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.766100701 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.766229316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.767116557 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.765592045 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.77098 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.773128818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.767201077 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767390873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.765613327 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.767066104 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.767116955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.767792081 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.766071672 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.766954891 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767043037 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.767391793 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.766531413 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.768688703 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.766285374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768129227 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.765328879 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.766782179 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.766197073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.766622702 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.768841763 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.767807691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.767583702 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.766755138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766330054 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766938976 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.769143383 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768095263 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.767672426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.76665988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766935815 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.76788585 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.769479505 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767797437 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.76720238 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767569162 seconds)
  done (took 128.880456204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.770296359 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765544955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764791529 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.76506498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765472546 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768173328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765907684 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768449589 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765456393 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768347652 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76786478 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765985823 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765980688 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769111286 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768685001 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764988769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.769281727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768196153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.768195782 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769315442 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768972347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.765964902 seconds)
  done (took 40.573315988 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769803568 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770991081 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.767247422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769527195 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76623292 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770080064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770336053 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768744478 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769683715 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766034527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766213619 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771343044 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766988451 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766375546 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767123616 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765867166 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77051244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76816335 seconds)
  done (took 33.526859345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767284799 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767776959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.769020725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767365331 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.768870409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769772731 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766629178 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.771338102 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.76923206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767753105 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.770961642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770546703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.77011268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768022102 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770166473 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769429178 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.771013726 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767502354 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769974597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767623803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768276424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771808179 seconds)
  done (took 40.616470766 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770523268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77098329 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.768686763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769869448 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76803302 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.771617642 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.771140766 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768857174 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77142194 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.771867307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769149837 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771727953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.768964713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770630126 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.769297404 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769838117 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.772515664 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770564218 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772846104 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.769597908 seconds)
  done (took 37.104883365 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77294087 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773288482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773978609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773372699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774548775 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774270573 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774029803 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.773632267 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774256071 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773708636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773131136 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775579671 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773160999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774147624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77396843 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772949738 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775200048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774184926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774316506 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774764762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.774504044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77455631 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775529234 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.775441885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774707125 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774816503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774396494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774204077 seconds)
  done (took 51.376988955 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773118092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773920311 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.770479117 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.770074487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.771175712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.770312477 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770636967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771443895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77276495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77163526 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.774270495 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.773987707 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773950759 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.77494564 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773583412 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.777228462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774483757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.772499523 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772157317 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77223902 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.774134665 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776071005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.774818567 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772316855 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771668043 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.774858756 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772005842 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.773762824 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77676826 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773038814 seconds)
  done (took 54.894600494 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.794473438 seconds)
    (2/2) benchmarking "in"...
    done (took 1.793983408 seconds)
  done (took 5.289180388 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.77278753 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775645366 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.774577353 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772180255 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.771454916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775168141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776244835 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772092317 seconds)
  done (took 15.891870073 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.775275238 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.77552135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.776451766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.77742147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.776830412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.775454918 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782326438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775474799 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.777085879 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.778075333 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.781994355 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78360704 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77990463 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777186405 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776670402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777981162 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776159171 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.777588914 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77701856 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.77671563 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778640364 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777152665 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777978965 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.775517537 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778762129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786842057 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.780490421 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776966561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777099834 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782665672 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777542439 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776982302 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.77902774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.777500828 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.777839186 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778109897 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785190668 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778004088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.78546023 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778156713 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778593648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.775049278 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779435158 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779321091 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778940038 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.779177185 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.779346094 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774125372 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.777249125 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781172352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.783203618 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778045173 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.775749151 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781617612 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779245017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784336241 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.779615178 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.783481448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.78651748 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.787941376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792054938 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784908055 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779373861 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.779912588 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787613606 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800284053 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785242155 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776484036 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.776661193 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.779413661 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.785553374 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791906885 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.78732835 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.779878061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780350826 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.778659318 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7800417 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77983103 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787127166 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783080403 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.780285115 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780205908 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788685212 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80175742 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779199726 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.7821849 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781036703 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781441815 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.78089459 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789466339 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.781440075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782471641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.780031008 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780288668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78226545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.781720457 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.781744507 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782229856 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.778254496 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.781447748 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78284262 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785092603 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.78967561 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782033881 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780812355 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788123232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.782393701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781244126 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788717505 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.781422188 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782730532 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782165942 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78895874 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.777096577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783940802 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.788885603 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.781625482 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78254587 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.782643617 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783795514 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790769488 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806730178 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782605161 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781016646 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788793884 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793540401 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782601901 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.785020072 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782625112 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779103681 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.780623309 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783239893 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.78312759 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.783286898 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783483616 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783488625 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.778382962 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.78313113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.783411205 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.783628878 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784506294 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783640844 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784185092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785344404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783320202 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784394069 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.789587636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783741119 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784561116 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78433612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.78069668 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784919904 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785198214 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.784857052 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.784075048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78410103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783106315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784314887 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784513127 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783188381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784368607 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784934652 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787744306 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.785499976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.787897854 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.784433094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780324705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783417803 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.784858468 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784889961 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.78355138 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.783226297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.787528193 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791746545 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.78567712 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.785559036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786734329 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785621879 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786664698 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785460408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789917414 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79153447 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.785546098 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.791471719 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.785058376 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786015635 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785572129 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.784298677 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786742379 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786761392 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.789390569 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793730929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798882098 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79330046 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788820277 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788320711 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788181609 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789994439 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790199661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786776152 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.786086527 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787915832 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785215409 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787822675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788789727 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.786427424 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787123629 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.786272637 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.788212849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.787546235 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787684836 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789112894 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788853496 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.78495026 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787687655 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78702777 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.785920502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785381639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.78626054 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788125306 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.787163513 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788026343 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.793305876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785458438 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788313507 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788980601 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787051432 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786743717 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.787235434 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790171133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787226155 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794572374 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787730429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788721313 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793364545 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787479006 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788248299 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.789804829 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788411818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784754935 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.790386609 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795508548 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.78995898 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788478565 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.78905855 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788509073 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789168529 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795452274 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.78537301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.787655592 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788362582 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.790960652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.785857873 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.7904224 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790079827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.790268426 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791415891 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789645878 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.789915497 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791488968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79105597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.790921967 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790215691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79320187 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798375768 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793472992 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.790188084 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.792337831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.791129424 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.794324801 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792148975 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.790411074 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790006633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801636715 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797454066 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795526245 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791749479 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789351511 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794181076 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.789708017 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795091992 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789867082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790761176 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.790794487 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.789299775 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.787353685 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791558452 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.791074435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792093898 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791303923 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794380356 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790346578 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790947958 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.791010291 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.792658048 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.790956767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790767243 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79267562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.793457237 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793570247 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790390223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791424671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797844615 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792391332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.792890159 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790615986 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.790600848 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.791212257 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.793064953 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.793521359 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.793817394 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.799971624 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.79420872 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800442206 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.793928421 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800643418 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.793115862 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793931072 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.80056475 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.788849886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.792404747 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.79466851 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792797153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800037423 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793323825 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.7953454 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798069281 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795139493 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.794178523 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.794699272 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.793844644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794622395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.793267844 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800095775 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793639115 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.795917955 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795228236 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789755792 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794471337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793768773 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792675253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796594059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.795176863 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79487855 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793740276 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.793711933 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.792588598 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795318458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.794302292 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790911783 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.794079571 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800268481 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794627498 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799230783 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.7948151 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.80343497 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793940218 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801878563 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.795183546 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.795071048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795416249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.795389206 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.796391848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793666177 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795681516 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794720155 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.796981142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79830462 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795118887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.797365392 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794439177 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.7964426 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796239957 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805082468 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818661304 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.796123787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801052694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.792817816 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796773232 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.799080252 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.797197183 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795525928 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.79844971 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806100607 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803508647 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.79592464 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.796279128 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797796516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796864684 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.796859601 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.795771808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.797312543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796924888 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.797036871 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.797238909 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800645728 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.796035208 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797063214 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797120926 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797488072 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805643761 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.796537361 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.797379318 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7975357 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796076223 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.79762725 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.797144408 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.79678665 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798098733 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798148646 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.797404119 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804110757 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.803513398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.79991201 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796562666 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.796696016 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796419329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.798277159 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797747466 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.798401907 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800244749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799500768 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.798066362 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79908862 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.79574569 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799103489 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798772511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798538842 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801774496 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.804117165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79844746 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.795404064 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797444222 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798657194 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.798088099 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.799013557 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807331335 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80098554 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808119377 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806441231 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.804240497 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798414857 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803212664 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.805548664 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.797511389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.799360543 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.800474154 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.801159335 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800381906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801809392 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800558448 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805822324 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799587725 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.800209159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807488968 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.801168734 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800858158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.800899889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804050293 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799589111 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79701928 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.799489312 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.799446003 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806119499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.801800297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800630612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80224559 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.79791519 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801307248 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804384154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799593796 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.801730062 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796801168 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800188091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801694115 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800920619 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798239352 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799493216 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800830104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803565368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807728034 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.79929113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802266505 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800838483 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801563938 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801914398 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801957027 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.79744613 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798289917 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.801572552 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80250551 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801876025 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804899169 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.801994546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.802803719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802706495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80319345 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805475418 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812799409 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808948399 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799313732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801358195 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802941975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80461746 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803236689 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.802448272 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802420349 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803324935 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801980304 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803754309 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802001878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.805617469 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817919117 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.80304906 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803810262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.802706391 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806447302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.802820238 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79982499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80267282 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.8053737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806197447 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.810435359 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.804298475 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808998692 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803808719 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804852676 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.806911755 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806072907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.810198677 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.80486743 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804502073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.803649645 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811267244 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.818080655 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803838828 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813520327 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832529643 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804862856 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805462607 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.804940208 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803539335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80502861 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.807602602 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.805749147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804555829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804081122 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805373422 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.806590087 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810288598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.805649233 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.804261614 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.804208026 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804639615 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.807165536 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.801355959 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.804025324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804459091 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.80504657 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.805461343 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805522649 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.805422482 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818019569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814065113 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.805187221 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.805061875 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802011921 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808114821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807636422 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815188953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.813453592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80605856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.805661377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.807087533 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806365088 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.804065288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.806451408 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.806294446 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805336519 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.803380424 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.819232092 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814152062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810796429 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.805383277 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807031682 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.806327332 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807805573 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806404959 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807820203 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.807028145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.806622709 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810878401 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806819409 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807211433 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810007504 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.813682379 seconds)
  done (took 1070.483099395 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804088992 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805278213 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804728035 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804297546 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804371667 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804124907 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804677654 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804894249 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.80474778 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804043248 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804017622 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804927774 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805056981 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805384785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80464496 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803942535 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80508207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805114131 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805025496 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804653556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805745541 seconds)
  done (took 39.630161035 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.808076475 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.805552255 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805001707 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808326785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804563649 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806841079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805207103 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807494665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807489149 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805331326 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807690603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807829302 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.80526054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.804723793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805551403 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807250324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808811191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806254843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.808637809 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807235306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807765625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806083022 seconds)
  done (took 41.479903634 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.80974482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.809556771 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.809163789 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806123367 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.808668089 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.807326627 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.809212974 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.809421255 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.809195794 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.810313488 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.808227573 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.81109605 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.815668564 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.813976507 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811497048 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810457469 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953563835 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.810560133 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.811601163 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811062711 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.806943377 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.815893012 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.807814986 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806703813 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.810360121 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.811811353 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.809578295 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.809774789 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81080286 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.811514853 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.815100219 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.810930885 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.810211683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.812389798 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.810071655 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.811574423 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.815229402 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.812299979 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808178918 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.809948063 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820744553 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.829915427 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.812379233 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.816977621 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.811982323 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.811461318 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814840131 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.819165178 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.808095185 seconds)
  done (took 90.644150278 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.811185335 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.811000359 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.809028614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810803568 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.811549005 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811353679 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.811227424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811555256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.809012552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.809284871 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811767838 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.809915254 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808764435 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.811504137 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.811172217 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.808442939 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.809245021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808589331 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.808986856 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.809340164 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809611177 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811386306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.812818266 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.808960507 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.812657567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809342277 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810133397 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.813777335 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809625465 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.809861097 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.813050252 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811740334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.812531687 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810990167 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.809160957 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813727959 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814319296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809198059 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814106903 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.810082243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.812640464 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812555919 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.813043421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.81375421 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811510017 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.811188203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.810725108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.810680603 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.810560815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.813714372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.814385975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810945802 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812964709 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.810934914 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813763065 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.814138859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812242692 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.811029463 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.814387802 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811813503 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.813287557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814735283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.812526458 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.813769467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.814685392 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.811560577 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.811626793 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815442175 seconds)
  done (took 124.92418819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815765378 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.816101091 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816299637 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816218662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815424103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816490703 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816067012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.816275525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.816532932 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816508991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816258209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.816316391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.81679021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816818748 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817148407 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815804249 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.816612855 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817394595 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816503481 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816118466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.815718108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.816733416 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816448792 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816782379 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817506729 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816548265 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816988824 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816130446 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816291775 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816438236 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817294708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.816598338 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816713051 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818000046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.817699897 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.818688779 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816842478 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816955863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.817666474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816414796 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816879923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817221832 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816551824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.816938365 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81734275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817643002 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818523859 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.817738224 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81754802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817716976 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.817558737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817351921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818368997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817584736 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.818390285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.817547392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81871228 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818140701 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818374569 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.818946351 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818445423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.818172552 seconds)
  done (took 114.399682532 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817449927 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819136419 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.815062551 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.815007105 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81830921 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.815948374 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817177636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.817815456 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81790086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.818135747 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818146048 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816285959 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816742614 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817346499 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815982585 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816612096 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817529952 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814649268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819036869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815358623 seconds)
  done (took 38.083067879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.815506826 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818153362 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.816780212 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.816568029 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.818604806 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81646235 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.81977882 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819125034 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816018919 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819256062 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819556239 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818762884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816306199 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818127477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819984859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815893918 seconds)
  done (took 30.828114131 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.816567642 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.820112251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.820634398 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820793325 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817329414 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.817669321 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.819141216 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.818111093 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.818069408 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.821326284 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.819291671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.821068188 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.820473481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.821528495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.817781532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.820570531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.818426374 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.817992877 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.820450955 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821969499 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818151056 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.817345644 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.821134636 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.820107299 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.819189539 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.818669318 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.818587288 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.817670261 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.817801804 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.820438645 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.818370866 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.819574809 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.820851761 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.819051731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.821433606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818121834 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.82095093 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820511355 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.820757689 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.821636802 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.820776005 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.8198788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.821902953 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.821231707 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.819941232 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.821724894 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.819650965 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.8190598 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.819601373 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820244946 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822197433 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821917192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.822352519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.823105683 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.822207655 seconds)
  done (took 101.841381539 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821213551 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82265778 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819232268 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.822340448 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8222346 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.820936937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822987591 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.819582238 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821326108 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.823734328 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822241594 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822819087 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820607445 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823770068 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820908106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823648702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820632028 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820791643 seconds)
  done (took 34.539346537 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820839169 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822189745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823985599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821371407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.821017854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823562324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821827337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.823158974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823419263 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821401239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820981924 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.823233731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82310913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.8243108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.820904199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820888503 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.824119663 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824372589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.820728889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821216464 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825036448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824219328 seconds)
  done (took 41.844288162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82392009 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.823925578 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.839113273 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.844874192 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.844806699 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.860434129 seconds)
  done (took 12.785523786 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821832891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825403318 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821340478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824498456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824180193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823257953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822098402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823562734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824091163 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823544188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823539732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825875239 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825701398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822808346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825947989 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825895108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824293026 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82282086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82223124 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826316187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821805928 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826190737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82418517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82296962 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823420507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82375638 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825977654 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824738382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824535132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825828995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825785414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824570636 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827408746 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824423389 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826399953 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826842853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823951209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825924817 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827668612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825149501 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826447864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827035846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826611415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824624082 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827554912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824805481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825487872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824118824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824186769 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827845737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82840595 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824955224 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828809936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827594493 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826858242 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828206516 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825782739 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824999716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827090019 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824448437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826236759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828066219 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8251263 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825024072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827410646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825681029 seconds)
  done (took 122.214912918 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825176333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824917923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826912554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82623478 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826038924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825877533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827496416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825788286 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825949728 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826285555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829066182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826647328 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827593684 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826727455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826330253 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826602153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826463543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826879526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8264364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829359195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826751495 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827497653 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826432233 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827425858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826904393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828852156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827399756 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827713809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827667113 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827738068 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826800191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826796762 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826882274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827252829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828286716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827439063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828340329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828372612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827858482 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829787906 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828381688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830444199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82845878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828556844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828815086 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827238473 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827653168 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828295083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828793607 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828220373 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828754503 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828752284 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828275041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828246625 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828673276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828617143 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828575165 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829335784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829826684 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831395481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829614194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829653933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831553681 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828601357 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829939732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829931453 seconds)
  done (took 122.394097177 seconds)
done (took 2494.437213697 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.831026515 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.01228561 seconds)
  done (took 15.598594647 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994853062 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947460591 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831890737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.85023159 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.832115132 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.850392717 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.851393692 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.832108935 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83179994 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.83267524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.83225488 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.019827198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.886985428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.83192637 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.83192512 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.926862572 seconds)
  done (took 51.745524864 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.83286617 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.83319973 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843071975 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.834876689 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.832206039 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.846975084 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.867816711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.835550722 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895244035 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847702665 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.954463925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.844293359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.832486822 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.893093618 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.846705256 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.847135969 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92864152 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.911054796 seconds)
  done (took 35.28577799 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913205079 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.837444318 seconds)
  done (took 10.513124839 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.858331009 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.859579558 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875481793 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.835710729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842717314 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.859589366 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850053059 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84822073 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858050119 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.846995005 seconds)
  done (took 70.294974148 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.839075733 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.834869383 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.834690608 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.833231342 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.825145714 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.829219759 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.832823895 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.827252089 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.510820282 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.868230147 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840719365 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.837496601 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.832735903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.835230473 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.830786631 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.856285458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.92674657 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.83060937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.830081488 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.838244608 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.834548433 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.888493121 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.847731417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835566498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.864623175 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.513019594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.842061539 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839109108 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.925015501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.831643408 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.832736186 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.834177037 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.83539888 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.201771567 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102998291 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.834633298 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.848355069 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.841886257 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.830974752 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.925809391 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.834496483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839030069 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.44160206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.083414699 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928140795 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.878505019 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.156176129 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.853826958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.836480519 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.862362204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.839000824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.835694809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.848336956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.31015058 seconds)
  done (took 130.113766952 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.831266169 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.183477037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002624453 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832485053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121310375 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044963628 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.832313495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88294541 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832163447 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063978582 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09029049 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943353677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.832270605 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.829642758 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.82983558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.828338381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992969951 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907173602 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832605344 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.829001053 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863965597 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078905451 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960608653 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833956715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862794694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048221717 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.958859984 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943039142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.621084588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.829808717 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89842962 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.832388694 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.831557777 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.828260006 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991108785 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931605912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920093814 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.834795371 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.830526549 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829877328 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.504425428 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036881821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.932776622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.977102985 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.034500392 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044753236 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.618171366 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.830356341 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.574878379 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998583961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.06616863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066466249 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.95945484 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.834584382 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.154440541 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829887074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830311464 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087290521 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979371872 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93793963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835629734 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831531331 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831488743 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081719628 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83511595 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.932536088 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833733102 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.831728815 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935890092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938808528 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.976637616 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051081799 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867524643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.782226323 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.364581664 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086164589 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.905406569 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088586284 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.835374483 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830981006 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915829215 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.67981725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092063757 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090801304 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091103669 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875149426 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.560212627 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.83102903 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.063649472 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.060250049 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08808032 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043076722 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.07364422 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.158280897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.83262251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.832452676 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.051907132 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975178311 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836850031 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187752435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072454529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.397736725 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85754113 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1467177 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970382021 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835691746 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.479221043 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.832897915 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061812778 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878593149 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834976015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832478077 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056917337 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.811620936 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834723778 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.686397157 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.901185145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837233274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071625136 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837215792 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101113959 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836303711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076756856 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.948657324 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871038211 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.013616847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044730341 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.837977125 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086875637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086074555 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956992587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113710603 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.74105466 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83480203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128189846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838214612 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.835529987 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009879376 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837604095 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987643868 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838999738 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12421766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862260606 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071694164 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840903777 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094427226 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874994888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892035434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839878763 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972569516 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839372585 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.674779461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000164677 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837700505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835948709 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.393451194 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.835294755 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990597004 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075088713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863261428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915042314 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513045929 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835865639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929441279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865328363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.229680583 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.836355554 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.095636271 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.840460544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.83697899 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.836550086 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082162913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078627197 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839163937 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83713255 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.739775588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.837667236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837142334 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023579439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.19772782 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837092444 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045387147 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842468538 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970645544 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84018156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.920855638 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.175866993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837250623 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.837729703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.836344516 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.837899843 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837518245 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051733548 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869872055 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.377211871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.980530135 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110991494 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.15362324 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.091941674 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888172002 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839046461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101555245 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842677866 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.905343932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.840644807 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864216564 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076453696 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841510642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053068505 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.123098528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.885343608 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891739035 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.842595561 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.838928848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.837909675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989656674 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934913858 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840817511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.837828972 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958741194 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967214367 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053168562 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.837958032 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.879846176 seconds)
  done (took 896.176279597 seconds)
done (took 1211.485839631 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.833213878 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834425063 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.817729384 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.83416049 seconds)
  done (took 29.082425939 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.839757532 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.836432496 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.837747204 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.834472454 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.836885708 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.83473533 seconds)
  done (took 12.780328274 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.844278945 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829744284 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827141435 seconds)
  done (took 21.260668849 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898920913 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219399171 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.93957844 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.709077149 seconds)
  done (took 10.524338858 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.829329903 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.830160749 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.829209292 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.830932206 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.833124531 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.830476782 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.827470453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.829460898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.830844972 seconds)
  done (took 18.227414739 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.290105535 seconds)
done (took 97.929388515 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.902337168 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.766912217 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.875477314 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135595187 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522666651 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.021058158 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065958018 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.024325189 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.820005103 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.859891539 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.855215493 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.471893945 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.870701728 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.840747959 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.887240596 seconds)
    (16/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.86779232 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.866930137 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.943621282 seconds)
    (19/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.917059861 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.863000134 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.067188089 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138451981 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.770397206 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.863434984 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.159240615 seconds)
    (26/309) benchmarking ("sort", Float32, false)...
    done (took 5.560819164 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948163778 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.921070669 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.258172632 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.860621347 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.911636657 seconds)
    (32/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.864073852 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487985362 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.926919433 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.924886369 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.873001433 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.895885713 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.543010925 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690910352 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.842284248 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.984264765 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.934104461 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.005456123 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333255152 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.057562258 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.020064207 seconds)
    (47/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.934810936 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137885856 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131077761 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.937151967 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.403624329 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.00513892 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.086756611 seconds)
    (54/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.404544491 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.153288079 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009040708 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.899404684 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.180441512 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.907234283 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.894646933 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.250654683 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.212711378 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.841394885 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.039449922 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.028489707 seconds)
    (66/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.938989109 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.975468671 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.328669742 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852461534 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.591665468 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.146332765 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.984232887 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.202477094 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.180288072 seconds)
    (75/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.240879217 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225042904 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.540117453 seconds)
    (78/309) benchmarking ("sort", Int8, false)...
    done (took 4.79912842 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.859857216 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.847296283 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993735239 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.968566672 seconds)
    (83/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.984937049 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.168797855 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.277344709 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.5382821 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.08264454 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.85333649 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.902734612 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.101367675 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.704115656 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.077191838 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.834708299 seconds)
    (94/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.495024096 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.853792382 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.993542596 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880021748 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277649535 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.83661459 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.021645068 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.020431128 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.30544647 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.013058793 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.790677518 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.041775705 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.979575198 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.097384067 seconds)
    (108/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.94848848 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.032823224 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.1936364 seconds)
    (111/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.922490544 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.126586897 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.32615853 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.85482196 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.937311451 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.182493889 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.171987668 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.912851527 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865344117 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.8483412 seconds)
    (121/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.984074186 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052594787 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.851454387 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.016471832 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.868346838 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.109565003 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.84056136 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.199125813 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.873651574 seconds)
    (130/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.871445456 seconds)
    (131/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.834034465 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.389100722 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.001103547 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.875937276 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.166660248 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.079177224 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.102952949 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.834955942 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.410585864 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.628755882 seconds)
    (141/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130828699 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.882818765 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.178780153 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.040118402 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.86019499 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.903844235 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.553565016 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.064798862 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.643769347 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.080003044 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.872108708 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.493687911 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.995734254 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.091840746 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.919759983 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.877909022 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.923211343 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887625106 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.267981394 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.948536708 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.837620016 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.078128018 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.941385744 seconds)
    (164/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.837415462 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.439133046 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.820748448 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.878954129 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.8545304 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.024063244 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.190551476 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.840776217 seconds)
    (172/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.871424481 seconds)
    (173/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.953574723 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.855667841 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.050885735 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.14644149 seconds)
    (177/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.869538582 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.963917125 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153538374 seconds)
    (180/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.786080212 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.878492428 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.71914819 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877522922 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.853028388 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.280152212 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.046293435 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.860822368 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114766052 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957740498 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.968327366 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.881180312 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.953546777 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.852634624 seconds)
    (194/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.348214917 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.953139453 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.883138235 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.297474895 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.955900425 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.029151652 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 5.606902121 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.241544774 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.473908687 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.094364992 seconds)
    (204/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.937638801 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.947443011 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.831465659 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.16189197 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.831993882 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.298992032 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.767329829 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.938945319 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.901006032 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.132135638 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.927343328 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.928858404 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.35356927 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.499755618 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.931727517 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.992853585 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.681729337 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.033155362 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.93724718 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.266735997 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.929288686 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293202792 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.941174267 seconds)
    (227/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.922811105 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.739094381 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.908883552 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.824460362 seconds)
    (231/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.078216322 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.872286945 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.941729209 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.386156204 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.184204325 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.307206896 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.278484987 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.193345232 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.886459457 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.930877014 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.823014582 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.470065509 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.799998018 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.708316329 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.839573165 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.04723144 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.22110682 seconds)
    (248/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.835558353 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.940642785 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350698351 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.935758393 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.991249718 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 6.854260563 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.234770657 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.679059475 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.950299521 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947493332 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.207927459 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95970778 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.866294646 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.870315275 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.980607479 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.201071901 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.955960132 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.947584845 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.910407001 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.026324619 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.864285552 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840204693 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.823810669 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.14660133 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.84070062 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.080781812 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.25222804 seconds)
    (275/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.085546138 seconds)
    (276/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.940995574 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.855290735 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.420515845 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.010708412 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.05181205 seconds)
    (281/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.808085052 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.983079954 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.945506083 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.141902804 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83490942 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.063217608 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.138355114 seconds)
    (288/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.194306745 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145623648 seconds)
    (290/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.09949641 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.942096583 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.989372212 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298417055 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.609442668 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178611181 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.304304548 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.033775823 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129148162 seconds)
    (299/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.85177388 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.909664173 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.22622078 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.87369187 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.083477883 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920313755 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.364531735 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.848880454 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.870019181 seconds)
    (308/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.928437392 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.787194845 seconds)
  done (took 1000.936033022 seconds)
done (took 1002.767263492 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.880130095 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869989826 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.854073159 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.873556831 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.967589898 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.881484318 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.864908524 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.856444578 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.899165735 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.901730736 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.851555383 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.878393092 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.855833167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.845650051 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849784878 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863405188 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.167269255 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.886094563 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.865358047 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.857323534 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.865623046 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.848675538 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.898412162 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877133037 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.849161347 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.847669213 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.849979955 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.866664715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.955015504 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.847778023 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843112189 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.855312923 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.159450915 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.87921687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.837800925 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.861528579 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852466503 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.852697873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.846061631 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.874306254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.246928536 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882795405 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.839406883 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.842595261 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840313193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.83979774 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.839569145 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.843020012 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85020906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853882497 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.243668033 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.896089105 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.842429042 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.839207241 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.848357306 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.837297836 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.840105086 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853040882 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.855675757 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852579789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142536832 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.871171214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.836889158 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849313293 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.842210057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.27584439 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.869055653 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.837032113 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.242286626 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.878391421 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.272414576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.879089797 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.831966359 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.842562645 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.859538997 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145308511 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.851890238 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.825389465 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.833166989 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.825954623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836938353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839989264 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.8288964 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.826244939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838599431 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.85439614 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.835944024 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.827815688 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.837261746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.845099581 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.837482944 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.837804804 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830267075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821573889 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.835017848 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.830858849 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.82861362 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.83156768 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832635579 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.83711991 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.233592671 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885409413 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823883524 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.823857265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.825466477 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.839566395 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.234077828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.872579156 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.848945648 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.874969598 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829311237 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.134528837 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.862838151 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844737028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.836039078 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831254439 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.820390995 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.135464167 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269233693 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.887279341 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.828604578 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.82593782 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843180376 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.828686861 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.823550873 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.144745171 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.86343361 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.844581609 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.950610479 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.843316031 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.86348381 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.827514433 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831578275 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.857399793 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845614897 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.863260709 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.83401916 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846771459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.845393755 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.825589311 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.841061048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.841143383 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.83416804 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.834956261 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823190948 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.857442009 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843480215 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84097161 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.847982855 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.949932105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.826428971 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.135594656 seconds)
done (took 288.84637874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.900794533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.82394418 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.923618705 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.829719062 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908699766 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.913293923 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.824405569 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.824946988 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.824870333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.200991565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.824966954 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.826008838 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.823279106 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.82698312 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907689048 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.829469799 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.824822312 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164713337 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.829463737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899751595 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.824869194 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.826620032 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.82757016 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.202492616 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.822803109 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83010775 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.902899754 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828404379 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.166328477 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.827280024 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.823192812 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.166903756 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.919111216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.847080442 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.838122121 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837621757 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.914146356 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.833697728 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.910660432 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.910198266 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.925976663 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.87113809 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.829334968 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.826859862 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.835407181 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.832044444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826939951 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.857406894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823500174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.827466255 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.163699035 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.841470762 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.836989642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.828558958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.827869198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.852867334 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.827426782 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.834728352 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920749536 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.831155976 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.892581748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.202970495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.203060444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.82965343 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.829180173 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829457506 seconds)
  done (took 181.54673563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898000455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.902657053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.897315016 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.836010601 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.877579714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.896915503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.836158861 seconds)
  done (took 14.89589386 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.838029736 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831244379 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88489944 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882973158 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.830780047 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981276074 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832386878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.843456427 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.830374593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.883458767 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.832317737 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.833743188 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.836637809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.8243222 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883135446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.843448249 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.950122545 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.83323491 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.833789403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.985675725 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838066613 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.83907102 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.88765475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.846348442 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833575329 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.840003036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.415586658 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832525157 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829997619 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.831511053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828464219 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.873830037 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832362243 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.832807484 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829405516 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949050726 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.834019996 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83100762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.834181638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.831495137 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.833137098 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.831873028 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.833273878 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.83134653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.832029181 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.855356686 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.832207173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.832583844 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.834565413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834114327 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882568945 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83613307 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.831334385 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.831454882 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.888167091 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840310187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.834101758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.831662017 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.834164894 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830851376 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.984632235 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.884024626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832369057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884834117 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834850474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835401166 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.834109051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.834137777 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932400639 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.834527826 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888446467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.829635159 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.992405274 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.859962393 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83404678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838071009 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.836334279 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834563534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.828625198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.840504919 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.830636936 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835132962 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.839294385 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831091385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830672804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943563553 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939401391 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.82805142 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844154154 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.841767355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828498796 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.883225059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.832225654 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.828970937 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889141649 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.950678902 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.887258546 seconds)
  done (took 202.247609774 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.83692474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.83963675 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.833843332 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.848812634 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.83222439 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.832362407 seconds)
  done (took 12.775695623 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.833868066 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.832838243 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.831871142 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.831910627 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.831123257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.831778336 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.835357678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833595318 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.838014815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.832534358 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.833426385 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.835157225 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.833057222 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.832224654 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.83256149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.831657255 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831271009 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829676656 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.831995213 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832641665 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.992027866 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.83240685 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833272103 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.833986249 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.838962474 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.83100897 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841644024 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.832701872 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.832661783 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.844277143 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.83662698 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.831842619 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.833521229 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.840704826 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.836692564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.83391537 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836415911 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.834314297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829556284 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.832440638 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.831640588 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830557296 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.830544665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.832158071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.830374275 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.833593661 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.834028718 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.836049211 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.83056203 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.831009008 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.824562245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.825604657 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.824968959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827359667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.82858533 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829897333 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.830288132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.823904876 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.824708253 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.826409783 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.823850048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.826402352 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827497697 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.829901881 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.822891139 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.824498439 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.824268432 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.830630899 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824830105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825229387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.826187858 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.823004379 seconds)
  done (took 134.766791081 seconds)
done (took 547.99782107 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.973834832 seconds)
  done (took 8.715860819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.901630907 seconds)
  done (took 8.733189855 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.344307158 seconds)
  done (took 10.137246 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887963733 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.884299764 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.872271923 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.861418195 seconds)
  done (took 29.32017932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.006576907 seconds)
  done (took 8.796841271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.878130993 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.854746174 seconds)
  done (took 15.554947907 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.041385583 seconds)
  done (took 8.826967335 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.964066417 seconds)
  done (took 8.771196807 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876513025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.899396865 seconds)
  done (took 15.571022665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.835904025 seconds)
  done (took 8.616044098 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.566802535 seconds)
  done (took 11.444959417 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.877311942 seconds)
  done (took 8.766193002 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.886839199 seconds)
  done (took 8.667183328 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.94002864 seconds)
  done (took 8.719846301 seconds)
done (took 162.38540289 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854544575 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.853241772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.855751028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.853603124 seconds)
  done (took 29.197482407 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.892203424 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.892062846 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.894885755 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903956483 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.89533656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.891650652 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.884241487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.885177709 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.902678378 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.895608111 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.895096579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.895137424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.892676738 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.884424215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.895587689 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.895010422 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.904653291 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.894278939 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.886029471 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.896961216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.860225323 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.904526317 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.896216199 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.860389845 seconds)
  done (took 47.18007081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.060410863 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935915415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.014943511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.9134756 seconds)
  done (took 9.705707549 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.911629885 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.913749752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.925503317 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.964573805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.990536264 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.924941107 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.888666808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.8834186 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.869144053 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.91541238 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.99027449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.913325047 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.999706401 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.860076914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.045337448 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.862016336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.861028214 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.912821551 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.964833839 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.978468874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.86174011 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.912955535 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.916064621 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.915701619 seconds)
  done (took 47.964761846 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.8596297 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.867824259 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.865776597 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.861866019 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.860507217 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.860992733 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.86624173 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.862838389 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.882418204 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.862698268 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.860865443 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.862384298 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.860991832 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.861256097 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.861006887 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.873742373 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.875382541 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.860504427 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.864123534 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.86816072 seconds)
  done (took 39.082834958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.853956605 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.709567472 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.207068125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.109757345 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.855034108 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.855183924 seconds)
  done (took 31.374848707 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.876574894 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.867659935 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.862123158 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.922430051 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.003674341 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87262302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.863074844 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.87506709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912058206 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92846247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884826274 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.894266147 seconds)
  done (took 24.547186066 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.858691875 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.871794006 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.859428291 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.887010687 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.873903123 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.870955433 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.869878019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.856591214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.876387705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.882572443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871308808 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875276444 seconds)
  done (took 44.242829946 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948634479 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7469339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921706839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583264991 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395486427 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069913247 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380635566 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202450519 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.862966505 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133409757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.844010966 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110096037 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114563546 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85848065 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930758742 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.316860545 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159840115 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095121341 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88998884 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530333408 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999505611 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452343971 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.669947061 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00576021 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088608287 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.006539772 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.136032751 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833491064 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014704582 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918000331 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886706873 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876367293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150400907 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268098048 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990985271 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886008402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.537182586 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.59362251 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.868736329 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.671943878 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.762780531 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.018393258 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888060734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88006285 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813353162 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486691454 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221368806 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.884838693 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.581179558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880248373 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89062358 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970434129 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.883360385 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.69565763 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833256217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160332159 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.876154749 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88616029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450653464 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955669158 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.569885161 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.817904834 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.977819983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564465702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364306654 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.043901876 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.890282593 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89174492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822751033 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.641996585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013707722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035137905 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.90770458 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53851857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198555303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.94360645 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978402726 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185858889 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683849347 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.94961034 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116550229 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.84630018 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823208717 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.738608539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823929473 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161146378 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931060368 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.524786233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934560617 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228833065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899747043 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912178497 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896227906 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113607431 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.772485121 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889069207 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.662172678 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17672673 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911475524 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.230016808 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825016543 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.893650787 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14512947 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.101526601 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.060592273 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.456631379 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058096869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891229347 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.980025792 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.744803152 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012880211 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.173731954 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952950253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963094179 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025249433 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852407604 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202263626 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922841452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068222942 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.902198481 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159579398 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214861422 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149718834 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977133356 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896476455 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89439797 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646564434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522716157 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.118901517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.894898904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315203719 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014188133 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.89552984 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82804591 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.599486892 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953365968 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.013068909 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117898388 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.773474585 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277938231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829135572 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03976848 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005996789 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.117266462 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549896518 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.977772474 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156190541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326454228 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.156576286 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015678475 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913282251 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98808887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916396015 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.260321585 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258388373 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898347154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.899087199 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609628425 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967309039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897072934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900262916 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698950213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182131824 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922399866 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904737727 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.783450943 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.909772907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961794867 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899082052 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904779831 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399520249 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649227678 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.90671644 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.661500186 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121298364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905320239 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.570523741 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090525188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.978445253 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179721079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959197683 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.830473342 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.60072327 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.599484546 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895737421 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832058108 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896880703 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905259125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908665126 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.093242449 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18850781 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944957414 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.573128717 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.015246854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909018925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.901620999 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897821228 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.391129595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981864954 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.501019399 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016504482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033460388 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.910213694 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830820019 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.900937225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901082343 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897541972 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.855313762 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950475173 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.573056335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355761531 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159788385 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.552926326 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916395807 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.595920068 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.030149893 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.924574759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.676332679 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925419902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.994395066 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968551121 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.90869034 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.569811921 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.67142868 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468842764 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211782481 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213529478 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349131679 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.323443193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.227987378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241098235 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134335072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.428962037 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960462478 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246718118 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846449025 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99134711 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.556068359 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26248951 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914976522 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127661912 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291124504 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.738599073 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067212019 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108775531 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934027778 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.758828317 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936529634 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.105523601 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05616067 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.664870534 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13214887 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245308073 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675123404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.021072059 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.899910352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.622502099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990312152 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.611833038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264904107 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357133606 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029831562 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406516086 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911313732 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3464567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258587639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.173097618 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.120420037 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837175918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912337075 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912200286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.902229326 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.89684652 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.853107396 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.195315783 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912981327 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138192479 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.103948099 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275515268 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.811118639 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.90833226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90301925 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20492382 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.625025544 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146596809 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.284811294 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.503859229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918585254 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836603192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835545332 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.60635817 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.903885955 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880283852 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134079982 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016809025 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857338473 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3239489 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222160988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157841908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.914290749 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.180367034 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180041845 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64049727 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932050225 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.002836276 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66287097 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.615791236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126633126 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141611156 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710381108 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134209327 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.979094006 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.874947053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.902932826 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120200478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.126646953 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.932320384 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161310935 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.630166303 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.914040689 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279625402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965137492 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.890401789 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.125166313 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000295791 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915444961 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98867219 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914071852 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.916761902 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917343223 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956542421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882679423 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.039532077 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920139787 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998011278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978400526 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.515704748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.925258153 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187698929 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274008766 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237690907 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969209767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90599657 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91046984 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839595677 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04356018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352730005 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179372474 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035418791 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.048630867 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934175957 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659892317 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.241772711 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225215244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183573106 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801505482 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905047015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998514686 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.132685359 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916194615 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.118500662 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140249665 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233794026 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382196257 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.10656758 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355030371 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180082242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275681371 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907996131 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499504148 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.921523898 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686771455 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.954324222 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915999747 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198643892 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918214491 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296457736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934166457 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.102833401 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.424136883 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.570482735 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276557262 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.900342232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972422735 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190269266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310551304 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224866914 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976527846 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920463937 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.608269002 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045977574 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.891979764 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189202119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908888771 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121940982 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620712027 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918671565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201390098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222027743 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905964046 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.91835262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967032511 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.918537127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133364101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175371713 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163072832 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919601204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910005926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.727188461 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194110509 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972073387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842747992 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.913727803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007983023 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160073138 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93022971 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.426748829 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613085276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211409522 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.833291248 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93302606 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356148776 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357944684 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245286262 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.437059658 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147822895 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474207012 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798265526 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288727561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916237815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355361435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293171094 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.91325416 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45186095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029260396 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.18128726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236933848 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.930630469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712333434 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.957126809 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136010368 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515905531 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855317818 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917981499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.973521848 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91195588 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.042306342 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923451658 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.90061908 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835581233 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.755512107 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404525092 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.918498572 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.904183641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.691708041 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5102637 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026009831 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06867942 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920605405 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.63612572 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.205837181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168165421 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462323571 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.987717443 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.916713307 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913559505 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841891067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.110263386 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.111863074 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216478886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.3138126 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.028249119 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919369643 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130255734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126473042 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.853426165 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070343679 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343979936 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030225297 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.831743639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629068853 seconds)
  done (took 1701.940498513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919966404 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.224526482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.924153332 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.93362848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942267933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935821727 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.986396343 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923621866 seconds)
  done (took 57.630289467 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.913912677 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.143090909 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.925867295 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.915237105 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.952663656 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.916570444 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.168395422 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.927862608 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938723081 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.924811734 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.914057229 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.927128971 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.286316988 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.947443594 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.918953331 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.930624157 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936996442 seconds)
  done (took 75.437922789 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.920582947 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.251018144 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.943646812 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.942131089 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.81187341 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923558179 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.021086333 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97928544 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921191745 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.093232138 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.257172174 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.934235918 seconds)
  done (took 90.842861957 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.934111928 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925031555 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.92413449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.927108356 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.925931197 seconds)
  done (took 11.487878943 seconds)
done (took 2212.431232104 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.227234668 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143629024 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161152254 seconds)
  done (took 6.147554858 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.068666397 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.116759181 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.234934464 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.240393561 seconds)
  done (took 10.506453698 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.211630545 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.303937626 seconds)
  done (took 6.357281144 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.249563594 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.953586085 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.300182564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918192644 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.919060393 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.920282581 seconds)
  done (took 22.605143991 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.922648694 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.925650526 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.924666248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.926250094 seconds)
  done (took 9.541679929 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.903262677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679940685 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.903329788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.920416278 seconds)
  done (took 21.24921464 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67410387 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.31949712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.666379779 seconds)
  done (took 9.50401858 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.415349387 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.843350514 seconds)
  done (took 9.101681088 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.163685021 seconds)
  done (took 4.006002569 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.951769064 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195220048 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438763952 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.446670489 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537292363 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.750545603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.25382716 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.163509388 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.372078913 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.385009333 seconds)
  done (took 25.338115724 seconds)
done (took 139.932688129 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.349791737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.95164234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.127970558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.283356405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.159500908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126265907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.139954297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.271522412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.809075098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.803950366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.288023751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.155242788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.085068049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940962403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.09563665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938650472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.150531701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.36906093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.003213873 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.19034335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.152933319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.933986193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139624962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.971888539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.175936272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.072818707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.505974156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.951794152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.182964401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.557586949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.092191904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.388722842 seconds)
  done (took 170.209159556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.925127585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.943336457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.94393483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.923928033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.315309605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.941777458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925221208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.921783666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.110282376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.039551878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.94147432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.292471429 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939855167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924378366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944638649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.923816391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.222405847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941455167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945658678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.946162738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.94746863 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.126676969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.940537245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.148285896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.173965248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941408024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.924155183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942897296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.945172132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946201404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.948083738 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.925261113 seconds)
  done (took 209.791476836 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.924207534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927626644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930961369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926099419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934665799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.936114657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928217572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924489415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.462766546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.463176311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.941841238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.934469802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.937691978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.923875411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935945253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925616148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.936932509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.935808933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938822044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.940779376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942704954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.578077328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.941442439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.576207994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936099306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937382985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.925853425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939682825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.942019545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941230426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944754278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.925818384 seconds)
  done (took 222.115934425 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.116224577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.932561869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.932608499 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861770842 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.933031615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.932262945 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.92078408 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.116193889 seconds)
  done (took 19.617603179 seconds)
done (took 623.589367325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.397369542 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241501149 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.112585095 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.956606153 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.203889917 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.990702063 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.95300658 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.022685932 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.679415415 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.024465719 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.597528272 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.977943796 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692684394 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985747855 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.075103786 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.016806206 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.542555582 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.642557254 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.1319326 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029206314 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.124696216 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.923521826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.041954954 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.72422235 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.714530234 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.976557881 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140696211 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.55090675 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.966413616 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.113663569 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.713475091 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.361072278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.97020213 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.953172937 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.0120959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.990040966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303498181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.967095819 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078024356 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.726001837 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031480152 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.569545827 seconds)
  done (took 106.07722874 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.921672668 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.922675186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.92062276 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.921853198 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.923102425 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.920387563 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.92125676 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.92208271 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.921552977 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.922794081 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.921506425 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.921640412 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.921108973 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.921541211 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.922088199 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.920581695 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.921633846 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92508856 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.921766458 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.921447364 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.923233271 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923130429 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.938171435 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.92271928 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.922346339 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.924429342 seconds)
  done (took 51.852186257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.937799204 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.100785952 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.177827445 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958471566 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.938115257 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.939515356 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.954982208 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.941992347 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.939991942 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.939815839 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.031362925 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.94464882 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.954640881 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177144747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.956082485 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.937850715 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.938359497 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.938929666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.1086349 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955129981 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.957331797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.944747081 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.957158174 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.951801947 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.938902924 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.937239932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.940998789 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.436069759 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.947723142 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.033256366 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98329547 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.964346888 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.38127974 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.189211488 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998221402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.951083064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939854592 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.036984164 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.945117777 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.939621374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.95684948 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.944532841 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.174708621 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.432334334 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.955732998 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.93891014 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.448256969 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.047225548 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.982863504 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9511225 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.17902292 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.961176846 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94171975 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.941588091 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.975316469 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.948246878 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.93901776 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.293797998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.954764425 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.959071998 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.945947808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942077875 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110753595 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.946914213 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.099213127 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.949056665 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.945844952 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.94043199 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.178657361 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.960496957 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.43992659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955595576 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.939547105 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.036668476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109277393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.473229199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.953986575 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114243036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.402773256 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.966460428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.951463979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.42903472 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.970861015 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.951564305 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.942580408 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.944096928 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939577979 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.986364342 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.956799275 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371363631 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.442962799 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.314184472 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.969347172 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.959173073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939805522 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294825514 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.948951758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.940321632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175111792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.4478286 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.958283543 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.948973377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426245273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.961277703 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.96065693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.950070892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.183560858 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95983278 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.98748373 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.941706392 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.945326154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.944200408 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.95950042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.949628404 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.939748973 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.416415289 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.062026326 seconds)
  done (took 240.713420623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.937472248 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.958269372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.934426211 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.940854006 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.93556564 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.940656565 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.936598115 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.93525531 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.940112855 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.937166399 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.936728948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.938490524 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.940730183 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.942755204 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.05927071 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.944635128 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.549853715 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.939089837 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.938317112 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.936999866 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.684319814 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.944893348 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.938287689 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.937694635 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939801702 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.940225417 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.949137818 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.046789308 seconds)
  done (took 169.767705641 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.944971625 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.059951524 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.964750524 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.97104454 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.953053922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.942169932 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.965114579 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.958575665 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.951002506 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.941143828 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.944688427 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.005426224 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.9558952 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.041892935 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.975340724 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.977095074 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050211039 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.950324952 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.943129746 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.942892646 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.974572674 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.941335658 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.007312441 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.074798198 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963857032 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06417273 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.950374203 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.944478937 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.945858308 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06601981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.962981876 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.006557745 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.973642038 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.964509973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07137742 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.064906876 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.051750108 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.973729791 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951162491 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.943586328 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.944560795 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.933267801 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063979653 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.965774795 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.946853983 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054215857 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.967959734 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.947198043 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.954998849 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.945575056 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.959673548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.965049162 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.015963972 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.080150007 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.9801533 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.971944642 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.971195303 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.23304542 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952713462 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045767671 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.937801765 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.063823998 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.969787134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.933072583 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.946849271 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.951139893 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.974750993 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.978763777 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.051050516 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.956078432 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.047041682 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.983842333 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.953802189 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.945716568 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.948085943 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.064800209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.065777345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.981076963 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983227382 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978285148 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.942511564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.947645394 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.934227679 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.963469406 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.951401012 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.065702322 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067471719 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.954260783 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.950296738 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.949473337 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.949967102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975459294 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075451495 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.985152088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043751716 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.017125228 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.024979777 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.96444457 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.959295398 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.955030029 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.012687153 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964117672 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.961144066 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.281698285 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.017419468 seconds)
  done (took 210.730420017 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.422674688 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.001733811 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.00751299 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.280739651 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.387445023 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.87090613 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.994811947 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.998294305 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.022153432 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.187053524 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.066325209 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020275154 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.984170709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.971846262 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.998559691 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.016533238 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.006551557 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.338456523 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.120589269 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.116766427 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981676712 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.284172993 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.319585421 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.396673509 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.034071709 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.340128821 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687207031 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.139119431 seconds)
  done (took 63.870404287 seconds)
done (took 844.86259207 seconds)
SAVING RESULT...
DONE!
