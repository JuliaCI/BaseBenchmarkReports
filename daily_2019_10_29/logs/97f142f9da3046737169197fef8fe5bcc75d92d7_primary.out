cset: moving following pidspec: 8623
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346667049 seconds)
loading group "string"... done (took 0.54622623 seconds)
loading group "linalg"... done (took 7.054770011 seconds)
loading group "parallel"... done (took 0.16385109 seconds)
loading group "find"... done (took 1.083902511 seconds)
loading group "tuple"... done (took 1.831293462 seconds)
loading group "dates"... done (took 1.186735338 seconds)
loading group "micro"... done (took 0.228270662 seconds)
loading group "io"... done (took 0.91490609 seconds)
loading group "scalar"... done (took 36.303861905 seconds)
loading group "sparse"... done (took 11.184890251 seconds)
loading group "broadcast"... done (took 0.899416514 seconds)
loading group "union"... done (took 11.924673453 seconds)
loading group "simd"... done (took 4.144817002 seconds)
loading group "random"... done (took 8.511879181 seconds)
loading group "problem"... done (took 1.853248038 seconds)
loading group "array"... done (took 19.694188247 seconds)
loading group "misc"... done (took 1.625770646 seconds)
loading group "sort"... done (took 3.064162205 seconds)
loading group "collection"... done (took 16.348245235 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485014748 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123053786 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114276651 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118927462 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145435092 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114021708 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122683694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083832526 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.79000537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155093097 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119997933 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.4158859 seconds)
done (took 5.075215083 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17356722 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082884014 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080741015 seconds)
  done (took 1.286592097 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065857362 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120781298 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0660543 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067118558 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067127354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066045935 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065977222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065641673 seconds)
  done (took 1.642242247 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073561024 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068940096 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068443706 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068258412 seconds)
  done (took 1.403379781 seconds)
done (took 5.703823523 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764430693 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204124294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18205474 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39795586 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132544613 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157827052 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64906077 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317887315 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183379163 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081400223 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104785383 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317361729 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107743652 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6385167 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074194168 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090717638 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136723403 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424611551 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067800628 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081835809 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089195198 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127227327 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085392492 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074353699 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142444026 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067731651 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133780971 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083689465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06677556 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208957767 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172378725 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651532013 seconds)
  done (took 10.180680332 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095466749 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097256768 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068491706 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136372227 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096595042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069453489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070924293 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067988646 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087071106 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127905492 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088892608 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101095281 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065430619 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06878509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084687397 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203636457 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079654521 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081262654 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070170321 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075474074 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119058546 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078177083 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078081516 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077574891 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12796316 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178972514 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098199128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096772818 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06671918 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080556582 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115376953 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125884176 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065336511 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066488837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124730464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094031554 seconds)
  done (took 4.587642614 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.293833624 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139880431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090817611 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132328986 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065031964 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106610864 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06558939 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080292413 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200729638 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368133776 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113139864 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.582995581 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113719101 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104000918 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067679695 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068386469 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066396535 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345591624 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10783518 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104062801 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081099298 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069694641 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068016779 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341729365 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070250852 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064340787 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067523341 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057868012 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123330857 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067645971 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921424079 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124113394 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066291739 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100934659 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161907323 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086573209 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.2714625 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067828772 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064830591 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149449053 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070549344 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066542387 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082738134 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103495966 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112874478 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065257643 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067280446 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161094616 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065223155 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078434476 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972544298 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154200611 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076014623 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064750628 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245687085 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085126799 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068807201 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064626948 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195670953 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138293384 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068961617 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066140728 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067886709 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069087415 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.357323538 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066365249 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.962779675 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070481025 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077544204 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068886523 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069177512 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072694998 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072721685 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087407167 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066499478 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075461149 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065775504 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065809847 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066517454 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084438715 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.349331723 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066169577 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06792085 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064720402 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085506199 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096544597 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066241457 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064758606 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099706464 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064408118 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067329029 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.166904764 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105863226 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066415734 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063959175 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084165842 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06919515 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113217232 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068770783 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10537845 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06744854 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103640591 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069506268 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098907031 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080663422 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067840086 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.392750197 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06594891 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065058254 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068040191 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065546951 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066871185 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066029916 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063636483 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079206326 seconds)
  done (took 21.150052288 seconds)
done (took 38.334748189 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233891388 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079468116 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079780969 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078581132 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075355905 seconds)
  done (took 1.761237375 seconds)
done (took 2.956207359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119575597 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098502253 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063595429 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095050988 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063776447 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099671206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099080205 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08050839 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098637329 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063989569 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095145935 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063738099 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063900506 seconds)
  done (took 2.320682518 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081961208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083141521 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069280091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081818775 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063471841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081814766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080229854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087865189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080662348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071720047 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063397153 seconds)
  done (took 2.035015007 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081259218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083261431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069031634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081441517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066200344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080857093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080631233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085240125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081013409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072813151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063303073 seconds)
  done (took 2.033158246 seconds)
done (took 7.572602723 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07744544 seconds)
  done (took 1.25760778 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590564094 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.092586958 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081268044 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112207765 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183173883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1201782 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282021273 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086862956 seconds)
  done (took 8.907006347 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088663889 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068438846 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069097109 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081997021 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071236353 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069714512 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070621566 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071385021 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069500884 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067974093 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071752035 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069756758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071332691 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071187592 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071559029 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067991214 seconds)
  done (took 2.403837212 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092132347 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09013655 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073670063 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074335108 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072058199 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071938714 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074054089 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073645093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070792924 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071861615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074791165 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073342628 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071441582 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064795339 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074197381 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075315883 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070932574 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074067667 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074814826 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074540521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074513591 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064304427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071498486 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0740794 seconds)
  done (took 3.06038717 seconds)
done (took 16.81661882 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114416148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071213896 seconds)
  done (took 1.369687996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083553382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083467199 seconds)
  done (took 1.36014368 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084835462 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065306643 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093567623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078998353 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066237572 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06614216 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089750336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066175233 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065785466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066075504 seconds)
  done (took 1.936030143 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068631719 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078944468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071177214 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081487892 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074410492 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064229057 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073330294 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067869359 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079030943 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063085477 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072226511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082959195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071822741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084624744 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072461968 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069023107 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071588691 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067952412 seconds)
  done (took 2.512456677 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065949928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066756139 seconds)
  done (took 1.331910904 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067746717 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063895565 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067442492 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067658025 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063604723 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06265586 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063879688 seconds)
  done (took 1.652590053 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379962822 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10984555 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296616959 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070948139 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081352566 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247614713 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0647024 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070238436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069810352 seconds)
  done (took 2.629410159 seconds)
done (took 13.989831677 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078455942 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085862699 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094644749 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360015549 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091490129 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065508155 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113382461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189277476 seconds)
done (took 2.28519353 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217616986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610736071 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385709882 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195771421 seconds)
  done (took 2.391695449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324821764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086094817 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058716778 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066135264 seconds)
  done (took 1.743585883 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065087476 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068716657 seconds)
  done (took 1.34020229 seconds)
done (took 6.899178547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066358034 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06550853 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084306426 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062780061 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065841768 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063095029 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063324411 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065510375 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063445442 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065339331 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068187838 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065382556 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065267248 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06316029 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063219524 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063095488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065943333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063025151 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063231944 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063113722 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065199472 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06583343 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063177834 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062940868 seconds)
  done (took 2.806323422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084324724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066754085 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071450371 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071255321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070357011 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073630012 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070949281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065629555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071312085 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06801003 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069570045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069804559 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06801467 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069658409 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06764692 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06954422 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070837306 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066227286 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06770412 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069879214 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071246539 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066284135 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069770877 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071003369 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069538152 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071540589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067699591 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066166167 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070655627 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070000655 seconds)
  done (took 3.312022361 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070127845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063470647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063798317 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070248509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063532965 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064545524 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063105553 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063765329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063988358 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063048992 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064656811 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062985074 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063035212 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064068835 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06407675 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066640903 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078589046 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063534179 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063454442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063876625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066394772 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06309922 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063268331 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063239918 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063067604 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06276354 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063873904 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063303133 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064162521 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174642451 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066172069 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066623324 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063197266 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069693465 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066692322 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063136811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067050682 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062780505 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063864754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062718656 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062847434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063019211 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063007377 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069725839 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0628657 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064466222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063966288 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064508154 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063355238 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065909839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062822398 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063382573 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064878604 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064062742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066791547 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06252171 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06409187 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06273612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064121552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062981142 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062404726 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062930117 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065520746 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063619258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077076629 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069314318 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062691645 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065027287 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063823909 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065511367 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064908878 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076352777 seconds)
  done (took 6.003987627 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091704017 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087123151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065430484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065293444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061609412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063928403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067342002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063872086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065312376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069382365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063612007 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065017649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065074716 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076157522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06410725 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06529769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069823059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061625367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063579481 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067423913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063890235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067341479 seconds)
  done (took 2.721201614 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153456476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069915773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105043185 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073063208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067651765 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072828138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069582548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069929186 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069667608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068169832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067993863 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069446504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067872656 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067796586 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06835474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067791206 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069643712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068093818 seconds)
  done (took 2.586849903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076889709 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066302238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085444375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066366764 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065828138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067885582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070796619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073952145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06791516 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065537078 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07403299 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067791334 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067889084 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065732494 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067811234 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065471597 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067771672 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065561778 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073752635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070406938 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070335306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073959512 seconds)
  done (took 2.759629206 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079942618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068288583 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081901468 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068533942 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061924365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063848321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06995907 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065767565 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070014922 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067231156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065628811 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063893837 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069558969 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065559708 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06922351 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065562642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067588687 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065761536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067496949 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06152269 seconds)
  done (took 2.583997958 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086582691 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067997096 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067421537 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07579369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067035729 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067000609 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074935614 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066880218 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067148481 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087249266 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067705143 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067152787 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075058226 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072264155 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067535151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074866636 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074973785 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074852936 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0668311 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066646371 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086747224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067067191 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074574875 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067804476 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066837695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066760189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067007715 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07214084 seconds)
  done (took 3.231692825 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06562388 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066141849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063407674 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063018228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063471733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063228354 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063407073 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062970303 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065582811 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063128316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0658242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065361638 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065340443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065886681 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065508998 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065529654 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066273327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063335108 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06340188 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063308715 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065612457 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06550504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065375085 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06343522 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063108044 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065536071 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063117324 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063276842 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066386629 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063551887 seconds)
  done (took 3.164653027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075585042 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073129683 seconds)
  done (took 1.379556987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063357508 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080439352 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062936438 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069579199 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070145466 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066753734 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073371406 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070001877 seconds)
  done (took 1.783722427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080702145 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077650941 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067182078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07988308 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07651793 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082452272 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131380958 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067023549 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072949101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063813212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079797233 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065059712 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071893116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066393272 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071712227 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072250845 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063575031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072430317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068008026 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064641239 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067643397 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07432072 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068049298 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061637535 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067041937 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087351351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07663181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06549982 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068612971 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073237391 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071494933 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059743855 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065329236 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066261898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063603831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075777837 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080403937 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068804284 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074833641 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066841236 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07697603 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060878448 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070097707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072128481 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07581108 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066096029 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066559196 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061199765 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063663684 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068277624 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061200475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066149558 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060981427 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075512787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069520118 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076780434 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065001349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06757302 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069163191 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069186785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072573733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068086508 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068287486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065536119 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075312116 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070573092 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074766198 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061246214 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059990254 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063911281 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075487722 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087836303 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072056148 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066479712 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066700094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063578934 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068801606 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067737725 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071516842 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072145685 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065882831 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071545834 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073185378 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066571965 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068689052 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074360064 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064483924 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068747208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063802154 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082116304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065216187 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064349876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064209835 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076328354 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069664124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066178758 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064444288 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073064426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060393567 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06616908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066007952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065511815 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075032084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070025376 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070191464 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07324055 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072620264 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065370566 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067665408 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061635719 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066057439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064079345 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071401432 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059276641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067806698 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066345868 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06614395 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197724079 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065305557 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06647013 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074219854 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072477771 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065723006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063069334 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069660651 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06692896 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069444751 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074240607 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064812142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061302284 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06208746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070273694 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066249962 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070657078 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071127206 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069054019 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060717494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064832467 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07208885 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074654811 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066857577 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067618972 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072749223 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06732735 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066183859 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072889309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069132317 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065324081 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072323859 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067616718 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062056553 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069894589 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069546425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064888361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070758744 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070339142 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069159526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06695841 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064951788 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073656691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068064351 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06537633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066633787 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064974951 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076384695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068248748 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061502846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06355299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075731473 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06431791 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066608203 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065500269 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068441643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067283025 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064616499 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06605361 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068101495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077463335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070437999 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06769208 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072023993 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078009307 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066093568 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068477872 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066328986 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067948672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067127568 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074725359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071396706 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070783654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068673355 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06303544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071606797 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073281815 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065356324 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063946098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065004974 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070434832 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071754022 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070433121 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067048284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064236788 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066869872 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06922273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06878991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066130249 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065349025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072937379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064520987 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073253078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067223111 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075647957 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069147583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061344194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069144184 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064157038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071750024 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061571809 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063790455 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065213402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066453293 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064317345 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067821218 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059418252 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07175518 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07252976 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065730448 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064613126 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065368052 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071769662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066903553 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068794436 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068295531 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070929313 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075082694 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064313645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068105372 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075018503 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192724909 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061112639 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072646878 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065078838 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065821571 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06591894 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0645586 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070351873 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075395659 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072823599 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060443015 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068753352 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065743088 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066031588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062105107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071451179 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069531881 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067614188 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073445921 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067640406 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067564294 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070590549 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066510902 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067952063 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068328769 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069888081 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067827759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068116795 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066131716 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070342938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066138047 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064263914 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068510976 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066498536 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066865323 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072424382 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066497265 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067455474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068829055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06710212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066713654 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067212996 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065543736 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070097025 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067559502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067059505 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068778896 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061905792 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07418022 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066385669 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074332977 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066918585 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063180305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074623808 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068840607 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072694534 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066713841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067890829 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067632225 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066685529 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068914774 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073256655 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064226055 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076979617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074606089 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066774813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069121072 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067333776 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06826126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065698755 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06718817 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066616948 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066472884 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066168754 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070500741 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068898907 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066054183 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067612549 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066967102 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066559002 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067172545 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061015637 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06550636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065718084 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06652223 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075669554 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066655764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065792475 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065433951 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067077393 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065314576 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063125069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074474363 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075663523 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066804614 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073082298 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065119111 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067433679 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076306591 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060849679 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064077887 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064112797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063961515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072836281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066368067 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074709331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06566153 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065174453 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062620796 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065957261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063649373 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059578838 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062813332 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068723843 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064168399 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064241218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06544895 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067808749 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066275726 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074018146 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064348839 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065894935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06573927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062137544 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.194187485 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066204579 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069481181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068253407 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064445172 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063935078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06595254 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067387507 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067921479 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066005113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068342612 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075988382 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067302887 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06930724 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069830454 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061280254 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07005897 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066808289 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065876464 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066480015 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070531966 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069768348 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068099407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075128304 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066492472 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068041925 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067205226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065299115 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067336973 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066493513 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0666571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066101863 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068584454 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074634956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063904443 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070003379 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06647567 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066483968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073374825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067876751 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06952695 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073635036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066655635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068573399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074697335 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070660317 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070098583 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067733107 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068640184 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072126837 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066756398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073042864 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066802733 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067606117 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067940346 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064670574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065861934 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066451813 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066619189 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072405072 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067166158 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066193776 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065862843 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064430911 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067632986 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07006304 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07422457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068699639 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069478569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061667637 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063636249 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067514084 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064187159 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068085381 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068673186 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071795114 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068438382 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066632322 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065092289 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07469209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072236952 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069974034 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063989125 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069601956 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067064262 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068504189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067878683 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066425241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067987176 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069994789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067733912 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065733236 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073127223 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069918007 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067453673 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068206521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068056126 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066503366 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061897511 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067131955 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068174471 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071134159 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06819471 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066439505 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076446363 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063738398 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066341948 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068777691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065164032 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070023323 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060850512 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067197727 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066572576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065940258 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06048624 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064877914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063238594 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06712033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064501138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060138872 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075472081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073854064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067706175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064313534 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063902407 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.189985819 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062627598 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066104091 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067360574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068389791 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076922341 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065849928 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065459097 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061586877 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067358088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069060363 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0700636 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064469271 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061979043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065489855 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069291127 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072806098 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064994036 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066466471 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070097385 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069524877 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064747352 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069909434 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063285665 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070343005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079411883 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068270712 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067716668 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073730193 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074642625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067804118 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061952781 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067230131 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069881754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067649999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06733374 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068281125 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081316757 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070047118 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066173258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065581143 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069434999 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066654469 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074229499 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067498044 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067414876 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070674416 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069053721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075391045 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068736505 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074435188 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070434388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069702736 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065265409 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067751847 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064706934 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06535161 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067583357 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068098818 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07216745 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074978973 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065475553 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077048447 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076020718 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068504265 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063570315 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065913208 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066084005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061683921 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067523776 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064325951 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064836872 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06491771 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065152762 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066872529 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071511742 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067205485 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067207615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065900181 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060879296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067825187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068281049 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067062076 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06311954 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065976253 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06693931 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069784536 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069753246 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064352759 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067616056 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067998021 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067021246 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061643767 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073266061 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065705388 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068262525 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06600221 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066924238 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067211217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069912942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071805119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067344051 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068559824 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069886818 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068380965 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06345111 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063238776 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070909444 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063579448 seconds)
  done (took 42.454724171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100421935 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063139983 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062397793 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061721923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074252444 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062676443 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061592217 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062831931 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063243814 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065502668 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061982134 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061998923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070967543 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077604718 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074090763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066920719 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061914603 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063389762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061817841 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063032694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070927937 seconds)
  done (took 2.742314573 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073734691 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070147601 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072524307 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075782933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067424142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070726342 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072698031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07145827 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076511523 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067145051 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076048301 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070339432 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066933245 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067488418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067016784 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070745719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076050331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06732918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070843037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072972518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071170529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072734215 seconds)
  done (took 2.873448918 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066507794 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066024707 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068163016 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061399419 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06627 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069836668 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069440644 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063686722 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06887958 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064678854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064918825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064674977 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067695483 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061035052 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065596956 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06353851 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108797753 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068527414 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065627486 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066483345 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061111147 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06754908 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061470607 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061744054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064890466 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069343132 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066582629 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063923782 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065609665 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064609661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065429227 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063906677 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067929188 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066124766 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064628073 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06459866 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06578297 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065798569 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061219867 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063823756 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066072705 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061814949 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066718738 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066753637 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063820496 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06374337 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067025946 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065534099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060637011 seconds)
  done (took 4.547919953 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079524951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107533181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067473125 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08808597 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080190652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075254941 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069173172 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089229335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063454957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064367085 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081739108 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079731367 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065846232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070158826 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072471265 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065606226 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066665523 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064414647 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069683335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065129248 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069740285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071746239 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080321216 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078967198 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069444435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064393814 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064808185 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069882224 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07868753 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070243796 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070012542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071641962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080365992 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071192597 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0647033 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067302546 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081309478 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065559841 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067548041 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063000754 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067582508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069847427 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071911324 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081414305 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065914568 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07047054 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065155351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062618611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078194202 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067827975 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073323491 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080060481 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068955563 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066022695 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06976965 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080631221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065593511 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063540048 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068676238 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077943283 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063281296 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069199558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079282492 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067265866 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072751007 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080526612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071442992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069719515 seconds)
  done (took 6.344725877 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075581191 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073169218 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080865173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080661669 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072638623 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072411294 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072296385 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07220166 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071972022 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077022072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072593937 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093084979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067453903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075393365 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072499938 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072484093 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072423248 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072559803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072176072 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072211931 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072529575 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080477013 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072385231 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080087273 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097484639 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067813071 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071734617 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072014218 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080293913 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072230749 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079447549 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072468085 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072645481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080884337 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079307113 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07176574 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065091316 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071706001 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07210277 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072180975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06750459 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080099248 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071980134 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067331824 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072134029 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071560816 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079871383 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078970896 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074590243 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076916516 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072120541 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080008347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072039033 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072023392 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080209871 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104438175 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079882094 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080466174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072124161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080111337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080109473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08643718 seconds)
  done (took 6.030218616 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083462711 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075068842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076756606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06115659 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063651817 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070033519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064019395 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06396447 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074634963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074902346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077194123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071003469 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072962079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07655858 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069476896 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072648968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069704179 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069716819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074612809 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070076347 seconds)
  done (took 2.766321249 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073727924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083397279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066771527 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071949382 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068623622 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071481777 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067886288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068800054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066696764 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068758768 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076481301 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07635409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06649123 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071504048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075763844 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071852163 seconds)
  done (took 2.472791448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074715735 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07244034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07972289 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066784486 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064038975 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062692379 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065467422 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061412573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062873864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077535492 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06581967 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06830213 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06576472 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064125876 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062774211 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068895303 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062313674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063164755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066060937 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077974307 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076320962 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064466785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066219777 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065988025 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066097089 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071086383 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06544858 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063338779 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063000079 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066377374 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066293959 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06918489 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063071377 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063851864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064415739 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063675187 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06561239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066350096 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068611552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066005986 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064086818 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065742858 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06599371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066910324 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062164444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066231537 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062386906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068240622 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064130461 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066178569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065943137 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06856366 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066511616 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072428891 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069084062 seconds)
  done (took 5.001343337 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07851152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069855811 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061813699 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064091636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069620337 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067702071 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069979912 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067602356 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068024105 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064186131 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06769118 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068649517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067648736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069549238 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067871826 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069733061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061894235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06796878 seconds)
  done (took 2.561513029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071802819 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066360088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072412767 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065949394 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066227256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067833254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062061299 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064754568 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065068522 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065745737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066251552 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068142349 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064590728 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06817802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066196661 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065580815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068086481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064629615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06586873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062137058 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068296744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064369707 seconds)
  done (took 2.79264675 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091640858 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081402759 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137667933 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078728192 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082875621 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071549342 seconds)
  done (took 1.877466145 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09029151 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079570482 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066957759 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087578975 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073996962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067514552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067381009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067873275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076608279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076289402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067786244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076682415 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076428892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076115151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073685124 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073727222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067825771 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067801078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066608832 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085006688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068022184 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076192235 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067697535 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067653294 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067606591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075764571 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076232853 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076518338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06750691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076267689 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073423512 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067949113 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076700892 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076323965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069628564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076350824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067818959 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084918729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073663428 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075908743 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068855381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073608752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076526852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072704417 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076305842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067925611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072955631 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067858687 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067876978 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086514941 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073817139 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075919333 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073694391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076726131 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076351867 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086328106 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076132354 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075617982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073381548 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078850645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075453204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072989181 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075422251 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076296627 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073446282 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075637626 seconds)
  done (took 6.234367779 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082700943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086064365 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067495226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076825466 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075845939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067736351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068527408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068406522 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067616786 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067541597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10781589 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068178472 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076128959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076070626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068843559 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068004379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068331905 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075984745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067452503 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086645395 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067830015 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07593633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075859823 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07588013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076753318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073682784 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068526416 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068133946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068146574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068216404 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072811738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068682205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07611708 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067628181 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076137849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068394633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06796302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073025096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068070306 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073625506 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075937916 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084344761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067824451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06786646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076628562 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0677096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067912674 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067157908 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067908461 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067362829 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076461632 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076047895 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076272305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075239212 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067688901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067751704 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067484476 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067770708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067659517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073357216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075569719 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06738312 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086034397 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067713919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067385978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07583089 seconds)
  done (took 6.14409815 seconds)
done (took 128.380907542 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185538905 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166453849 seconds)
  done (took 1.684492096 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069776008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097016095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076374502 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129300123 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066781549 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100514969 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099418866 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077886286 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066429512 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0665094 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066023592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068641355 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131656757 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06642951 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066122452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069040197 seconds)
  done (took 2.662455178 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09743946 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157152418 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099140818 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064423871 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097228958 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073188358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064806855 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075332687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071300632 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065142144 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073392392 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071045563 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065216227 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070625516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07097692 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072547316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064898633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073571504 seconds)
  done (took 2.773922037 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101687724 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091844131 seconds)
  done (took 1.541349245 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155243415 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105748941 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150533052 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352032449 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168765402 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230069754 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127010441 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127625588 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11776749 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123808579 seconds)
  done (took 3.00333755 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097307806 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151958005 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255619057 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115125204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072532975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095415326 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116441742 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077992685 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080845588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081044658 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080524999 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076166243 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098475918 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073639491 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073421927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075939317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102073294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07237351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07403883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076868984 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099243385 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065696848 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073338673 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07228778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077495197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077553671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065555229 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065398855 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076556476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074148978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076832828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09392861 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077299906 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107560319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070427489 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108580607 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076421159 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074165522 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074152022 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07368321 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078713593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078802348 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07186113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075823532 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065384195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076465868 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065347916 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065432999 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078183108 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067035972 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078442849 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076966752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107783018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066722652 seconds)
  done (took 5.95518647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101566074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103427955 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071323235 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110675913 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100436867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072128697 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101279785 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093155721 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103667611 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07008933 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068129056 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070190946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083019087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083628797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113406687 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104589521 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073612516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071475269 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104522007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102743326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068637772 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09460461 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090004383 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101797745 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067296545 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070525999 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068065807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070057479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07703416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078932235 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069642722 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081098401 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084852728 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078774653 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067122888 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068097518 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068186805 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080179779 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079950685 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078985638 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07803502 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067504735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069716525 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069754699 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069980505 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067661298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079394754 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080739664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078855091 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069395465 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070020106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068125633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069232025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08079135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078015349 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081275496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080535605 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068423097 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068719289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072816742 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081335699 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079463465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07979411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069789461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079429556 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068485124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080264016 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084471929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068541912 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069828585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068530036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069410804 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06927273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078186642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078534547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069465502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069002696 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068045022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080666954 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079286444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068090595 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076958161 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06702121 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068090834 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069845269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070005358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078058627 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080437124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069660236 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06808627 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068850198 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068510683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066007418 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076035743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078998081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077951147 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078017669 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068662202 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078332418 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078038183 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068957315 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078500385 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067515787 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06912244 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196722074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079360882 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078129759 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080775802 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069972889 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069011108 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078340944 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081907143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069518642 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079190017 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081931946 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079641217 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06865336 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082480323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06858571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080958552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069311463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080220962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069356509 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080656772 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068968541 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068360147 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068302783 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080764661 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070586314 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069174507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069949749 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069812151 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079812402 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082962284 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070644345 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082268866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078778606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070767409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078760931 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068843598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07985616 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069380481 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069488196 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067348988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083052951 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068319235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068057244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069257659 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080712244 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068283707 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080337711 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078489889 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067575833 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081442243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080620008 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07818193 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080597352 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070463118 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068362552 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067879815 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069551711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078479397 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080013002 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071036859 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068650482 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079436211 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079989782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067288185 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079270233 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079589552 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078889911 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068543095 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069787932 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080996514 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081448275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078817123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078909495 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079111836 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068711297 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078234853 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078695224 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068351537 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085710433 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068134362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083586078 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079639331 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077517244 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079443846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081425707 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081085232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080828242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083899103 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068454991 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068248406 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080416069 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068152326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068986242 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077970512 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068895807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068232356 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08232575 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067619577 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078101406 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066536242 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077915279 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065952497 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068846729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082734065 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06734075 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198400969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081010723 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070003814 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079079049 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081396559 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079078946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068388186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071714332 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080855669 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080336383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069372255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068764323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070717837 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078862597 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07912342 seconds)
  done (took 18.672480309 seconds)
done (took 37.647326705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210543431 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150288355 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199304524 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118890326 seconds)
  done (took 2.128187054 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12276563 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101183974 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095069376 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065581871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102101259 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064876737 seconds)
  done (took 1.9404945 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313121304 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211576224 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18212913 seconds)
  done (took 2.091988217 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199564946 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188295818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392557397 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253430928 seconds)
  done (took 2.527602471 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14285047 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089571751 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066749208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083048403 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135920576 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162049862 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102051699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126557855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078017382 seconds)
  done (took 2.425177028 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147629074 seconds)
done (took 12.645105415 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.218869979 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132611837 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099699246 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190992061 seconds)
    (5/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193659989 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.194641715 seconds)
    (7/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10887163 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081736094 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181870116 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076218937 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077129411 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072694304 seconds)
    (13/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218457741 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097081764 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.227181122 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100499897 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076074005 seconds)
    (18/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071872156 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200118753 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106072229 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106404682 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.171209527 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108897712 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189122365 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.181053879 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206243405 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075225646 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198237795 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071332207 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.134089893 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125128034 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086510145 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206448574 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072137519 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095585611 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149398752 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146283802 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052412418 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098257862 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216658193 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080720771 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143607187 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110467179 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109361559 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072186466 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07321835 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085765035 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185040057 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050728935 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.129717068 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07204352 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087806738 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091024147 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050979818 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051077534 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085839367 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064993873 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069225345 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072425448 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074158036 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173771878 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07649337 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127190632 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06672583 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118031097 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072071733 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074877287 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051269917 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.194075111 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050562253 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051827187 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070973848 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070625725 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072242331 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076085673 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08143784 seconds)
    (77/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088441455 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098582718 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073326496 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159516687 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064458007 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148499552 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108354353 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.204725831 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095655368 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152867653 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112319854 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.308005857 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090476759 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07576952 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05227299 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093199392 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090310302 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079342016 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072935302 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092613681 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064243443 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.18501867 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080771764 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103479405 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139532217 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071532084 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147979992 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115922334 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081234395 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102204748 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 0.125169447 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065216959 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.174305118 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068746758 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065639487 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076233071 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072383207 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075687885 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108459983 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176366806 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132854097 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086525583 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135603672 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052228827 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075964689 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086097082 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077227104 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089224215 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135296246 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071742099 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15751623 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138600325 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064554367 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074805074 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065182012 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07039878 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.132797945 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.139572182 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073439718 seconds)
    (136/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068021512 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150467685 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06730483 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072029617 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069945995 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071267103 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050941598 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094588722 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163174998 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074718 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06480436 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071382594 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119592303 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065537318 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136582452 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065190202 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149147749 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051095838 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064526431 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090645392 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072029758 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050904801 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065856999 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096055789 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070385901 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067688943 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051705276 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071574048 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072423754 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051531993 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072418377 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068751465 seconds)
    (168/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069395676 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16331432 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073578558 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172335248 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141045649 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073220779 seconds)
    (174/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055645994 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066682202 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064941637 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050770465 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061737691 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050563134 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193256931 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089801822 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050781661 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087392219 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050676835 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084823053 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052071658 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 0.126515988 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061498042 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08883057 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085239384 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.245479327 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05227983 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110866493 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067296958 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066926293 seconds)
    (196/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070082521 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051807163 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120775781 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066194642 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072500303 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108829985 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051807415 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051276188 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065684784 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066670679 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065724877 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053825203 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073918109 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080890924 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065112719 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067154664 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060460999 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168322083 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07651864 seconds)
    (215/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117742599 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087524649 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051794509 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051845699 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070664538 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064264429 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07138547 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073395122 seconds)
    (223/309) benchmarking ("sort", Int8, false)...
    done (took 0.139150768 seconds)
    (224/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086108604 seconds)
    (225/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061257475 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073214673 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072691248 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051721397 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.174301353 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067112434 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065242025 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07171583 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074237682 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053021245 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072152034 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150451808 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065626306 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068265971 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065279695 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070784331 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066287675 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080104033 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066199167 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064777446 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15094649 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0626463 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052117354 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051567782 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051961192 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065089888 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086353277 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131680419 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067162879 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060585688 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052127118 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053376535 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052149447 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097648539 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065442472 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090663476 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129656832 seconds)
    (262/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066174009 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052514854 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065684039 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051093446 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051194022 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064710328 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065956173 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051030017 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079083826 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07162287 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071916149 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073219626 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07182135 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051794296 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051248509 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066908698 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173611477 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068354487 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171958776 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061206602 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072911841 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052335377 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05252652 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064056731 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064151289 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089794687 seconds)
    (288/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072596797 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072368528 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072180941 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069162243 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135285088 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052001867 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071141166 seconds)
    (295/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068093343 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069604125 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064955704 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05112913 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052060563 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054420413 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052395299 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053766005 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070874183 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087707912 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051430842 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137271642 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06611817 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069513336 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052210535 seconds)
  done (took 30.358653723 seconds)
done (took 31.75646225 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083955129 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092445207 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07512546 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093636642 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081852879 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076902098 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072811525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078360609 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08003952 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082035245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079053923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055075952 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07427111 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074366171 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074816992 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091362167 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078238496 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073003808 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073240817 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065579151 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073449187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065885841 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067227637 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054620836 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078064364 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072395736 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073321495 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07436563 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066553734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066612589 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070150684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074298868 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065845211 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078604233 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073484479 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073237153 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075063735 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076903919 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068074081 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06617655 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074758262 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066276363 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073285648 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073995106 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072112114 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071611714 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073500139 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078234196 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091807828 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068384786 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074668801 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076251713 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076573996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072696912 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069721561 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073803602 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071105494 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091515292 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073553779 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068480324 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074199434 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074450658 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071251868 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07319455 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073099401 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075600574 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075438652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07115532 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074538795 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071318128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065625441 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072913487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069273877 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06562929 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075622637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076892405 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064926096 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071202935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072579125 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071739288 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06559749 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067823604 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067088614 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071713039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067423952 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054575431 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06901564 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071804299 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064638779 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073843061 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07159454 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072344952 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067371823 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075278083 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064884357 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070434277 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065911705 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065484894 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067028512 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06939791 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065476756 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067696646 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074283701 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067083178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071312671 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079082948 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065323711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071892857 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064645763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064997369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079580013 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074426883 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065541855 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067667514 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064325938 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072205262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064582752 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065144061 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065225658 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065068072 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071087244 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064515858 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066666186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071390192 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076784774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064308927 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067807805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066241773 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064330727 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069384306 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06464679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064331807 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200872896 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062531675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069291946 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066947393 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073700861 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068624802 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073601814 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067780651 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073830279 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07056154 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072119139 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071378671 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06475724 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059060309 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068659317 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068610998 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068229464 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066320037 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068253139 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066274152 seconds)
done (took 12.481262549 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066834241 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145160376 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100293197 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095797452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086384657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067605157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076655023 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102897247 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068150429 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103895416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088607382 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085441793 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112763916 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065210276 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066269705 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070339114 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067400914 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082048888 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101822732 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086818012 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116863786 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065818464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095487381 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090809982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088205357 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102354306 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06716102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069952056 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069866307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092635601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086952136 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070275576 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067111712 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101455672 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093032672 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08391571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066593064 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082932747 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066983627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066344627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068006881 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099130464 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080163642 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080959758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070136272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069854284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067422473 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084014275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089627694 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079087396 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087162555 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104314825 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068986295 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065934667 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065381019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086261451 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065697403 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069116191 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066468992 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068361513 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066627279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06966397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081539155 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082414988 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069788562 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080745005 seconds)
  done (took 6.835132648 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083672336 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089846567 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083729537 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083873417 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066121449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066789277 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067142679 seconds)
  done (took 2.033121554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066958817 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089232527 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089294273 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08974273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083997359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088314994 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076267208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067042653 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081183662 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067709135 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087933576 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1027492 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06759694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07311601 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091194416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06686222 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090328914 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066964526 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069829629 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08987104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06891727 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082335173 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070342042 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067107436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08096369 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067058585 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113636152 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071242339 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068264537 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069894948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064755505 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107438317 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080455756 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07579327 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066526237 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081067603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081128539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064910969 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083129092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071723687 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080583368 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067577991 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067922283 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065018837 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071031355 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077013472 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067938435 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067614852 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069349898 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085899158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066905753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080022777 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069806329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068854855 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067680391 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070153823 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075854287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067423497 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085639769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06770241 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082703102 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082500388 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080422286 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082798952 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068977588 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079948473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080236482 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069049844 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06773489 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069934433 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082427365 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065249274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067849246 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076940517 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068271888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089610669 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089227907 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067997167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075999258 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066765547 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066556721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066297167 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088925413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069006318 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066227767 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070707283 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069640433 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064522659 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06560045 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06998373 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064355616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067852344 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069097143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06938734 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069092443 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083054195 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068830064 seconds)
  done (took 8.767915881 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068975146 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068329977 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069866708 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067392918 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067790708 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068489755 seconds)
  done (took 1.929377298 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093722783 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069717347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081169879 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072452674 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105291392 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087035254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087055905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07917254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084295628 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079427422 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08693655 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088825208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093175556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073079641 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086641438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072276499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087193934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076084083 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078454906 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073615929 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087274241 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072900877 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073191499 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082022284 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075614617 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072018654 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067104845 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078866209 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078821743 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079351361 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072760957 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075885647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071359046 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078717137 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086983579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070785891 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072142887 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077751833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073193107 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075654456 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08813259 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073318091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074640585 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077798678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07868861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070889093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077163885 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076172936 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086367532 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07742797 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077295273 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071920381 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075430675 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077405575 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071026862 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078914399 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077466782 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086770344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072965105 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070629476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069830376 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075669544 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078243902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075623119 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079263552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076865388 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070721099 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072628551 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073412989 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07167554 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076929906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069057371 seconds)
  done (took 7.103714338 seconds)
done (took 28.150536025 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541912938 seconds)
  done (took 2.029563973 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60482795 seconds)
  done (took 2.115306556 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.564153897 seconds)
  done (took 8.068445684 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393163971 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477671414 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692797988 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130978351 seconds)
  done (took 3.24262765 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675255325 seconds)
  done (took 2.193194006 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208543425 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195838322 seconds)
  done (took 1.93339405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376682856 seconds)
  done (took 1.882295731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106306671 seconds)
  done (took 2.616279003 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262712535 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163713881 seconds)
  done (took 1.937790415 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457027355 seconds)
  done (took 1.966507027 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.832752484 seconds)
  done (took 6.343355438 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205935398 seconds)
  done (took 1.764314001 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241486748 seconds)
  done (took 1.755907277 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690141699 seconds)
  done (took 3.202570933 seconds)
done (took 42.5656895 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080451274 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081642057 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081234958 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07844399 seconds)
  done (took 1.822083103 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077262723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072883255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077022734 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072935598 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076898403 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072392131 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074408233 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077021174 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072461312 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073146119 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072329011 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072679175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075022258 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074396194 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070811618 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074957071 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076055949 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072353503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076038314 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072394376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071106237 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074809707 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074767943 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072028476 seconds)
  done (took 3.292264479 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077660645 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072981046 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075120937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072104442 seconds)
  done (took 1.81775174 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077535748 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091801695 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089991903 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077292943 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09275165 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086191287 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068954631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069324918 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07320962 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076779163 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068353564 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096194014 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087644362 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077115974 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079138206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065994954 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068641974 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087257718 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077348814 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077342639 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070016308 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076912631 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068309693 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088317575 seconds)
  done (took 3.408855286 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077531334 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103559757 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078326704 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088137855 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090219244 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065473835 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074434689 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089570896 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123303458 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065392341 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070474962 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065282772 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072490596 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065089565 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076385348 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10489714 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108496733 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06843175 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095712054 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065635843 seconds)
  done (took 3.174889853 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072771654 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069608776 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065758393 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069573474 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076873159 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073098118 seconds)
  done (took 1.956483322 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068524936 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067617898 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067952363 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066862322 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071590273 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067021712 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066430874 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068382747 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067764014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066964963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066785342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065812539 seconds)
  done (took 2.335908916 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172442429 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069945431 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07101636 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066456899 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07063523 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066556407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07984202 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06785077 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090724426 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066648847 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066615813 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068459438 seconds)
  done (took 2.482936416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208446284 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076634137 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238582675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137844417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112538502 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116665196 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104291851 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113737148 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144360143 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102889701 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169269543 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167169885 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108375391 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138045696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090057588 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097759314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156731639 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163069911 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104217902 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166450152 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144963432 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124946131 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148039913 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101700478 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10694358 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122610316 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071085118 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080293172 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172399699 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132718537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147878559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111946013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094543325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177827108 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172941559 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143501639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135163512 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084108701 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103262347 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133195264 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199317252 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089535926 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166283722 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245730821 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081884143 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13445525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121397896 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12105023 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107866045 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090133588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147260811 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185193421 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139132728 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088134438 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112850204 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115899945 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117600156 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10498308 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18428759 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162830161 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127674948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071996787 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099528642 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155560027 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131531783 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109231227 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127502289 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093835045 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134470818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155102424 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119541786 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144940039 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129580679 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089452279 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120191705 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14069902 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130133693 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172176031 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12649335 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073346867 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126837111 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104525406 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082056454 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140700778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075567032 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175852358 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098787382 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106607009 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113529735 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1096497 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109082147 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162578303 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142764369 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244200413 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066342266 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104716233 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121989428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148910539 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087642667 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109389435 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117665046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078288967 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139824035 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075240155 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124057154 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075191511 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125853904 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133378372 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076700073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122556506 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101854777 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100122342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13455096 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160980672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090045251 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082838901 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168434043 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123116388 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104840303 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144439326 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158173675 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099867559 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103883958 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150759816 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18139295 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090424975 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164771878 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108593841 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084249783 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087760272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124952445 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11310952 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123321504 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082894801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119855916 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171006517 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075213167 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095849362 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13402822 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079303246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081173564 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103860692 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100723715 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095009307 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100231968 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104796018 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137801106 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123935048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103743411 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268388802 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099955243 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172228021 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089534667 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101201669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104862992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070027416 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137031308 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158468688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079334178 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165511324 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124437833 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105365927 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119308873 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082931136 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141211052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078984933 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070197823 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145098649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110928304 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111079127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152350212 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105537957 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12892842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119776667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136597449 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133621136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129996874 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105332384 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08810375 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111957673 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126491254 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073099513 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092200783 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080733377 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104361235 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0965145 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083940347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144166724 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126005785 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100948662 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112475902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097205215 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148523361 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076945928 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130212134 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119540601 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094401927 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15236757 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152690097 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132305554 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099257871 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145164416 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070214495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072965496 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231434923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12535541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083829557 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084230283 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118419936 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148093379 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130504482 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139558045 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112705883 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122098801 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156884735 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06977438 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115754865 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148827221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121284839 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104962451 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090908153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099914946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143554282 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10839044 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183717342 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114980552 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126888613 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154261908 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1003014 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080417595 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103907755 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136386863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105204995 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145823907 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100443935 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088836408 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110742761 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074444019 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101277012 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128885911 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121010072 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141784501 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115447194 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134358235 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077754205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118451025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121360865 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123765342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064120684 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123284513 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162122106 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094339449 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119092499 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15347869 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079369237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124476801 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321658254 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147561685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085436254 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111119609 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120240375 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129026928 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121247754 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141412795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110896627 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136166719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110095645 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085790104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088387773 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098334222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106320359 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095368391 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109581728 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114596716 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095992189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133576321 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104391752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110936433 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118374352 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096538287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089459682 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09760951 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175354708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120791014 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174237668 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.0992133 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146843878 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166098539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07502916 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079373621 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079266695 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140613393 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084340264 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132377623 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098155195 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106471261 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125145504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143481587 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095436801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069067681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109399747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13578439 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113464947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098466974 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104663592 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163495353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100835613 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079477665 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114081199 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10509815 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102267239 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315833963 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062531987 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099444583 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077062822 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081618957 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128821639 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156421489 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08116172 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103536016 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119818067 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112040724 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12853472 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102398149 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09972901 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115040081 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150985696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130744048 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090273919 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113031494 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130530212 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158411951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106401162 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097037822 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173783776 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153334931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164455056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089054094 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114915743 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115129531 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108913054 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140115162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083680555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165386242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082178076 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137878086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105192641 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091405811 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131380215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116302403 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089022282 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149784571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118574899 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08329021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078658497 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118815676 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121889823 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107381795 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075173306 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139634789 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073382847 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133016144 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169285202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081146741 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249181442 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098522998 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080593525 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110392248 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104085643 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090850942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098905792 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174725957 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089128436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15142415 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142876219 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114117702 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138314464 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101075631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636892877 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077920234 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152492763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118508836 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174346204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098095688 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118395762 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109892729 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124628994 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145862582 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105416577 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176701978 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133745834 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117171135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079886493 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103168485 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10299999 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08905331 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10558186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114624105 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117085458 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094259131 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116965059 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124897665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082036689 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09626513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157296362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118070126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145568111 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141133489 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085373446 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118258646 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139159006 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079719948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122843557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155653533 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106541729 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09725874 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.224144658 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104294931 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172727485 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074134874 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164553247 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119995731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110672416 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114617548 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116227412 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132358019 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10886475 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122418876 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094643812 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111270908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113298544 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082035519 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078055856 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104426519 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113669744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098261037 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100022913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098430163 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153205412 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07163744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095730801 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104228332 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146546433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176901083 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087945155 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082544577 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120640534 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113138762 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114299304 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121480077 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080020987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082734634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.0822263 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077107168 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108750442 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112812321 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105057957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112312367 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166089918 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083064834 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221365589 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095785621 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105659726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069789658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079053403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096136712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097965056 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108714594 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100648077 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169115248 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093915306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089971244 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092476075 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073135373 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081758325 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271678431 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112666853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119853073 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098548988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062661158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109610774 seconds)
  done (took 59.25743715 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108837588 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083109126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096818006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149635373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122828667 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213461923 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160727559 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20013546 seconds)
  done (took 2.765087666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069053299 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094167571 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100094802 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082168724 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066891608 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070551201 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226622328 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081893292 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067269219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088739259 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081420139 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07056462 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421427224 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066207303 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068774711 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064279743 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067549387 seconds)
  done (took 3.408480862 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.3676863 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601519691 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37385851 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073537587 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.896081067 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090559435 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.086680422 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127668858 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074326234 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527311172 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706356437 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125761574 seconds)
  done (took 18.683688998 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076434687 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070585667 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084742989 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084382145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073077622 seconds)
  done (took 2.017179511 seconds)
done (took 107.993395196 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081065192 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393960534 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053896094 seconds)
  done (took 2.103134163 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08344697 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086471349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084796635 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083970457 seconds)
  done (took 1.974984174 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075554837 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076851662 seconds)
  done (took 1.781908375 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225626821 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158901725 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086850933 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083454967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078864195 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078816935 seconds)
  done (took 1.875936203 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073222833 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075822104 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072994737 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07657623 seconds)
  done (took 1.925601025 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075954627 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053034878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054940017 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055841687 seconds)
  done (took 1.870443251 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086686954 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079785607 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079880653 seconds)
  done (took 1.876083879 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102455335 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085343004 seconds)
  done (took 1.818493525 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082957243 seconds)
  done (took 1.713885485 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100690586 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114354463 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130943975 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110841952 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138785778 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109323803 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08595412 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087596159 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077473138 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088460949 seconds)
  done (took 2.673413657 seconds)
done (took 21.790779285 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078777729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362015105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360552038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089620209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.689093098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35734716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030685299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092636693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114467655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067922867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084275377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668695641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987037968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319728629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972185811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32524467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650316131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068532811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068194403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068094672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.0175931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067758892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068700519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068623242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649204838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371504213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068187221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319612577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068153453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070423058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354716934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067867559 seconds)
  done (took 16.262821642 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071851942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118492602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074283526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084212103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070673305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070941091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071671345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069488099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120176776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068196829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085125564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068503835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072021304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068835411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087942995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068745514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069481859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069079299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068560268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068728132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087203196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067939924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068168071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068715972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068451718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080080861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068890181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068414336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06877528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070485153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07155395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069418074 seconds)
  done (took 4.049735092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116268154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125715234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074109873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103426143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113103438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070340247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14416174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09339802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128340793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068220858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085116597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068423369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101653981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069613122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088119762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068814903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069672407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069623503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069232631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069393693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088063197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068723168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069321943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069179793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069427627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081776926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068971081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069127061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068785739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070872033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072070656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069620309 seconds)
  done (took 4.308867671 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073157199 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07565222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08339252 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084553965 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069636642 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072206902 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073701652 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069936989 seconds)
  done (took 2.24959625 seconds)
done (took 28.506878892 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080153173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06952734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073576973 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081580271 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073076004 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079088278 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067525114 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074672554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072389966 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07336176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075140581 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067977751 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071178359 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067540168 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074065086 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068293418 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079666293 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072151973 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079366423 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080009611 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0701444 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073325252 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074830303 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079633731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079595032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079551874 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078002484 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073258241 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069658576 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071044301 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077059975 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08388963 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06896345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079704495 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068241404 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068056445 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072007352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067857816 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079525245 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077198376 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070086687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076457856 seconds)
  done (took 4.743510857 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087592806 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090819186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084403824 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061701437 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067032762 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065048433 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088964165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059944873 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060179353 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08787695 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056143932 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060124866 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06281399 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054521722 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059547594 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057096542 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06151259 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056260771 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059518238 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059832629 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088784887 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054987839 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077145203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062822097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058816425 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062192405 seconds)
  done (took 3.401356833 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074542942 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08499008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088499498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126528233 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103061333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076952929 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079980637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092898245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085550823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06722146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071140625 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09356018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088016675 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07413817 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067892115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085219759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082264836 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069432032 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074125807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093264825 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085926662 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084927196 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093012474 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081147105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06719244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069994025 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071436568 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081328292 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072757437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076815058 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071696879 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071385337 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06957683 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079162562 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071585662 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069211657 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090548664 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077383979 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077935475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068447084 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071165118 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068766499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09160237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126083001 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06728911 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074295115 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075519056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077484586 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06772728 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085962632 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078963174 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067356945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070814965 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066844056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06792256 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080970549 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069742279 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070278852 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077084305 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070601268 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08947894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071962326 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083281332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067665787 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075627759 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067040801 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068562262 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066780015 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092678072 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069227481 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108688046 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069124926 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068739757 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076521568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075403892 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073691323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068143008 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082554413 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077867071 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071504033 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076345782 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071241825 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071267089 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088287295 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070341052 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069332626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069057406 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074205179 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070600606 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069022569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080748613 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067672059 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070762485 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084383333 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067526183 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069245787 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073778423 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072272474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067727812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078772978 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072577346 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068535999 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076815552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067756258 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070506663 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079286993 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073987558 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066826213 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072666036 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073793693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068742726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069345533 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070411939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069367073 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075931962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.085312005 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072232598 seconds)
  done (took 10.616817261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16461672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155125068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070714266 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145146371 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076933129 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07993052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148108187 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094847499 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068212394 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068769341 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069402274 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110760242 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106976498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11625821 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078924073 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068701052 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083850221 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114513852 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150167204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143323958 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083972698 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077058086 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070519089 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06941477 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071353532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078616842 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076972597 seconds)
  done (took 4.418556055 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082315441 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097075841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074450795 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089980575 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091807324 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068789033 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070738142 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069807489 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080686486 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079392298 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068003825 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073694796 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074825859 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071607672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069244543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075040434 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075154345 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069516646 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071559902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073283738 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077831518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080939183 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072262726 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067355053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073001903 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067283035 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064872485 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08516273 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068303985 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090519487 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066120056 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075355412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081693575 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068724485 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067983076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067965078 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067492544 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067635836 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0698451 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066501807 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066690692 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057738258 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067210481 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080161466 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074113517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056997314 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072625624 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07327002 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072901767 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065474209 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070729467 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070377199 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071084239 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075064954 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072630398 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072890058 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068599332 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074005155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075526838 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067803916 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064482326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066431245 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07195681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066636652 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075380717 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072138761 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06612949 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067414123 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069379042 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073981357 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06741882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071160969 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065386536 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069969659 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072236985 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069707416 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068634442 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066402798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067560518 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068199402 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055636309 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067528637 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054148706 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07092193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066112632 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066514192 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067754886 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072519523 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080741743 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068987458 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073540989 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068767175 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067128274 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070636583 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060814029 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070444599 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082892309 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083377012 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068013238 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065655272 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081945451 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072257766 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067418237 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056444172 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074945873 seconds)
  done (took 9.171510837 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09052429 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070881541 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08372115 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091087474 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086189108 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075464853 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077021937 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069976027 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08221991 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073868501 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076676133 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068675737 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077573927 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077566795 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070676902 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077115472 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072360335 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083221125 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082540453 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068625275 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075893944 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080498781 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090019079 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080197556 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078696247 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080802925 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089732535 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072157641 seconds)
  done (took 3.899835157 seconds)
done (took 37.892166977 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.734313792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.90699008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.729484268 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.068995588 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.870317294 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.735622448 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.876370021 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.722814247 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.957502863 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.768922527 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.001787925 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.773978726 seconds)
done (took 64.807837108 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.759072331 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.868010682 seconds)
    (2/2) benchmarking "String"...
    done (took 1.99463235 seconds)
  done (took 5.526856258 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.038688246 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.308313402 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.956416971 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.719444777 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715657768 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.944865517 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.52001727 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.25372977 seconds)
  done (took 30.083464268 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.896178371 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.934351417 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.430690444 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.486433917 seconds)
  done (took 15.452130392 seconds)
done (took 62.615623917 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.718088993 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.721293034 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.722577731 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.68914905 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.767566562 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.725898802 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.835506488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.88546794 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.705856604 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.691964623 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.708695197 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.135558624 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.714109423 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.853333244 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.706629518 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.708664234 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.774738467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.162970874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.861085342 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.715925998 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.714666266 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.716701818 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.706134934 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.703531157 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744557292 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.702202615 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.127471237 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.706860915 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.318507498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.70259478 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.728482469 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.991742301 seconds)
  done (took 202.31512315 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.699903955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.650415123 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.731680176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.706337113 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.120076203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.881846014 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.80764923 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.160791069 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.702043117 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.725655488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.919958133 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.698795898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.934014385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.640814006 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.726169748 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.793627015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.874340611 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.933189206 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.72966062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.875166807 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.708084295 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.715697799 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.661024819 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.904780091 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.70792056 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.704603576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.864268589 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.712093667 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.887413054 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.856513682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.70531736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.713632046 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.923108648 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.57036583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.710008476 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.700217845 seconds)
  done (took 166.997241767 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.864271922 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.6973164 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.696419455 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.700378439 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.70938701 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.694962099 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819505697 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818992642 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.15687976 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.193956768 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.695566817 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745717743 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531044513 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.69223004 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762070984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.705781476 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.694192881 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.709064247 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.723929831 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.692225627 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694738893 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815869325 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.706440185 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.788147355 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701928 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.693778915 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699885761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.065599463 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691694768 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.702082537 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.955187147 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.693163261 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.694673376 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588192512 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.321521509 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782106311 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.693861881 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.698351798 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.693829257 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.915802898 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.691888543 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.694804156 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.69705934 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870166014 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.69175015 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81994231 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691747349 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186833652 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.697368896 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.694278968 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.379573024 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.352843842 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.690287882 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.692551863 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.69776316 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.691827853 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.691536702 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.698775474 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.467743737 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.77012639 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.692226241 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.696506547 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.698106374 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.69275869 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844707364 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6953842 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.706177834 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.746909069 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.911381441 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811830337 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.69586682 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760975577 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786598893 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.692260849 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.692179969 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.693813607 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.694377081 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.774678207 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.693092263 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.819880586 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.700413667 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.698066866 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744251402 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.763482126 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.692960243 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576127141 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.694857666 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.695483539 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994598721 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.693861102 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760566745 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.692216253 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.693982481 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.694359391 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.695932428 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.827504921 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814106548 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464259729 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696135227 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.706716624 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.696329539 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.842170595 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.695442046 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875942699 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.692946075 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778856099 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697815989 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.69695699 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.693917203 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728200125 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.694634886 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.757902818 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.694205289 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.696222529 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.068432589 seconds)
  done (took 391.965132648 seconds)
done (took 764.850227955 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.371388658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.323108649 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.43339542 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.347576649 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.325782912 seconds)
  done (took 13.436398314 seconds)
done (took 15.072831211 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.781436292 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78784191 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723080266 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.781870336 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715538478 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783298141 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.765648696 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.721294431 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.754102526 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.719290297 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.752136196 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718985039 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.706436454 seconds)
  done (took 24.348050079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933052277 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.92857537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770320618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.922149826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746241692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.932450421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861891919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.846168874 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.846717168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.714303094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709186523 seconds)
  done (took 21.8480684 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927774133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931053528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776778115 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.931546671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750864248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931365049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861655659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850500236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.863741538 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71437946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.713445294 seconds)
  done (took 21.891523895 seconds)
done (took 69.72391022 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.705036847 seconds)
  done (took 3.341355564 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729041927 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.863357062 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.710625785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.708862536 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.705650995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.706384951 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.713857678 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.70514438 seconds)
  done (took 15.482042375 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.703229871 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702969325 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.703256795 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.706922156 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.706040091 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.703798733 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.705504524 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.706165501 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.703204516 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.706214532 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.707693648 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.704465254 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.705714057 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.704637144 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.706800298 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.706009508 seconds)
  done (took 28.921722686 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.705808788 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.703125764 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.703632633 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.703678295 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.708072171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.704317128 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.704482308 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.704743166 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.7045846 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.702299576 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.705423904 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.704202522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.704220873 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.704659535 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.703678703 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.704861057 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.709022698 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.704035496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.708917734 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.703194824 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.705993535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703524781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.70724452 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.705660302 seconds)
  done (took 42.561513011 seconds)
done (took 91.944683408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.623548811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.105878586 seconds)
  done (took 8.370951634 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.709181017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.707333078 seconds)
  done (took 5.09648804 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.707335994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.707270173 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.708072285 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.707480114 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.706593387 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.709658408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.708870997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.707582598 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.708259695 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.708711151 seconds)
  done (took 18.723852172 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.710463655 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.70751264 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.705103303 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.708244275 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.708673419 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.704637235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.709296216 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.707855862 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.710049107 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.704380228 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.707804976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.706198085 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.714418621 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.706256667 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.709389103 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.707847647 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.70590827 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.706798504 seconds)
  done (took 32.383707191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.710316112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.708619619 seconds)
  done (took 5.062108719 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.707102596 seconds)
    (2/7) benchmarking "second"...
    done (took 1.708401556 seconds)
    (3/7) benchmarking "month"...
    done (took 1.711554616 seconds)
    (4/7) benchmarking "year"...
    done (took 1.708362542 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.707163383 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.70597623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.706326744 seconds)
  done (took 13.597568048 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.716805728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.882265089 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.943772524 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.342235579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.711685679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.717796436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.676282792 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.714678316 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.716265865 seconds)
  done (took 19.064324962 seconds)
done (took 103.941202473 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.534726152 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.704255598 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.119871898 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.790276755 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.723121035 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.048247426 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.734791375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.932589247 seconds)
done (took 42.230800516 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.784522343 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.261074205 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.300422893 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.049275012 seconds)
  done (took 12.252086134 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.692886404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248470112 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.755570531 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382808288 seconds)
  done (took 19.939643339 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.078653162 seconds)
    (2/2) benchmarking "read"...
    done (took 2.077771169 seconds)
  done (took 5.806363442 seconds)
done (took 46.426979575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71586484 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.715231126 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.719916584 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.714415464 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.713790793 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.712435334 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.713317001 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.716337447 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.71103229 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.715158808 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.716723109 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.715051849 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715915973 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711648057 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713808035 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.716684487 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714386649 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.718865234 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712880532 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714954668 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.712861277 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716892346 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.716425301 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.714853595 seconds)
  done (took 42.808153765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.71924416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.713435726 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.716738395 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.718727594 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.716684918 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.717506056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.719552131 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.714318962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.716240859 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.715327677 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718246504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.712612946 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.717077447 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.713411383 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718395482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.717504653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.716998317 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715691322 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718328201 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.715823872 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.719150808 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715449883 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.716984282 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719129894 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.716281297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71560107 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.717759436 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.718877072 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715219928 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.714126697 seconds)
  done (took 53.15390948 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.722178584 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.726732427 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.71780937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.718689159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.718609191 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.721890774 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.718908314 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.719400578 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.722157307 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.721022484 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.720152006 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.718524837 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.718620927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.717984127 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.723993091 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.71624022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.718674373 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.719379796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.718361766 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.720143859 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.720812559 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.719288992 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.717508832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.718607111 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.716826654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.717388604 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.718566499 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.716902886 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.71834387 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.717097218 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.717543961 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.719301055 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.714932768 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.719522413 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.719940794 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.719700262 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.723013613 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.728712678 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.718952749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.721868933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.718442576 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.7180867 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.720018016 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.718846606 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.717896529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.718629959 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.719015764 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.71982122 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.717757997 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.718863409 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.718308251 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.719256059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.718333002 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.720760954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.720044379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.719335033 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.721257005 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.719644644 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.719633452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.719721974 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.719820882 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.718582784 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.718045798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.719142553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.719707885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.719556341 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.719151955 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.718586236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.720502101 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.720053876 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.71927471 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.718114454 seconds)
  done (took 125.453898014 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.718767114 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718092085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.717798069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.716087136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716572785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.723734684 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.717833555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721487632 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718126717 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.719902364 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721397499 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719215987 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717764972 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.720114506 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72174071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.718992372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.720077236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717813462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.721846973 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722541279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720143916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.719989519 seconds)
  done (took 39.484400863 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720566944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.722101453 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.719353432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720148838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71857342 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721743074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.721916011 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.720596414 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721002665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719019817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721278578 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72250519 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717457639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718241752 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719072668 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.717354365 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72054287 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721638698 seconds)
  done (took 32.619196267 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.719144542 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.721309809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.722735358 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7187243 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.722031111 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.721820516 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718404914 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720885498 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.723010065 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.718956088 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.723301391 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722311432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.72394122 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719302001 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724497216 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.721770923 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.722115307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721535607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723357943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.721283683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721552712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725851892 seconds)
  done (took 39.533035394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723001289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722708541 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.719152001 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.720471105 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.721367553 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.722281214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.722982676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.723374289 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.72294157 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.725234907 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722165916 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.722603401 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.722092863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722355828 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.720416498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720848468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.725997905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.721303792 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724272988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.720483674 seconds)
  done (took 36.101674531 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72840451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723884557 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.726338542 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724603269 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726622505 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.724892872 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725778458 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.724358418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725792336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726823454 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725212472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725311621 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724861102 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725271663 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725154976 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726568938 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725755763 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727028295 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725543094 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72651658 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729069921 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725983585 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726063019 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727675258 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729863161 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723162151 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726100401 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727420311 seconds)
  done (took 49.986673444 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727972665 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724702654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.721885271 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.722894783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723355526 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.72220242 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.724047684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.724804408 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.726107596 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723611641 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.726962468 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.726422108 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729484571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.727277408 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727404146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.726375326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72672421 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.723832433 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7244673 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724009409 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.727156946 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726367042 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.727854976 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725439453 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725860807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.728349219 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725880023 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725397709 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727028152 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728472157 seconds)
  done (took 53.431171848 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.746623062 seconds)
    (2/2) benchmarking "in"...
    done (took 1.745555745 seconds)
  done (took 5.151429382 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.72443079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.728772502 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.726711799 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.725823088 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.724491791 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.729508606 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727519135 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728051758 seconds)
  done (took 15.475270597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.728942729 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.727341339 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.728171801 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.728910064 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.730408388 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.729935722 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733473346 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.727457931 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.728581446 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.727868088 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.737911255 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.737468818 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.732726933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727976709 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.727625566 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731075443 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.727739046 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.730684111 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.728260183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.728764152 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.72963966 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730640299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731853423 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.725882454 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.731210276 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.738232537 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.733101843 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.728385289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.728462162 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.732441925 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.729514357 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.72605758 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.731665213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.732795798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.729710227 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.730520864 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736172063 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73098505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.733974707 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731242711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729280108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.727300988 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.730891735 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.731393534 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733195183 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.728336344 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.730043405 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.726782315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.730291835 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.73520492 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.739654957 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729855811 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.728985407 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734246941 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.731479047 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738887765 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.736830126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.734185149 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.740598581 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.738362213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.740914269 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.738478519 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733213445 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.729022338 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742485623 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.757567146 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.735683093 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.73003245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.728267041 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.732064183 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737528766 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7427172 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740445648 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.735064971 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73205488 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.732460708 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734321784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73265813 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737408212 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.739350784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.733105083 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732698801 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744132052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757633264 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.731523059 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.735135539 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.7328813 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.73214372 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.734943437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742011566 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.738178468 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.731030142 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.731356753 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.732795012 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.737936846 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.732662291 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.733522064 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733224873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.728895603 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.73282874 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.733338655 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736307757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.745626985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735333211 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733395014 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.739096606 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.73273652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735851001 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.740524607 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.733726236 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733771912 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.734894714 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.739396386 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.731470424 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738737013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.743622602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.734505261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.738457077 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.733463015 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.734056136 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744898288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.764565301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.734417874 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.734567661 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.739341325 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.752524462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736576385 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.738283188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.737886815 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.73176018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.73169645 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.737882421 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.736459836 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.73584241 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.736733752 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.736969174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.734805828 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.739243765 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.737703336 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.738415386 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.736405095 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.737030958 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.735405677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.737565088 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.737628114 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.737831424 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.741175594 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.735022841 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.739115533 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.736780794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.734677528 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.738626927 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.737669849 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.737533506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.737268848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738146079 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.737713749 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.737286782 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736934769 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.736797081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737807023 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.736549321 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740320491 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.737408415 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.742422324 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.736378251 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.734256999 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.736020302 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.737164229 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.738782604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.738196259 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.740902723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.741264301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.745052764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.736982822 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.737638332 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.740293794 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.737928196 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737165182 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740497672 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.740152577 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.74599158 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.737860396 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742987382 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.736878875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740873585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.738109908 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.738432812 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.737240631 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73789881 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.743680011 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.745399325 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750533416 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750250161 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.741087671 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.743615499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.740443092 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.742924808 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.742808146 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.738922136 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741587373 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738333816 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738280588 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738416922 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.740824831 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.740286383 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.73894449 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.738016764 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.739290436 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.739101853 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739877427 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.742653853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742857051 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.73601194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739129508 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739798488 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.738262067 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.738170202 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.737814623 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.738301617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.738696436 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.740659489 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.744660299 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.737940478 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740368017 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740856425 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.739803345 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.741352982 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.744117055 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7443164 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.739491535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746381838 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.742879612 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.740588262 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747127772 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.739245942 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.740084353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.743624514 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.739772359 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.737241471 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.748780296 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.750061788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.740914757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.744886904 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.742549731 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741250947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743486321 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.748288003 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738009693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741315346 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.740473325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.745438008 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.738120516 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.743548939 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741513948 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.742353059 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744812886 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747310258 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.743355872 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741865363 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.743044784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.741186906 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.740769254 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746706508 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.751958133 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.744822728 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.740936509 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.746510908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.744444523 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.74847071 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.743525545 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.74338936 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.742139068 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756400242 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.752393333 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746434133 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746978961 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.743846484 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749192802 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.745539402 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.749660215 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741729678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748068571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.744102864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742725671 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.739765949 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745328319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742866365 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746341419 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.744011851 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.749724897 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.743585142 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.743499047 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.744143921 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.743915464 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.743962973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.743337423 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.742397052 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.747427289 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747104011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.743489557 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.741601044 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749652704 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746420641 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.745145455 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.743661816 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.747336728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.745806871 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.751997932 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.745640603 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.74943361 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.754712968 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.747632391 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.754988986 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.748732399 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7540722 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.746683745 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.74925739 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.754126975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.742997689 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.746297708 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.746860086 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.746142022 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754007219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.749230055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.745306351 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.753486329 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74599293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.747356878 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.747021116 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.745344403 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745787285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.746624444 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752617398 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.747268774 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.751947397 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.747808259 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.747059095 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748980818 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.74676136 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.745488457 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748322236 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.746248323 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.748566097 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.746425604 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.745998083 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.746981679 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.747077044 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.747840454 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.743082702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.746624656 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751725578 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.749061528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752370627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.747742387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.754103243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748923404 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753275435 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.747777796 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.750375711 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.751144122 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.748837761 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.747890554 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.747463674 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.748341224 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.748109285 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.751535091 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.751648478 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.748182316 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.748605321 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.748213813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.748856474 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.753644536 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757639724 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772328605 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.748818026 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752610528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.747562349 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.748475069 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.751920535 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.748221396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.746609165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.751059146 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763539221 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755580907 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748759241 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.748051074 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749099355 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750351644 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.748277488 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.749149423 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.749246469 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.747960452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.750893247 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.747551789 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753266786 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.748765521 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.751767891 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749828328 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.749776861 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.759582111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.748029132 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.750610375 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748317675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.749362641 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.749166179 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751453652 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.749332323 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753817194 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750957027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.750893856 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757469541 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.758316275 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.75412738 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.749323821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.750482557 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.750425695 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.750408086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750876132 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.751982302 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751001704 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751666548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.751821251 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.749586261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.748677853 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.751178123 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.753242073 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750959824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753905992 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.758274964 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752196414 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.748976323 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.750664281 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752856663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.753832592 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.752498069 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.757579641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754298175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.763104052 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.762145434 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.7572876 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.752583926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754466586 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.76114863 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.750845955 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.752359821 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.752368397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.755892479 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.753183216 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.754289306 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752869158 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.757596574 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.752902595 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.753056552 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757850795 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.754974387 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753143898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.756171704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.756095995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.752231142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.750750946 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.75198401 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.751583177 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759406452 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.753087651 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752784443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753807682 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.749704129 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.754319 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759207299 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754571933 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.752576853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.750345068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.755855158 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758910587 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751394352 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.751542741 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.755207779 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.751839169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.755282645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.762058652 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.751838392 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758004919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.754832456 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.757886165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755126452 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.757889551 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.751419273 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.751920717 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.755877914 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754517593 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.759127934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.761000873 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754396883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.756885383 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.757539885 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.75625666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761326427 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.765265427 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.762246967 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.753405502 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.753063793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.757881917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.757633279 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.754316973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.755652356 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755531595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.758175297 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.753620532 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759933373 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.755856809 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.761596415 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772977427 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.756236591 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758790289 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.75773075 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761448924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.758968543 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.754263271 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.756765518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.762305393 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.761773676 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.76420493 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.758443317 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766486045 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758644223 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.75791223 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.760027134 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.760374102 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.764318237 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.762025266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760288874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.757194089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.764824796 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.774749369 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757017268 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.770266552 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788641612 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.76013161 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.761327071 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76238996 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760083867 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.758135888 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.764279806 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.761092712 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.760157794 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761083826 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.76506918 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.758838757 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76478864 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.762735375 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.759647126 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.758426791 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.76122927 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.76249243 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.760170819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.759046151 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.759424796 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.763214349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.760452718 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.761494041 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.760905383 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772267613 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.774059363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.758120667 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.761692899 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.762164437 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.766899551 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.766669322 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772015246 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.770777725 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.766141553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.761724176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.765852932 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760513294 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.760557548 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.765750315 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.762461936 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761862192 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.76047086 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.777077182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772430079 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.764944809 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.762482121 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761101969 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.761870055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761587747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760198123 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76164252 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.766815011 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.764798014 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764928728 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.763308273 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.760218091 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.766885925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.774476549 seconds)
  done (took 1042.685064974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.762156625 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759763101 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759140494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762450148 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760790526 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761408596 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758788928 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.761032183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.76349994 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.761947331 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.764086861 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764038243 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763638388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758701761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762408621 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763204172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761635895 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.761982016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762513774 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763160645 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759067935 seconds)
  done (took 38.689410588 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.76163881 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.760261685 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759642119 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764856245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760604779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.762116264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.76046534 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761696313 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.764152368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762168574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.764042818 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763635748 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.760888902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.762880552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75981282 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760320898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.763090546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761425115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.765065266 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764363888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762758896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763710276 seconds)
  done (took 40.466159273 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.76581778 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.763948525 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.769262398 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.764285375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.764859341 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.760969325 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.762097916 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.769031405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.767208942 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.762634255 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.763076108 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.765669345 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.772988423 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.767827907 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.769372571 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.764474243 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.907728729 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.766742475 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.765156702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.766671023 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.764305213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.771362463 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.764108283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.761928974 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.766201886 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.763739686 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.764519319 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.764746199 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.76708264 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.764438841 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.769633521 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.766253951 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.764816235 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.769283382 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.764197629 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.767688232 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.7688586 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.769099759 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.762687129 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.76741096 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.775958372 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.787004545 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.765111157 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.770707943 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.766276154 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.769536055 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.770959972 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.770968719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.766122943 seconds)
  done (took 88.422402458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.765675562 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.765769142 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.76282575 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.766348072 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.767242689 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.765204025 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.765239846 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766841784 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.762784564 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.764833623 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.768125123 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.760697023 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.761698619 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.767000628 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.767449125 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.767370929 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.763371604 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765767079 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.764075241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76474853 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.764676286 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.771442346 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.768259867 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.764760326 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766891277 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765284101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.766666726 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.764610666 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.768774698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.76637814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.765207035 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766753817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.773249199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.765387938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766789094 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76964357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.769668471 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.767658618 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.76934072 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.7679605 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767442979 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772510113 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.769568756 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.770885171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766242049 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.767524753 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765589655 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.768398784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.767576334 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.769027952 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.770180536 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.768312749 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767929631 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.767160171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.769964304 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.764846711 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.768912464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.766135608 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.76625487 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.767484893 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.771829164 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.770446072 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.766744441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.770874018 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.771094755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.768430891 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.77042659 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.769919925 seconds)
  done (took 121.872465616 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769471144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.771006152 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769654781 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773254005 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770612327 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.772365214 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770617288 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.770412835 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773852358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772804707 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772205726 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.771517887 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.772037204 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.769655897 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.771836643 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770662556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.772211085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769122087 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.77051781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774624576 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.769712481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.770458432 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769228112 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.770249107 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771303114 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768585322 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772928035 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.773451279 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769733468 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.772926302 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.774357803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.772600011 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.772373961 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.772186287 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.774742931 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.770904277 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77563212 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770295747 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.770385276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.768424465 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.767954756 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770667722 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773207302 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.770250532 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767943671 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.76803795 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769434764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.773043329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.769682092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768990264 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.769654677 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77337958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769286638 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77400776 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.770667313 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.768386432 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772160672 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768303778 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76944049 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.771148666 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769697925 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.773602382 seconds)
  done (took 111.510894903 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772346406 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768255709 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.772652264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.768152926 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770346237 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769520603 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768963526 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.773316672 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770036116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.770540137 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771880273 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771004489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769755589 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772256679 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770436994 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771584461 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76979396 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766896169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770817491 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769492898 seconds)
  done (took 37.111383647 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.771388665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.770998088 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.767690085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772300232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.769498255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769613538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.771037677 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77106067 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771478017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770077345 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774401394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770625646 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76960525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.771605162 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774209788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.770246535 seconds)
  done (took 30.041737014 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.772077031 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.774488775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.7732895 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.774705937 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.771624148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.772877883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.773453575 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.7712906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.773216238 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.773433832 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.771828216 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.777725909 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.772183467 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.774889721 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.772465953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.774400496 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.773041498 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.772863379 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.773005453 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.776195799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.774924707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.772540364 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.779160741 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.7813069 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.771187169 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.771681997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.77401736 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.76936891 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.772868323 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.773241868 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.774533049 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.772811298 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.775706189 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.77317508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.778791137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.774792097 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.77554863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.776129313 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.773945876 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.775717298 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.775062902 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.773036302 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.77475345 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.776453611 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.773578381 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.77590431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.772162489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.77670254 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.775951139 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.769604858 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.776308408 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.775824996 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.776869581 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.775894896 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.779302338 seconds)
  done (took 99.292353862 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777003559 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776099187 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.772699882 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774201621 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.776781968 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.771740526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778163143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.773016923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777312808 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.776203247 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774708332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774716738 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77430149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775817117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776336137 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777306518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778370423 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.774833762 seconds)
  done (took 33.670027494 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.775270987 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772788748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.778344575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.777477322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.77474366 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779019053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777851089 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.777155552 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777424002 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777697879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774731443 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.777622867 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781309269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.778338225 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780569624 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774159801 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.780417398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779526017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.775422497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775143919 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.777758647 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780846176 seconds)
  done (took 40.815738892 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.778773849 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.778588134 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.79392817 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.802647439 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.794188591 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.815831327 seconds)
  done (took 12.473633016 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777905397 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779176987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779557497 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779107783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778954754 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780931242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774518682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777199957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78033371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77528098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778365898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781561737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782079 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776265583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782341287 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778960801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781509017 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776308349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776575236 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778693221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779985732 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78133744 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781287902 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780991992 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779136192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781807679 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78161115 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778589626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781003623 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781569905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782146493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777695196 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785766982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777721205 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786620376 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781970537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782032943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785361666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783133299 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780855696 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784885631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7830165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786072435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781471185 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785002092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779623047 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779689733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778349097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777063965 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7836067 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782857582 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779020852 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783246788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780074087 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782896835 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786497986 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778879133 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780499573 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779264195 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778871432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779349652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782369405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780745183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779837486 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783836662 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777092834 seconds)
  done (took 119.231675247 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785826307 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784277011 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781781753 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785954303 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781464716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784863729 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784861733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782789685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781080613 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781659625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782505909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783791578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780797862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783406307 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778213599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77882807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781719844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78502531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780662681 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784406654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779950857 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779292463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782862521 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784597869 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781547421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783442225 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784275007 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778906826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782127677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784431449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782515847 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782801571 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781029545 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784408563 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786381811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782536101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786768404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787208082 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785559847 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78456615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783870307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786426539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784570625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783451469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786152313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778994541 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779168222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77866471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781897226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781184589 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78232919 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780144634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781758973 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779850384 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781186052 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782059492 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780946831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781747406 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785084882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781911624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779747513 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786895609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780187962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780678978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782661811 seconds)
  done (took 119.377828318 seconds)
done (took 2430.507195356 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.870656377 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.787754505 seconds)
  done (took 15.37068189 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.947054029 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.899338382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.784838909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.800957412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.781210783 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.801475015 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.802625451 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.782007052 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.785875574 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.784236196 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.782431983 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.96666579 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.785613517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.783650672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.784402181 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.880882915 seconds)
  done (took 50.873288752 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.786330455 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.788153106 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.798850922 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.789348776 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.787879116 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.801008999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818252225 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.791567453 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.825199488 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.801119642 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.862129366 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.798403093 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.786952514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.839535644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.802085993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.803391849 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.87403639 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.860912465 seconds)
  done (took 34.329678524 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.864562348 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787341202 seconds)
  done (took 10.374878962 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.819291304 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.807547734 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784910656 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.804990818 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.791364175 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.805831096 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.794418501 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.798595125 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.79455908 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.798093639 seconds)
  done (took 69.717640744 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.79603684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.790453332 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.79116493 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.787557333 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.779963105 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.784463018 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.787810048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.78210006 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.466103715 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.822528895 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.797855952 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.795537675 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.790047748 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.794824441 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.787564422 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.813023971 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.912393797 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.788947597 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.787648022 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.795660693 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.790786493 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.875260294 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.804022416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.789468351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.821405408 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.470238973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.795725843 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.79771741 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.909198508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.787823175 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.790515521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.790419937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.792879507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.167588492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.083916148 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.791147156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.798973657 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.799965833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.787445661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.931198648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.793727114 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.796637109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.725193512 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.069391885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.890628325 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.832669289 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.155683854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.794802914 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.793514891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.821890898 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.795004603 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.793022716 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.804713676 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.302413091 seconds)
  done (took 128.317767448 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787294444 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.113156365 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.94100499 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.785480569 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058911767 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99664191 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.73420449 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835814935 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.787262483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990355954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015713314 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898673201 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.784871886 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.786896156 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782002529 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.782782808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.948114801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.855883599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.787053245 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.783071648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814951679 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998375604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.919037932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792249354 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.809438803 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99905527 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.908591521 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.897738425 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.348752097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.786813998 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851630558 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787024781 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.786824482 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.78503495 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.944670641 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.885542814 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879576956 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.788237864 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785884238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788869075 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451692766 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986318533 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.886615341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.930928855 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035945652 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993109456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.437598384 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.785398426 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.437599038 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950839612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.002721623 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999301624 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.912953177 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.78907068 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.030159814 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.788246824 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.78853117 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.024732761 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019361157 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896584738 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788816806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787357682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786384871 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032538416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787581116 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889893077 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788011931 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786625387 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.89008126 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897547339 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020380537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002100068 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.824099325 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.108631666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.277242724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003043764 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856715428 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035191939 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791404453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786817807 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877758376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.542774062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993133794 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038599934 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011907678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824430143 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.388682964 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.788616344 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984670383 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975581952 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98612517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032906033 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.948924864 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.123833567 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788889363 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.788241887 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.053009472 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928981159 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.794588125 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.154424903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024096309 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.356742053 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821489616 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089357213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929001822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.113095319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.417569428 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79034652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960418115 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.829599 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.789296349 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793863947 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98266814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.596768402 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78997443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.495485684 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.853890295 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.791823796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995141912 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793236276 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001681103 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79370185 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028360685 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.539904425 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.824507831 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.962633553 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03280595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.585561729 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041702913 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037858162 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.913794652 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086041146 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.527345902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.792646667 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067817357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794718396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.794015202 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.960641807 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.792228628 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947966891 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796872698 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022013238 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817494841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953411382 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799590739 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027396334 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828298261 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843172581 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793854604 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914858363 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794010738 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784317477 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951424718 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793796994 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.790124012 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.235276481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.791341944 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941667544 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0248587 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817470276 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863036492 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319574491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792873696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882322197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819213737 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.438535787 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.795020654 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.012621435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.766691003 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.219618979 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.792287625 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036678797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046372946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.795223934 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791004609 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.536081113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.497315231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794264427 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953448559 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.178065087 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.442454724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997748337 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797979791 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921869569 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798923025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.87571906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146557629 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793365395 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.792113297 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.793157139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.794155408 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795334847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004912177 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.824402487 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.312213398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932106019 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01142414 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.105076106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016780927 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841283865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.796795042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074942061 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796973252 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.859887235 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.79572044 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820165685 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030844932 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798757865 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.008642809 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05295289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.727341334 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846436117 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.79605671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795687963 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.795845879 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949614118 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894238472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.795935549 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.795055432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.909416509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92597454 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991775555 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.393000173 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.881503796 seconds)
  done (took 883.384775174 seconds)
done (took 1194.083523161 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798047374 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796111842 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.78453211 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.801493703 seconds)
  done (took 28.912529891 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807144188 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.805364242 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.807291073 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.804789255 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.805325045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.803678698 seconds)
  done (took 12.569044063 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.848708017 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796503202 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79995136 seconds)
  done (took 21.179718899 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.874255299 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.20816988 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.914653357 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.245284116 seconds)
  done (took 9.977361797 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.807828559 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.808484639 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.804585372 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806164786 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.808439937 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.807993187 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806446707 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807057022 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.809593785 seconds)
  done (took 18.002944778 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.21628006 seconds)
done (took 96.589865306 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.193464161 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.87588201 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.799509031 seconds)
    (4/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.953516766 seconds)
    (5/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.799165943 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.100710959 seconds)
    (7/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.069675535 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929844694 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.202862197 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.889441217 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.840874711 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.825696475 seconds)
    (13/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.152622596 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.863329237 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.087540155 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.939360461 seconds)
    (17/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.827898138 seconds)
    (18/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.904137504 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.271307413 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.13993034 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786842233 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.088367292 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.80595534 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 6.87297908 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.99474218 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.150741758 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801092843 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.736553199 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.905181288 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.130472378 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.520366088 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.002479697 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.786578696 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.124062563 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.834208236 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.910020432 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.792065215 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.282844922 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.49025135 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.89065192 seconds)
    (41/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.708849117 seconds)
    (42/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.99850119 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.943503236 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.7884957 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.957991919 seconds)
    (46/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.90828632 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.06329518 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967029373 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.875382272 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.083541811 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.826524156 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.776912081 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.599390836 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086305163 seconds)
    (55/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.400324071 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.679740818 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.103956498 seconds)
    (58/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.383760024 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829132079 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.281533195 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.274220275 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.800166484 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980835138 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.859531291 seconds)
    (65/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931432762 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.829903679 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.851929924 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.943953429 seconds)
    (69/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.792373623 seconds)
    (70/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.89977895 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.388970322 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.20444544 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.943241396 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.251418505 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.945104823 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.615731383 seconds)
    (77/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.896134019 seconds)
    (78/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.96873683 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.31471281 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.085442974 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.976389301 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.018597639 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.316672047 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.506272536 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.806330419 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.143145054 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.965864502 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.194917726 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184428551 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.892649846 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.944751622 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.807352783 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.485481727 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.482652925 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.363851571 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.562006249 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.886490402 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.09259843 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.049582733 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.792267457 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851173317 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.027552398 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350978574 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.904478442 seconds)
    (105/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.312337084 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.452082061 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 5.641973089 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134286097 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.105319015 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.874988208 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.048372492 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.819984435 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.019939986 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.806343565 seconds)
    (115/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.999997798 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.983741464 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.809532907 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.865610524 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.898385063 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.791994682 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.473168007 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.728936998 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.897820456 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.065271438 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.812046964 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.059277872 seconds)
    (127/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.007542294 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.903928649 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.203848232 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.17015242 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.335292673 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.923509929 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.271627232 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.171778379 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.839785131 seconds)
    (136/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.878114171 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.906553167 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.818765094 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.550049864 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029291222 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.067366394 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.412389083 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831584269 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.946305575 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.903667034 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.157917002 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919092191 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.835028224 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.475686606 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.796615099 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.4757603 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.43375721 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.0172988 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.035608181 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.193355978 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.837225956 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.184880233 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.814324514 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.713330668 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.897255369 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.917543679 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.913888043 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840910799 seconds)
    (164/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.817705333 seconds)
    (165/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.154326202 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.840015689 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.873666051 seconds)
    (168/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.408166074 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.812959183 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.835459709 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.808221774 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.179562198 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.842750046 seconds)
    (174/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.796601082 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.54006032 seconds)
    (176/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.82087863 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.938808255 seconds)
    (178/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.125230071 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.117900415 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.805927097 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.591245066 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.031668689 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.782329677 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.010440596 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.840706532 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419385738 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 5.588380402 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.103450136 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.1432282 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.737282178 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.471421103 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.198034754 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.024080227 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.824446631 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.904001265 seconds)
    (196/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329171167 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.118262881 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.902696258 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150291808 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.848538425 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737512618 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.135960546 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.880537798 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.202467146 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.820356853 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.507953582 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.817387964 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.870458588 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.38829545 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.979033985 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.936836711 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.998388195 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.828784848 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.062727643 seconds)
    (215/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.828889765 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.871029379 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967030901 seconds)
    (218/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.190869595 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.829156663 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.865743375 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.834468132 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.817871493 seconds)
    (223/309) benchmarking ("sort", Int8, false)...
    done (took 4.772292781 seconds)
    (224/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.826046663 seconds)
    (225/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.975744 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.847472552 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.913002418 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.994669904 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.008907972 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.949027136 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.163528084 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91356026 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.582333875 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.285639219 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.020256907 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.951917025 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106759571 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.869953825 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.012066498 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826132873 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.801099659 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.374272154 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.805719789 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.926716394 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.892651281 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.786337057 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.760447978 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.770909194 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.752261333 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.081876051 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.702047505 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.733521006 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.879257836 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.288529775 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.876636314 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.772310304 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.312685745 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.856562533 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.167124007 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.847820227 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.884455012 seconds)
    (262/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.888380657 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.423292598 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.781426996 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.996279516 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.982395861 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.875280897 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.83834849 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178797458 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.688348012 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.808410385 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.801394835 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.161107352 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.801061756 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.915679971 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.098464336 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.899391237 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.782147714 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.549349942 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.964454711 seconds)
    (281/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008572776 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.938842931 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.041160179 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.168805136 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.906332854 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964639258 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.620063025 seconds)
    (288/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.918860384 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.608031416 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.846070268 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.838046617 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.820199126 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.802476553 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.947676189 seconds)
    (295/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.820818226 seconds)
    (296/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.03175411 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.896829976 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.918731238 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.953054541 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.802310484 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.232519048 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.882513411 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.917009505 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.842365622 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.100809067 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.81941992 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.911732032 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.419999136 seconds)
    (309/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332712566 seconds)
  done (took 998.366348386 seconds)
done (took 1000.178393549 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.842958829 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831679041 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.815058185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.836240277 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9273748 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859864595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.825186072 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.816670685 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.862240281 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.86362806 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.815047212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.864090466 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.817456555 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.816955243 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.815049786 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831375442 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.120965744 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.842395574 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.833663754 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.825861806 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.832134312 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.815474804 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.865183608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.859194288 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.81913461 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.819636967 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.821409063 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.837236331 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.929366763 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.820520353 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.819595981 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.829902539 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121384963 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.837982538 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.81273711 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.837743091 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.82840463 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.827080066 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.821155803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.849615565 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257052457 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.822944536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.819223661 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.817733128 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.817630644 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.821542409 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.820096672 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.823984026 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830711907 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832514681 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.255305352 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.838893445 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.821852275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.817875656 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.82904217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.819708518 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.821291672 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835760976 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.837887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834881596 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.11259701 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.846269474 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.820165883 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.83539163 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827606738 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292021307 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.819117638 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.823101424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.255916991 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.829099846 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.292951547 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.833428113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.820562845 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.834164494 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.852109064 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.123829573 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.837443715 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.819601026 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.827900192 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.819938565 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.829783029 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83316307 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.824406097 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.820420951 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834628862 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.86501102 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.830200275 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.821568394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.829122961 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.840170988 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.828268925 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.832316136 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.823687497 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.815185489 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.829857589 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.823559055 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.823459677 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.824589849 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.825659016 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.829920453 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.257269624 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843672539 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.816662117 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.81688349 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.81842901 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.834309737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.255733165 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.826738086 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.842680787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.868645508 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.822968639 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.114405292 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.847962722 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837840566 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.830803682 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.824386278 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.81629427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.115895079 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281545449 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.841945218 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.822873447 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.820389844 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837860802 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.823951982 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.818237866 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.125235501 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846403525 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836792842 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.944160103 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.833347349 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.855409879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.82222704 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.825955645 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.867748484 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838506418 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.85416636 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.824611945 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839206982 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.838683763 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.819089485 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.834291422 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.833341124 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.823800699 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.829518142 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.816871114 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.867223643 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835824869 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835982788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.844443157 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.944153329 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.819961984 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.117782688 seconds)
done (took 286.322281244 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.887407749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.81827179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.91656861 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.818630817 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.903870346 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.910996593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.815787049 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.816395792 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.815397186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.196986811 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.816483433 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.816867441 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.814661032 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.816130621 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.901173039 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.819255461 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.817254534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.160845057 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.82001237 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.891818888 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.821349679 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.816635952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.819919633 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.201500872 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.82040905 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.813142615 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889543505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816488111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.16311982 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810467851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.81581875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159849991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.906661039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833256948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.824316839 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.821727702 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.903799975 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.817199088 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.894045175 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.893472625 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.914314311 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.854416977 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.805805402 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.810072113 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.812354465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.81013764 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.808485852 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.835416448 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.80442857 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.80688913 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.146485726 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.814641819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.803620921 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.802829013 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.805589235 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.833756852 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.801309357 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.804596368 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.894514349 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.804771795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.867101222 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.181413031 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.179679197 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.801053023 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.800749636 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.796507733 seconds)
  done (took 180.569555596 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.865563175 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.871090708 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.862768299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.799379306 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.844970239 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.86800189 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.799579771 seconds)
  done (took 14.640649806 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.800717375 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.794930605 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845567794 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.844091119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.794927294 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.381876929 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.795326249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.806124143 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.792850767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.850048091 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.795765865 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.794499098 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.802055206 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.791106464 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.842897639 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.806204296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.910415361 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.795696312 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.792583306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.946138846 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790044373 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.799063368 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.847912769 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.806747315 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.790823391 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.796667192 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.383407394 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.789602556 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.788905293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.787325728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784694917 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.830649515 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.788022779 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.786922896 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.783108994 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904930281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.786401611 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780911022 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.783345768 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.783509577 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780945976 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.781393939 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.781715127 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.778784541 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.781139042 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804542852 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780673211 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.781357963 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.781493484 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781498134 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.832767631 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.781785485 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.779102164 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.779906083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.839563012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.789353208 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.782258679 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.779542663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.782185133 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779391426 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936731757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.830415572 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.782014829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.830393387 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782096823 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.783559096 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.781410491 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.782155616 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876693436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.782380526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831372574 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.780006401 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.942595364 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.80635301 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.784588864 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.78541881 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.786459755 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.78398404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.780707971 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789414139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.779839506 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.785002169 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.790273101 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781383386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780985406 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895816747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895985953 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.78140814 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.797040034 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.791252329 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.781983981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.837241766 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.784427525 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.781727248 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838857606 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899957384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.840454355 seconds)
  done (took 198.148442439 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.78899256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.792091273 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.786098998 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799476137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784134298 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783981652 seconds)
  done (took 12.450680815 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.786638708 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.784562926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.784103162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.783921183 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.785019577 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.785733813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.785606658 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787354669 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.788903026 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.784632995 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.785130857 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.785177909 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.786434538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.78481926 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.785826513 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.784217035 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.785361888 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.781642012 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.785328173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786109919 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.946474343 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784896692 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785967921 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.786788295 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.791254132 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.784644023 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.79309687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.786268369 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.786194936 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.79435081 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.790042202 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.78711429 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.786209668 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.793523283 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.791021867 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.787728415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.790068369 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.787875674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784539226 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.787592098 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.787666633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786153794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.787564979 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.787308268 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.788305325 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.791456798 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.792120065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.794911236 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.788754479 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.787893383 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.788084159 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.7866802 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.787633407 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.787379879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.788636854 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79271014 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.792124211 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.787524924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.787297529 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.788155338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.787929803 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.788561947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788887605 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.792473377 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.785383798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.78889276 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788467184 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.793189667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787649012 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.787749891 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788972488 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.785303872 seconds)
  done (took 131.593410898 seconds)
done (took 539.165533415 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.047475113 seconds)
  done (took 8.767023777 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.841913615 seconds)
  done (took 8.663531589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.277840714 seconds)
  done (took 9.997265106 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.836379179 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.808889323 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.792128664 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.789096717 seconds)
  done (took 28.95419153 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.891096714 seconds)
  done (took 8.61046587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.795824655 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.781119669 seconds)
  done (took 15.332938605 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.803750218 seconds)
  done (took 8.52360667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.17841222 seconds)
  done (took 8.901475248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.793277419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.789296806 seconds)
  done (took 15.319265594 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.768889882 seconds)
  done (took 8.488222628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.399458284 seconds)
  done (took 11.125558406 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.791518008 seconds)
  done (took 8.523700622 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.846707999 seconds)
  done (took 8.566495662 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.950188321 seconds)
  done (took 9.669659718 seconds)
done (took 161.163798881 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.784857832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.785698418 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.784153785 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.784120488 seconds)
  done (took 28.858402423 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.820862071 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.821618472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.824227501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.831592465 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.824835588 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.822330638 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.814162305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.813259304 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.832339121 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.824696741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.823915124 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.82469932 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.821828814 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.814493079 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.824861818 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.823837726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832980851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.823198541 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.814798903 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.825750364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.789420763 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.833715284 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.826061746 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.790297249 seconds)
  done (took 45.41808652 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.988594849 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.860629789 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.943377811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.859778732 seconds)
  done (took 9.372820289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.840978492 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.842356752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.855172723 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.893426892 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.919688126 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.852481787 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.812370766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.81112088 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.797432739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.843167777 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.918152094 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.860091361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.926300954 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.790377618 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.96984705 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.789476593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.790253127 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.842004263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.893764442 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.906570305 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.79056684 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.841381691 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.846774263 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.859961404 seconds)
  done (took 46.216232203 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.789188398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.798423138 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.796270828 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.79028767 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.789931932 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.789608151 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.796060014 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.791075764 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.810283665 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.791260766 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.788996916 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.790194837 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.789339469 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.790064507 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.789616269 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.803704707 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.80414584 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.791682948 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.793975882 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.797815251 seconds)
  done (took 37.60484553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.784738998 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.638475038 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.136750131 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.042323455 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.786000986 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.788144411 seconds)
  done (took 30.900303242 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803771927 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.796179985 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.791152196 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.846746877 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.930880898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.798708574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.791687879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802344067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836119454 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.856207807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.808865679 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.818691938 seconds)
  done (took 23.602971602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.80067469 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.787322062 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.79008994 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.803960573 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.802644383 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.798865 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.799759729 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.785477648 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.805335797 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.809601911 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.80025104 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.804083346 seconds)
  done (took 43.314793048 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878438028 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.832379242 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.823363018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482915673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166663559 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998814093 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316484847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131436352 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.791011757 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062159302 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.898187831 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897763253 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044617933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239510338 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818923483 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.25508344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090011085 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00663809 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818664655 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533431581 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874894523 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954378511 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.621683148 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871752219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020788557 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.937820653 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.068364835 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809395239 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948017241 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848305203 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819487163 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808546587 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083116545 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192648938 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914628333 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819263655 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428269805 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.522765767 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.794595676 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.60128386 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622136904 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948116668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8201196 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809033137 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743768011 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922856642 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180761282 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.815466779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.520357098 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810486579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820488661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898628509 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.813453611 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.625497384 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728442993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.812444074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.806870687 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816912129 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384445697 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998145502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.95509194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.780755758 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.903315159 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561068555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214333268 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.962653438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.811232779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810154364 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740684867 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.554294328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866334784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135813563 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.828136771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457113974 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12683436 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.993579974 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751046408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086841755 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303359837 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.777836202 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036550083 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809645505 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742813315 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.843767783 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.742219668 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095928644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850730853 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.597600941 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849992346 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144392102 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.817213022 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825277405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832226086 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028663273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.688789788 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804668792 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.699768157 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948664497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826142476 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138684085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739332706 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.80849865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060138922 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.016413228 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.827701851 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.30782309 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968473819 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326501897 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.854273695 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.914110384 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85114322 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081722356 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867253543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981253588 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866587393 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810881967 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138611969 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354700622 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.945370953 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.933766062 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938571793 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.162707821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843387453 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874617146 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820079437 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.811318057 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63112391 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367420665 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.812137638 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.813730038 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835321192 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856233566 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.813238173 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761765424 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.433018929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943080109 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.828323264 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033432014 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346010053 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118950417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74543163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140584929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865776244 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.033427332 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.463064136 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.896703342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072274225 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833823358 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.868416393 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855338984 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830632798 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910461759 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833004673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.910146173 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100262374 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.814810005 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.815447753 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669524287 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848553101 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811674482 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.814458817 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.560723755 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090191101 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839413487 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817184316 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699547533 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.824157822 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875639266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816259049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.820252833 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.348920922 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538325994 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.817120954 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.392866843 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036053604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821077476 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.565362391 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926597643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.896935458 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092477343 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876659339 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.746853609 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.524197994 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.506847385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813319314 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747775674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.813721515 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822184426 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82432264 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.009089337 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095616428 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860549275 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.562634652 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.860028139 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826216007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.819794296 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81551782 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.325907771 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000710638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967001344 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8607641 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960488723 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.830883689 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.751038806 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.820973602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821919047 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817288593 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.818677534 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850329417 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.571138537 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195229351 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079649019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.425375215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830624991 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.6001035 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.87891372 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.874864101 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.562665023 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078613277 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.958655472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853369772 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850770868 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.591271526 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.550091115 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475208643 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162074734 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155792795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286344814 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.022577423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867342797 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177928331 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776384071 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398459053 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900246708 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189801475 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790586594 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928166648 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494953478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196143895 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855019557 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070325229 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231649269 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.654149315 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99812385 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053902382 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877747888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.953892736 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801220307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.366007064 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983599193 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624364825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058225309 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18201355 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592515796 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.98055807 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.841602767 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542565545 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931701637 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.554767849 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.014787981 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990033276 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.866373392 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330990145 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851577619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070039049 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200449937 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954190116 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.963179789 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779597822 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855334758 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854117369 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.845029507 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.839069635 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.727130186 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.097878865 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855020074 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777715822 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.903958279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138108586 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.750961496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.849668356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84393679 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16993878 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.338067992 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015195482 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.892393994 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.3576193 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851883763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779220762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779616078 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.5385643 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850501241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.820567419 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06234069 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.949451858 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764596995 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.877999994 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922653751 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100882947 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.859615719 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122610512 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123181824 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541310617 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870076362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.94589232 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593446663 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.967505626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846221171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081114843 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600414772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072691998 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.913061617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.804852405 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.844882194 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060685449 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846623584 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833015456 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092784215 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.571362847 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.850998003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32769229 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935904212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.827435732 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.918917998 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.951748443 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86904036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938688676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870652276 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869684316 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868673594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907568124 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83715206 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997153133 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873966096 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9518014 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046416574 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382825939 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.866647981 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141055356 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232357851 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198595197 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922864822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860667932 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863510012 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794338455 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008912136 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085893188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134007152 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989643314 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.977825796 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884307835 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609732101 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.033120588 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101479367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13589837 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.755539524 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321408451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899923333 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.86004923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870640619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.071765693 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080932328 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180327776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006451039 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888295037 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224017937 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1345914 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860848005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860387332 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452314464 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.871379739 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.688692206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917630146 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864135088 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159429925 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881986052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263251129 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895170044 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.031154407 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389133092 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656669896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164662049 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865011059 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940327714 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154067818 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273844724 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189763931 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940968318 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883945586 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.974413055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019892553 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.761003737 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873675771 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872970572 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920692388 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.583780512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.883167165 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158775099 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185611947 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.870732295 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.761088956 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897542324 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.883942913 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096987859 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153817207 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128979919 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88394829 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879694038 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.689794047 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155124604 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937923224 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807580708 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.878138252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979199269 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123765039 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898778371 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327949306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.585906815 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152581364 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.878712528 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896228402 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992125905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251861497 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206604988 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410856613 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090680618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467585593 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407301965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17742722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.879489283 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987099624 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17763436 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.879301381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.903708049 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914902459 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.150116726 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190457487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.886853896 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737462066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.849313984 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220807633 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429273324 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81816002 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888806738 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.940399538 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879136066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007296696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890945505 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.793255641 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995517315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652700595 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159225513 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.884667052 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8670701 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.630693162 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.129262026 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91298504 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02073848 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885199885 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.594186184 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.239148557 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135710725 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.911071616 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.88831797 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.882964778 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87982197 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867548366 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076000019 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.077251693 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168246186 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.944052259 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.917033385 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884433515 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.097055172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09279988 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.831541323 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030806126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910977389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921939593 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.786515817 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389227429 seconds)
  done (took 1660.243908403 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892973545 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.900182278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.906627361 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.931314983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890777737 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962567701 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.896840039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92825512 seconds)
  done (took 57.126228874 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.877404489 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.074925415 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.886456033 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876960741 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.886299573 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.877107755 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.046199922 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.888578371 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.886573219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.887726636 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.87831575 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.876051758 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.187847613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.902811753 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.878760347 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.865230624 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.886143729 seconds)
  done (took 74.47855606 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87781098 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.963684881 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.911906825 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.898936541 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.839046856 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884118914 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.654598816 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.894916738 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.880885322 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.109837427 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.51420089 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895701663 seconds)
  done (took 90.140663949 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.88864852 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.884776141 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.885491349 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.885388109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885285409 seconds)
  done (took 11.248126813 seconds)
done (took 2160.270702181 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.163392156 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.105316444 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109261144 seconds)
  done (took 6.027924325 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.02444282 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.070899139 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.192584023 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.21119332 seconds)
  done (took 10.312696702 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.164639583 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.257125795 seconds)
  done (took 6.231768116 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.265500624 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.882683898 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.260144129 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.874842244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.874569236 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.876116388 seconds)
  done (took 22.441360391 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.877428224 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.880654465 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.878645772 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.880905562 seconds)
  done (took 9.325085575 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.860644004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.557710969 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.859919789 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.874786273 seconds)
  done (took 20.963333009 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.627302546 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.636094254 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.622328885 seconds)
  done (took 9.697015113 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.516136892 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784336528 seconds)
  done (took 9.111103291 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135270628 seconds)
  done (took 3.945575339 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010561768 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.186848361 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.39766889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.4349097 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511326517 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.610402161 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.189773051 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.11866186 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.289083552 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323416534 seconds)
  done (took 24.884341085 seconds)
done (took 138.326464179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.251273113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885275583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.069125943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.209464227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.272589104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07142494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.296751574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.193657459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.719896432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.715624789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.210635979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.269962349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.032159588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886732645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.03138652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887436546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.096904066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269410762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.946963782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.108315603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.300040369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.845897856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.056309583 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.860180974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.099502987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025792173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.42506063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.884156835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.101365889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.43881727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.028582863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.261214296 seconds)
  done (took 168.564957942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.782725106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.877827536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878664426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.877946899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.254257056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.877640774 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877964753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877928789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.05094204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.052162303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.884188985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.26375316 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.890222353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877674026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89430561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877193256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.265082742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.906417945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.910232337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910430476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916678124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.170373437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908191624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.21985001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.280199488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.908748181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878841649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.916236131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887154959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891357742 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896699275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879520999 seconds)
  done (took 208.656026574 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879997461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880657105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879983181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.878984392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.880712976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885688079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.882499202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.880220608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.54769356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.545239554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890961929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.887731863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883349702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889221498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.891872768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.890508184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.893577895 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.894016093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892503846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893688935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898853078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.605751817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.898879625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.591815882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.889856827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890968705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.880818463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.890197279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.365440089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.903247928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903576729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.883541192 seconds)
  done (took 221.490661431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.087334114 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.889324707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.891180225 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.842543943 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.89033332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.890330395 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.882675098 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.08043619 seconds)
  done (took 19.296650553 seconds)
done (took 619.830760606 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.430599675 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.211090915 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.07490326 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.914270423 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.163647432 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.95613918 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.909977682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.97676085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.657559989 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.98405669 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.561292851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930007483 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.645453635 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.936128351 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.043080305 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.967928465 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.487737216 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.588624231 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.094729469 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.981195373 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093470929 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903549826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.988246526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.671562109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.669585307 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.919610974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.10650334 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.496465053 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.923654535 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.08417138 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.643162921 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32522351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924987525 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.909208101 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.962284704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.943989721 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.276134454 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923043824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.039962419 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.678219321 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.976992063 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537922422 seconds)
  done (took 104.333185252 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.881344098 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.879373998 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.879194038 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.879792262 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.880895901 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.880617468 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.878839949 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.878862355 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.880075749 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879009372 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.880196793 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880672128 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.879196544 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.88145287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.879314562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.878921184 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.880293036 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.88243241 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.879554611 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.880456388 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880978505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.879385828 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.894551437 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880087955 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881674059 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881350046 seconds)
  done (took 50.73066876 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.894610962 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.039312336 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.121675068 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916987586 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.893412801 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.896205585 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.913369196 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.898974232 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896479714 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.895710274 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988445852 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.901591364 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914779294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.120650257 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.912395699 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.895917518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.896450816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.895490012 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.047500619 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.911979188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.91501464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.900551791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.914963065 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909382212 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.897863328 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896061539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.899016531 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337316861 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907436118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.993094488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98046013 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.921608978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.296646019 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.135967743 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.967006345 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.906370351 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.899335722 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.995232207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.905105131 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.900614907 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.918195836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.905660844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.122849509 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.388978055 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.916526416 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900263164 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.351945538 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006304574 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.942267489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912666446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.126719724 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.919594338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.901461552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.900742276 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.936986302 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912113712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.901596584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.218145939 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.915114357 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.919912744 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.90657453 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.902472957 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056941534 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.909945527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.045702953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.910318639 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.90914815 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.902872758 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.126354767 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920034507 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393366987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.918140526 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.902020329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995339557 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.05114763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.378127309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.91541517 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060475749 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314666577 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.927794414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.909671448 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.331061329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.930351975 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.911567437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903560831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.904199918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.902796239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.946820398 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.919194428 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334151176 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398595274 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234476612 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.930862011 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.918289687 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.90314599 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219377072 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.912393021 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903459833 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.121499773 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.404030842 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.919490321 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.910132898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.378171106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.918783211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9235379 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.91348976 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.13181492 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.919544089 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.947877905 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.904076458 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.910412364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.906305279 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.923456045 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.911681941 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.902728359 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.37896449 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.015635073 seconds)
  done (took 235.378405452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.898369935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.899666328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.897034312 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.912603743 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.897366393 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.904298172 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.897812844 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.898004669 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.903255214 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.897977551 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.89699692 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.899063481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.900051834 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.903113178 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.947564894 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905240457 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.509154177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.898822464 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.898591223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.911239674 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.546899352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.907108628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.898029154 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.916639719 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.899393198 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.898219844 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.900137207 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.940061489 seconds)
  done (took 168.41885416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.906189846 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.021116129 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.924675534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.933648299 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.915494022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.90299813 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.929891946 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.921957778 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.913341176 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.903580132 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904048604 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.968524683 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.918509526 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005841625 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.938725913 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.936336538 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011138257 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.914858327 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.904550811 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.904558745 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.934638472 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.900792847 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.967118338 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.033491908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.924213729 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024529011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.913209679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.907422684 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.906033911 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025328305 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.921259618 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.967462032 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935216976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.925143079 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030327361 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024463881 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014021882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.936268264 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.912816374 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.904179573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905367006 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.894423365 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022945511 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.92604727 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.908127911 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.017253491 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.923955207 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.908317432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.916234965 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905189233 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.921944293 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926298779 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.975172327 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03861626 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.940865336 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.932561491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.932394976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.185471658 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.919753518 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.008252015 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.903089576 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.026200698 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.925921087 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.896381714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.907679047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.911933676 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.935784682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.940516242 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.013774577 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.916835225 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008825613 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.944671199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.915504987 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.907379055 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.910178859 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.024439459 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.025459691 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.94443482 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947282907 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.940897605 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.906441107 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.908491232 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.897760478 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.926291528 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.912148124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027521014 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025953088 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.918001866 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.91030038 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.910744378 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.910629855 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.935085194 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.034360721 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.944363815 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.007126213 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.978058635 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.98305375 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.921950682 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.921919235 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.912880252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.973640744 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.923305491 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.919698845 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.232347196 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.982662618 seconds)
  done (took 206.607488304 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.380764253 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.967214336 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.966142801 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182513585 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.328926061 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742339427 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.957515335 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.960193599 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984664687 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.120128604 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.017052998 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.971482884 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.948485794 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.932942561 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.958178113 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.97956515 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.963754672 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.240584681 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079640334 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.033768027 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.939419752 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245081933 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.280993144 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.348067666 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.997429286 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.298991672 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648734427 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.20300033 seconds)
  done (took 62.52458733 seconds)
done (took 829.810712127 seconds)
SAVING RESULT...
DONE!
