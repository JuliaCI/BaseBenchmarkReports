cset: moving following pidspec: 17237
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.571952107 seconds)
loading group "shootout"... done (took 1.063604213 seconds)
loading group "string"... done (took 0.402694401 seconds)
loading group "linalg"... done (took 7.64577372 seconds)
loading group "parallel"... done (took 0.153745531 seconds)
loading group "find"... done (took 1.335084942 seconds)
loading group "tuple"... done (took 1.897946139 seconds)
loading group "union"... done (took 12.154439788 seconds)
loading group "dates"... done (took 1.237330045 seconds)
loading group "micro"... done (took 0.190719029 seconds)
loading group "simd"... done (took 4.136309177 seconds)
loading group "io"... done (took 0.971414124 seconds)
loading group "random"... done (took 8.202602692 seconds)
loading group "problem"... done (took 1.527720379 seconds)
loading group "array"... done (took 18.416269637 seconds)
loading group "misc"... done (took 1.436092085 seconds)
loading group "scalar"... done (took 37.515106157 seconds)
loading group "sort"... done (took 2.841920674 seconds)
loading group "sparse"... done (took 11.216404007 seconds)
loading group "collection"... done (took 16.569037467 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485611267 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125560518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12887449 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116817944 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144635905 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119815911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124011018 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084753744 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.902378884 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146623976 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113518861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433240733 seconds)
done (took 5.236108583 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165418941 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087238193 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077298198 seconds)
  done (took 1.259280031 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062531885 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123729542 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063503861 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06407508 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0644337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063703039 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063294015 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063715087 seconds)
  done (took 1.601522572 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069449989 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065776568 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063427911 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065574106 seconds)
  done (took 1.361062024 seconds)
done (took 5.560822131 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.237530124 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101718668 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286979186 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.391876368 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.457496739 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088725958 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07174053 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067493273 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12717279 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314923937 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107276259 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183726195 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090339667 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174363755 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.972019954 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115171096 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082630554 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122463625 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09142352 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129882016 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.413965034 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075391085 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072980617 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068220462 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065281366 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.656302364 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664875715 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129270955 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080890126 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099386754 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113945263 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643635811 seconds)
  done (took 10.428275625 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092294629 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090992248 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065880673 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122938742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092006768 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067449762 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072730258 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065087369 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09024168 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123934987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089009991 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099070328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063763636 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066925518 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074483102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196514959 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07808962 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078479693 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06600411 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077618836 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105494369 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076521518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077740938 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076905408 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126727908 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168756912 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095828842 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095626914 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065034681 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079152946 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112677651 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125312104 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064250208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063507017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119093836 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092762415 seconds)
  done (took 4.46260615 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.942540828 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088194531 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102454026 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087637454 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.618773706 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063434949 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.153023799 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24542505 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070679073 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.397518007 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.1108 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.142928762 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145045113 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113049061 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067965624 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.244550706 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115492614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.390494486 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066745631 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065052654 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063469736 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061286708 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067168897 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066134241 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061417633 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068631359 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09014214 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085660324 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.319982138 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.794384983 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.254449074 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065536742 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158840431 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084790231 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357628093 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069015737 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083017421 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.401218284 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122607892 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086212971 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067200071 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169890804 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116364671 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063261665 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.115122146 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078054529 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068393799 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069779691 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067459105 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070591183 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078463857 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102205217 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067220445 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064286527 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164857047 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063647347 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066144812 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066719909 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149979597 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063364384 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.144350421 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062676075 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066427139 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095745056 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066628339 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.09097242 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.107395002 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.371421315 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.059330892 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064389502 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.225382587 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073139911 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062976738 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070954088 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064413115 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065968073 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065803922 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074604893 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068336512 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066966487 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108583565 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065998199 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068518372 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065947053 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070512995 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100029689 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064400132 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.462043863 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098106358 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065256576 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076686448 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105129022 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064499183 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072516715 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.173457006 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066438379 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064971527 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066750835 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069273516 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.09246103 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06795724 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111286698 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.042236463 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065773337 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06567301 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070992749 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062197401 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069735223 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067906944 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065601932 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069741207 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06711006 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063046302 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114634235 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064969694 seconds)
  done (took 21.772846533 seconds)
done (took 38.699263254 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255460267 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083339374 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083398282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083356761 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08335975 seconds)
  done (took 1.775727843 seconds)
done (took 2.947393333 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.10745174 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062108335 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099370476 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099899926 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064712989 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062566503 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097121844 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06284166 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097208689 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100091013 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102932512 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101179243 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063369188 seconds)
  done (took 2.305739709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06746551 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079709061 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083109091 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061091454 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071318527 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081488698 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061059819 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08019943 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08826073 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080712076 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08085905 seconds)
  done (took 2.000126843 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067430594 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080402674 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083420671 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063001463 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073000619 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080701085 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061643456 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081420052 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085777517 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081489643 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080957037 seconds)
  done (took 1.998717254 seconds)
done (took 7.463814907 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068394281 seconds)
  done (took 1.214696358 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.572765171 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.627838898 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083126886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086950089 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182896204 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.09663458 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224345814 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071126926 seconds)
  done (took 8.277850222 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091009315 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071128277 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064797092 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065863524 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066190128 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065230522 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06492445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066225617 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066154755 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065779055 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066059381 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065079328 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066043032 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065343178 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06636189 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065132155 seconds)
  done (took 2.350152849 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093417449 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091393093 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069373007 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071389871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069156388 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068434316 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070960599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070736124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06776511 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068790842 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071800056 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070034497 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069302255 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060775516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070702511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07239881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067098584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070782695 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070734753 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072125578 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071217716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060663657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069467124 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070650217 seconds)
  done (took 2.991716899 seconds)
done (took 15.997172519 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111912106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073218134 seconds)
  done (took 1.353959808 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068530561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069145906 seconds)
  done (took 1.323581445 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076318922 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058335977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082371005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071071836 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059795027 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.05885328 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080753065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059348176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058877358 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058949515 seconds)
  done (took 1.850845741 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060407362 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069031344 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066267241 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068442892 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066511639 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06054673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063806684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060820594 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06919186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05990723 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065254594 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079548686 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064456826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082262547 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063823581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065130078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067905149 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064397275 seconds)
  done (took 2.384103187 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058563385 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059961087 seconds)
  done (took 1.308387984 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062180465 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060454912 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063642113 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062880572 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060259316 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058941152 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060344657 seconds)
  done (took 1.613581417 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.34353004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116345375 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308874141 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066370982 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076479289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.240680678 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06034794 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065325666 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065463964 seconds)
  done (took 2.571474778 seconds)
done (took 13.603745628 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077117004 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080113215 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08597355 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418553351 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089354157 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064172887 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110128018 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.162489215 seconds)
done (took 2.290671068 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.224799305 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.44989174 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.945213851 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063829938 seconds)
  done (took 3.654556333 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32095376 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080724531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074028709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064217154 seconds)
  done (took 1.740509855 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062075526 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068272733 seconds)
  done (took 1.327038463 seconds)
done (took 8.152809507 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086140019 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060647558 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060880968 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060516278 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06079847 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06037321 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060598734 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060930524 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060523518 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060261094 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066101746 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060691769 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060546041 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060412402 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060618668 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060954373 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060876812 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060978344 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060851014 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060784369 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060926235 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060528104 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060894609 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060517695 seconds)
  done (took 2.710491516 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076825122 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063184589 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065130525 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06445573 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065050251 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064666923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064736506 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062973451 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064775134 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062647727 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064468534 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064902312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06285616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064886593 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062272487 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06493295 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064762881 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062985158 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062633766 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064992098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0646322 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063040361 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065196163 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064515653 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064806398 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064767796 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063187936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063389955 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065140332 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064901604 seconds)
  done (took 3.145260016 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062030797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057230711 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058425538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066573565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05729033 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058390362 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058326567 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057249071 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057980002 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059227729 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058415696 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05732605 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058399678 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057395407 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05721055 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058259734 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061216699 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074556477 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057652639 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057101428 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061401194 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057799593 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057357957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05751684 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05794979 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057719213 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057635036 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05844121 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057437932 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058397758 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057225665 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061197815 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061858662 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057735815 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066236208 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061596149 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057350189 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061355481 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059219834 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057237876 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057058512 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057364608 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057412306 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05777413 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066311554 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057885565 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059189278 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060854502 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057702413 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057216277 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057950804 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060025991 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062488459 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059135032 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057276542 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059232714 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057510384 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058237853 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057481099 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057245993 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057219069 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060518374 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059411424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058453385 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074865133 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059191066 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066051625 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057491251 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060799526 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060782488 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058636617 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073307702 seconds)
  done (took 5.50278217 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085248694 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085811682 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062703357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062269994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05846028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058300239 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066244193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058102194 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062279143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077664555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058636734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062613851 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062769384 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062189413 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058687785 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062394685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066981999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058203582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05819957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062051061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058421006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065970591 seconds)
  done (took 2.643504545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136712164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0641676 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10053331 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075745684 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067086934 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075322488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063890642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064187614 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064534712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064220926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064652394 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06402825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066436063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064013421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064109685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064397243 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064203441 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064616332 seconds)
  done (took 2.507506887 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075562001 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063259271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085852444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063530073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063054797 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063435132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067674693 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068840477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063663491 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063051543 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068880943 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063304876 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063111275 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06350681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063086206 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063045119 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063290167 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063623599 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068556498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067730154 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067641916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068827019 seconds)
  done (took 2.676470864 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073790506 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062173242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075713899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064069168 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058279451 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058532914 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063941341 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062418064 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063914558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062086336 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06260245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058539428 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064143234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063075538 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064476074 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062740092 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062237437 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062648775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062515016 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058355241 seconds)
  done (took 2.484575553 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084641142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060999889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061368193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079953345 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061096025 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061168303 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079562819 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061271522 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061238694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082439977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061406288 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06145299 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079481741 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079221575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060950113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079642848 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079097756 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079147438 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0611706 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061206312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082548204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061376308 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079018951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061153806 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0611622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061072607 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061184024 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079083354 seconds)
  done (took 3.160676586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061212947 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069103795 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060665533 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060219791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060403265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060408629 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06060071 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060678479 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060396714 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06218899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060455706 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060504087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060408642 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060460046 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060564725 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060459029 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060481854 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06061676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060906147 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060822377 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06019848 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060717356 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060827211 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061060368 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061168742 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06051912 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061095821 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061008835 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060546977 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060738917 seconds)
  done (took 3.051489317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072113637 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06975781 seconds)
  done (took 1.365113901 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059323157 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074599075 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058005692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067745808 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067263601 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061054035 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068130723 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066643327 seconds)
  done (took 1.739106217 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066538568 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087917243 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060337932 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060610059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063715784 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118007566 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073591786 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069164197 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073688155 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060896392 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.0604817 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071908628 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059401951 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070489844 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061712961 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067133459 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06645075 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071067116 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070227959 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057719845 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073087908 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062990932 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058684055 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060894595 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059730227 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065203061 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073203908 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069725436 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066260154 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057019079 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080455602 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058167345 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059651391 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066667474 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063857925 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058248628 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093841221 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059411495 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064941912 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05845747 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069468474 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080031044 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070700241 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076131291 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060391142 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061338293 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058343082 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060736957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061125251 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066987959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058489925 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064618154 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05763561 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060940079 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067963035 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0588036 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064922717 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066738293 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072706543 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068157848 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065890099 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072073731 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06608797 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068572238 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060033722 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07700996 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060651384 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06955959 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071588938 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060227178 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07210419 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058419198 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057648321 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058576553 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090647852 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060441998 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060200994 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058854409 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058596061 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060229091 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067183648 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065000736 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064972055 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062997079 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074802035 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068161068 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058418041 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068045836 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.07568182 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061150444 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058909188 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073863612 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060819845 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058308633 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075374259 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066842897 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060677274 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060919914 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061307216 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070963607 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060239126 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057070591 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065247207 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060678173 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061624263 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063880716 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064907892 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058208106 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067781321 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064597835 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060433444 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056968192 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061242442 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058988572 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05630064 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065900379 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05955674 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072263424 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063036715 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070402627 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072174098 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06696946 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073928206 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057861378 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.18778961 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.079208098 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068712999 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061900366 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078594215 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059704538 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069066488 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058935917 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060980773 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067306442 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057795745 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060955362 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058822739 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066378393 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060847693 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061031017 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062609675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066236306 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.06994223 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060456151 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066164314 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.05975961 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073678101 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068313002 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06279351 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063008284 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059707571 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070149015 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064836622 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068475409 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058109909 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059911687 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059184436 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068854801 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067138633 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061082581 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068677517 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062563645 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059910329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059022393 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05983758 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061033464 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063088552 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059462695 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065885715 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067561426 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07183804 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070263791 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066514056 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05860326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058652711 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06111575 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058393427 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063009415 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068484849 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072371331 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069834024 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077281699 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059246562 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067760111 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060815788 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074263345 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069777273 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.05996735 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064595037 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057540653 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060849658 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0675807 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069656487 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071725268 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072317332 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063315194 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062710661 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058549589 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071648398 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059329497 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065858474 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068720895 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064912434 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059625471 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060992868 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066948498 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062366867 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058730943 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074778199 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06691567 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058387761 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070836201 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059169465 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068698499 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058117887 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061359229 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062519991 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060875908 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067150641 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07580738 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057235275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059700284 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076223751 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060767192 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060705091 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064923471 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.0735948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06361961 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065315252 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06799244 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067167959 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062035306 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066580147 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059688776 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068141565 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062918987 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069023921 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058544509 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074856656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057272214 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071656937 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058481514 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06811444 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058984369 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066066706 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058984425 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072866517 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059550991 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058931988 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069158852 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056744157 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067065212 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.192764455 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064450644 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065817125 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069850796 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061810564 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068264861 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062351813 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067193856 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063210941 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066909868 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069256114 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062980046 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058507615 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067616378 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069600767 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067869015 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060527118 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061502398 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060404377 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068541246 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06113107 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061329206 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068034899 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063428839 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0636518 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060750792 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060971428 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061516114 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06881484 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067847803 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075631274 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066455455 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065337734 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068322582 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058417169 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075783243 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058848355 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064754076 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05866423 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067424713 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068214615 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058999801 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077092583 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061241589 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065625683 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071143894 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065517849 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061086084 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075755681 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063174975 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067477843 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065627555 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062044511 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064235868 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060754221 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066093701 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068551277 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068969241 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060421822 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064601274 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06663487 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060587245 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06970429 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061338653 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066542708 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06111718 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05805881 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063351998 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069776818 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062579551 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063080118 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059023158 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057629379 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059166571 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068028445 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063402992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066609561 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072810192 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057618802 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060151804 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059030363 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063812332 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075934813 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067601815 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065717313 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063503664 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057994355 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060898808 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06136047 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059391666 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063465333 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058049758 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058340312 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068697537 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.06133259 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062383529 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059131083 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060600698 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067272905 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065040108 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059906279 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064388136 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05887153 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062673419 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057934012 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060432601 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062610724 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058057255 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061885274 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067858036 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.0740634 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064217244 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065711697 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061069164 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065324477 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07319336 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067420805 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060314402 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066178907 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057694857 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077542712 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065835531 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064592483 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066261811 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060067313 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072901097 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061199379 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066362047 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074470161 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059029722 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.206228758 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059985473 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078229946 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063721792 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060000528 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067055677 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065468932 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063957592 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071003532 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060229543 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066639606 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066203008 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062088111 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061098546 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060747453 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06622085 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073910145 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059863099 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065040677 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065644221 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06678318 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062663268 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070233833 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066821437 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060189433 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061657476 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06152654 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060021647 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070050506 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059542971 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063687444 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062510859 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058980394 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064536465 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073683348 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069087628 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067607089 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060452925 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060289435 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077217599 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061288452 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063581689 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06558967 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066966054 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070191481 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067915327 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074554194 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059281522 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063472745 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070192863 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059735672 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058917998 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06201266 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06042973 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067043439 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067475748 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064858341 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063551021 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06489378 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070719897 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060712152 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063042498 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06536329 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059723346 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068029022 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066100708 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066016443 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060794648 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058813462 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061218532 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068299546 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065008927 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068410633 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060381652 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068193921 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072514573 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065308585 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063415146 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058886552 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063459434 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066611802 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065075943 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058781874 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062834739 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061877576 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068216984 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068511796 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062531322 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058670083 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074870102 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066074622 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06699831 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061183522 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06130179 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059461437 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058861928 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069653516 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058888245 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061086376 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062899388 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061456768 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075295527 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066249075 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076894976 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060394823 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062504235 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058335411 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067077318 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062788456 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058799856 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06773806 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058032566 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075912323 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069361976 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067783534 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058056108 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062349966 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065604742 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072707618 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066724824 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067133994 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061825906 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06613845 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059807465 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067170719 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057232116 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056483305 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066694116 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064797244 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.208630024 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059832854 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068903408 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061764843 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065912564 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066573436 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06203451 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061501677 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061290036 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067349726 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062935629 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067924173 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062897775 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075862669 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060148316 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068494308 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066457395 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068914439 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071473604 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071397889 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066695957 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0602792 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06588483 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066567552 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060569274 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062910695 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063675178 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082696304 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061579997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061444661 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072702737 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068251419 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059645028 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068585881 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062390641 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068094956 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059861326 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068262728 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064508951 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060390112 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063017318 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062723928 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057562529 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058923757 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059010504 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067315951 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062676009 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058480917 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076501377 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061051773 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06601574 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069109054 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064685983 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060879508 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058223889 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061693803 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069589156 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072799912 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061691463 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066441628 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061786944 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069455241 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057935104 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06691136 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066531969 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066620317 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059179116 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059257424 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072527509 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072595163 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062880556 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06749284 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067508591 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061226793 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083046816 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06685633 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060715859 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069740809 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062336408 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058923489 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058294454 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061692242 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071672762 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059947856 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062334102 seconds)
  done (took 40.452950148 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099419452 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060146318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058893538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059004526 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071109056 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060383277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058725672 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06001954 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059951276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062426581 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059149782 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058703995 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071415392 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07472493 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070786253 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063934215 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059156126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059962368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058976442 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059776127 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070124119 seconds)
  done (took 2.696779087 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067741774 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075362214 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071140335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077208756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067816253 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064279926 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071735464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064655852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072562076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06980265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072697266 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064400788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07001688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069660466 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069441471 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064331885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07232651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067967666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064411245 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07167183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064515544 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071402945 seconds)
  done (took 2.838391907 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062100979 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059390118 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065615643 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05831404 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058529621 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062893373 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05846609 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061406698 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061597621 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061841475 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065801702 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058986175 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058182416 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062892961 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058063714 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059287296 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102480772 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059913746 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059463567 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058083408 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064123761 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069165734 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058351498 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058679736 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061916477 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066016591 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058547998 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062263693 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059260622 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062021431 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059532071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058006955 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066652508 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067791336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062450986 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061833242 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060595232 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059493875 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058370315 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058221971 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067208116 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060228107 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058788009 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060801952 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067800282 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059120535 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058147694 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066049272 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058124369 seconds)
  done (took 4.359921316 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074199128 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108233977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064375215 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089326683 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073896049 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066883217 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064242817 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089737998 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060252782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061238403 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07501781 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075329417 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062443366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064874496 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064289858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062236276 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063533117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06189509 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066022833 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061986581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065963917 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065636356 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073542604 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07400745 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063496903 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06174382 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062059903 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064773134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073903179 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066772923 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064352533 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065177964 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074971401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064829718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062332719 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062170253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075350166 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063107826 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062623506 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060253875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062128397 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064242729 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066155598 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075851578 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063195501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066688944 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062814768 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060232252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074435763 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062500624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06778351 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075494797 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064410593 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063035102 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064605561 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074687944 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063006701 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061285343 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063058631 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073847453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060711963 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063741049 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075626461 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062097684 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067125459 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075311062 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066769383 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064113138 seconds)
  done (took 6.058436326 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070464366 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089379399 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071717549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071729589 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070300001 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070462083 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070530789 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0699896 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070169296 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07111572 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070593239 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109757109 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065687713 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075844283 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070310174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074094791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070269776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070328519 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069996155 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069832427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069889139 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070812144 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070009187 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070723537 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07436379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065337473 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069516722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069744847 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071072284 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070088719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074033562 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070015637 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0700833 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070661799 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073827778 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069681732 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059508851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069522967 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070225811 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070267793 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065314097 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070800364 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069868374 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065475154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069901504 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069758258 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070982661 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074514024 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079781542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071192256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070287614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071176266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070301434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070247182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071381518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079933306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071720529 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071504638 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070338862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071634529 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071291728 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079714886 seconds)
  done (took 5.798590794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07696664 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068082993 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079607992 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060517042 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058597904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06902906 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058751171 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058811758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067766623 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067719551 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069310531 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069417947 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071561227 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069266722 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069407019 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071777965 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069203791 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069047765 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067347921 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069558097 seconds)
  done (took 2.702245312 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071707985 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076718421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064802101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068841189 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064317138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069143194 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063248302 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064999075 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064490688 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064612012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071190161 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071006703 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064658955 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06936424 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070413503 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068735322 seconds)
  done (took 2.416790457 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06618064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068397386 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067392621 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061621242 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063908793 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059485856 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060244044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058363415 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059425176 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07299436 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060352414 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071046078 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059969223 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058703132 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059540412 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0661317 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059333466 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060101913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06016428 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065772188 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066784852 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061606987 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063507496 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060649136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065337694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067431989 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06230841 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063159066 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0606567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060526028 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065865509 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067174522 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059787658 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061096366 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059022043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05997492 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060082816 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060913411 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065723979 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060002992 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058321558 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064372466 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060053267 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061104666 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059046835 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060837161 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059004275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065710446 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060322506 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065430083 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059956468 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062293703 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060692085 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067487569 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063081931 seconds)
  done (took 4.768171198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074861697 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064554606 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05860917 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058379439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063773102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06473573 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064145964 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064027783 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064375683 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05847142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064505041 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063509678 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064339084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06454714 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064376221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064331984 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058298078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063835446 seconds)
  done (took 2.484691197 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070002052 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063351685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068715976 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063567059 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062987452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063472259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059109913 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058822589 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059063323 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063217019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06322458 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062903553 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058842269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063056897 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063835618 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063121147 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063064835 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059326393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063288916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058853871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063053881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058942208 seconds)
  done (took 2.708300488 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086158885 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080721318 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123878526 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07593482 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08432169 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068429513 seconds)
  done (took 1.855346103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088570724 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101614244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063424446 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063367933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074762596 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06758652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066653248 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067251144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074533954 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073365473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067367053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07491148 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074999949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069721945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074653323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078017571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067213846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067320656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06361402 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077739724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067288109 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074667965 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067791824 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067027952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067066899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069842228 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095882835 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072956452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069543931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075030256 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07815351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067172853 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075140991 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073225332 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06379928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07503581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067502863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0784431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074754979 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069965232 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063721129 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074997188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074851828 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069943267 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078615275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067989228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070483373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067720067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067720525 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081559888 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075274591 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070039055 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075032582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078571426 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078672604 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081893443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073377643 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069960994 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075340916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073333345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069943816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074970743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07011685 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073016476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078363312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069623531 seconds)
  done (took 6.146721957 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097007948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064321252 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067302309 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074141528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070236864 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067414697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067501714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067349178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067294711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063959091 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102798705 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06831687 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069795278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070062064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06764632 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067231216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067222195 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069857763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064600805 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081518261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067493612 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069766871 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069938239 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069868684 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073487143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078487605 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067541944 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067689081 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067195034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067247567 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069870129 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069426389 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069699575 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063683867 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069822711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067453985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066983701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069734367 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067420994 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074861366 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069994031 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078336602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067775601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067230998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073157777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067575013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067212879 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064154604 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067254226 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063694582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073313257 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073701903 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073211106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070035052 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067700713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067830793 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067896793 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068038425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067664398 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078681915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069770663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067543253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081359079 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067739182 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067659361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069974931 seconds)
  done (took 6.000265634 seconds)
done (took 123.47095487 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206979056 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179477825 seconds)
  done (took 1.701143108 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071189775 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09338772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072258162 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131041455 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06608136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102492522 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099210466 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070137505 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067069713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067086402 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067389621 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070315438 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13351426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066160515 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066959903 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069841404 seconds)
  done (took 2.653291006 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101900336 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178122606 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104913462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065534547 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105205984 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07369902 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065615562 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077189916 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069417468 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068611448 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073514969 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071418103 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068281848 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071232333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069787029 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073276064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067968936 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073205956 seconds)
  done (took 2.828435246 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.090736834 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083345571 seconds)
  done (took 1.517180455 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154758719 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100283234 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139096562 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.318652863 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.138167085 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281282933 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13055953 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129359554 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11167585 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122181595 seconds)
  done (took 2.962038995 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098516145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163423258 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296966153 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11553413 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072084196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08460885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117275766 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077763452 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077938039 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07702219 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076949773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07581825 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093969053 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073286271 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072799614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073184671 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098212687 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072011045 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072050938 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073119599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096966631 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066525489 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073395365 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072244963 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074831643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074749514 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067250643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065747882 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072969639 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072243371 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075705972 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.082159042 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074942437 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101449722 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070516406 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102394163 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075849545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070692498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072157142 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07028501 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074241962 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0743385 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07418723 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073437087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067030058 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072042399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067597025 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06558999 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076726465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067242469 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07647514 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075498865 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09942411 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067207629 seconds)
  done (took 5.892038628 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106037629 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107312968 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071867602 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114189448 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106028943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070626628 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10476737 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09805907 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107195054 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06972511 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067626893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069774634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079852043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080899317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117003518 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106630667 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07274641 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069892792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106888771 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107043104 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067515278 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101636856 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095940626 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105908764 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066626823 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069304272 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066112716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068775907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072935671 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075301404 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068020992 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078533076 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086288892 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073761837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066199642 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066716016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066472727 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076737538 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077258721 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075990821 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075055919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065626606 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066958648 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068210684 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068694658 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065641857 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075492928 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077189004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07598745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067542742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069164275 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066712261 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068163614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076882075 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074659401 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078165009 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076383646 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066541451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066830586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071908294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077125017 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076862685 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07763207 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069331601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076345886 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067230694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076968078 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080750601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067618029 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068729993 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066603119 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067376227 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068134528 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073643434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073956248 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069073179 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067453665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066931149 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076709084 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074654091 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067091499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073629328 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065750813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067131858 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068888209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068512523 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073961644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077468359 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069531523 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067101181 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067603333 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067221938 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065759848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073167637 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077259746 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078846363 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074944712 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068082851 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075210179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07403234 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067996346 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074430156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065638271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067897809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067239253 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074266592 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072463645 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.2083741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068689196 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067509987 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075224617 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077741199 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0676713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075459086 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076827 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076049763 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066558944 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080585278 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067978868 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075899729 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068004693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077125115 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067791474 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076785255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067957954 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06682877 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067300143 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075904442 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068801658 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067124298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068433202 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067377565 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076253902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079270772 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070167683 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07510823 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075231657 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069349975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075346565 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067352068 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074893305 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068390148 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068191715 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065556578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078487944 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067091514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067223172 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067515043 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076932397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067410931 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076415305 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074500476 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065733801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080209352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076882264 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075293152 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077738161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070169036 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067281064 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067038035 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067702329 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074270335 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076551386 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069432219 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066990527 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074685257 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07603339 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066075228 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074942119 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075170186 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075064087 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067855708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067729251 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077558169 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078122447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076571859 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07504067 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075729581 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067864803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074500766 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075012781 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067199242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080826592 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067308828 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080838608 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075816659 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073986557 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075464067 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077359995 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077474068 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077564691 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081594318 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066652536 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067084617 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077034105 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067152176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067808314 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075918391 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069112195 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069118457 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081416817 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065784745 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075866857 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066234772 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077049697 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066042084 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068732237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080577446 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067296352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068310715 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075843776 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066226809 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072568527 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075528174 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071654765 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063892171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067949096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074504642 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.211952647 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06854676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067845147 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069510923 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075633776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074192694 seconds)
  done (took 18.236301031 seconds)
done (took 37.15020384 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207296587 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154702461 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190266892 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112815018 seconds)
  done (took 2.105651989 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09616547 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094888463 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077792248 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062110316 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083287246 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061766108 seconds)
  done (took 1.857606913 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275165285 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19592218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17284611 seconds)
  done (took 2.018914362 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212770917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19322355 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45336251 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286443014 seconds)
  done (took 2.617399772 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131431091 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079531162 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061247342 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072217275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.113474803 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145426516 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088546976 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112001945 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07096423 seconds)
  done (took 2.314594212 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133453548 seconds)
done (took 12.430782033 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11469931 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094462132 seconds)
    (3/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.205582807 seconds)
    (4/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.167380631 seconds)
    (5/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070666234 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073782414 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064435529 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090203316 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179686571 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.17509428 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 0.171301704 seconds)
    (12/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.255707255 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072447488 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.193824404 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089856725 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.21418723 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071609522 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075859848 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19272721 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07078086 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071606995 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064252343 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070664355 seconds)
    (24/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212502187 seconds)
    (25/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.136550457 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064703618 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137830055 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073946599 seconds)
    (29/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.179677754 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.211667104 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064403348 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.177352711 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.138138211 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061365045 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.214840398 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073051907 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193754716 seconds)
    (38/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070595892 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070378955 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071549842 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.08582628 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070714522 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061068576 seconds)
    (44/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061829523 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16675872 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087424583 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073318048 seconds)
    (48/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07474811 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075181825 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153848856 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073941318 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.149328269 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.156749807 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172310989 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.142834663 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133227658 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 0.127296506 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.172950443 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.06327466 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088845754 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074065207 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078098071 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191965325 seconds)
    (64/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063755945 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.183345883 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061660951 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071629247 seconds)
    (68/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.07182317 seconds)
    (69/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206149337 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062410324 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196967337 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068639026 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070597321 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060767254 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109425082 seconds)
    (76/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06046649 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082877884 seconds)
    (78/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068112506 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066667564 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072180605 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.127079898 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117839867 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.294295715 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086204597 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166252858 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101028304 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15884348 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071786522 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079112877 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117925703 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068306652 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070801598 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07318478 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062535245 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166261496 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165304409 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120375379 seconds)
    (98/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063616382 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062555737 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068736865 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.137512479 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076738755 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063422763 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064957731 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.192724511 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204003095 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079025665 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084855978 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078544853 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182052266 seconds)
    (111/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.158060729 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069740555 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096540708 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061245884 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073021284 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070661976 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072356223 seconds)
    (118/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.135731128 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.13459004 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070872807 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135735144 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063495756 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070559767 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142199019 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070349561 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063113044 seconds)
    (127/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091501785 seconds)
    (128/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069233538 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060985797 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072392049 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061704941 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072997902 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062031182 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064169318 seconds)
    (135/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07330598 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114535979 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072736713 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.160702772 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06357151 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061433608 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074450943 seconds)
    (142/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070612003 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062335976 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121030645 seconds)
    (145/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.201272843 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076170258 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061057347 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083716212 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068972681 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064219669 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074058774 seconds)
    (152/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062686136 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062861602 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060900407 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068929328 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089307659 seconds)
    (157/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.182334588 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 0.236455553 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073140922 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171132342 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062651355 seconds)
    (162/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063802487 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068749012 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169020912 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061445273 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153363833 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140138884 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067512354 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063608287 seconds)
    (170/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061580729 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070930985 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061680239 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062204091 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062653857 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069094672 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063387119 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.192071282 seconds)
    (178/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070133752 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071037236 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061366614 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062822158 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061285581 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128902664 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066654915 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060838926 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150298022 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075619997 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065667725 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060559831 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.061045126 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060222071 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.379641765 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157675836 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07020052 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064313246 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070066408 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.0633004 seconds)
    (198/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062832819 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062148189 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062962268 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061818001 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062877313 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063986835 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06340848 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073668603 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061521358 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06943926 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08943124 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0619201 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062871137 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062387873 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06261129 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137504677 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167507036 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073585616 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073937511 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087282499 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164889543 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135981259 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130781914 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062822272 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085825025 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08371745 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.134774306 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064817244 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062143739 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061872734 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106067702 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070725414 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160076127 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062022735 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061961887 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062307337 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068988105 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0625786 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130471566 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08400888 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088276901 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061785635 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063192226 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061699139 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075117529 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06238331 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143210932 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111349983 seconds)
    (246/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061720106 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06651578 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063494167 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060983839 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063565674 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089200667 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120256854 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066021505 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062427685 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063327772 seconds)
    (256/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075625164 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202102868 seconds)
    (258/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062083586 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063181871 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062831656 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065815247 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063279035 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061919248 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127450943 seconds)
    (265/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066732276 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069873003 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063383683 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069007791 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061393357 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062799928 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073995914 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070037696 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068624977 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061870997 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061391183 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087108618 seconds)
    (277/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06356023 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114771827 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062700331 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064508756 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122844249 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074160042 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122470447 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061657319 seconds)
    (285/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08958431 seconds)
    (286/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061556314 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084871575 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073104796 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062729561 seconds)
    (290/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062316689 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158641259 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061928773 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063740455 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086468109 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083535316 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061727498 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068936114 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116476371 seconds)
    (299/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.061882912 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062894723 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06173684 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128636097 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063008739 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060775111 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061716572 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062485431 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062316451 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062481437 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062862214 seconds)
  done (took 31.621014618 seconds)
done (took 33.020076917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083877045 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088034871 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070735286 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083056402 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079406869 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096016504 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071568321 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076312326 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078851108 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077881983 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07822253 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069746622 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072232882 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072681234 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070063444 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085978941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076532515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071575846 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071582942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061557897 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071097976 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062405128 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061970738 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06902863 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074041114 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069556868 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072889608 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071825912 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062535872 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062522955 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067006869 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071219604 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064668429 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07537573 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071681844 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07055843 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072109753 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075225851 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062307729 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062730792 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072557398 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062627208 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070840055 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068793603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067399182 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068822599 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070969615 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074542575 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086505083 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067017327 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073254411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074192552 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074341522 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067863593 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068020939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07147168 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068228197 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085759013 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071398134 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066867458 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07242987 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071296264 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069207994 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071389897 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070678664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073467563 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075309281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069124675 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072573725 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069411668 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062274103 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070959134 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066853612 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061854817 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073639084 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074631765 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061731476 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066685429 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070787544 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071048351 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062206171 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066369882 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061498972 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067061069 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066015347 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069005817 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067841126 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069823011 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061496147 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07113004 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069551787 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069963392 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061472479 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075558977 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0624952 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067957332 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062420199 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062580616 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061682179 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067394306 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061955963 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066245435 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070858555 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061632393 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066966395 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075715454 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062094947 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070256496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061484598 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062069341 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073787902 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072880875 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062456814 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066255375 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062124917 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067493098 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062018911 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06224295 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062102548 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062316014 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066969539 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062011061 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066520109 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067496306 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075858775 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062204946 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066767814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067085693 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061939841 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068447834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061852371 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061620068 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060880553 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075777663 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065704 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062082093 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06701393 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065856091 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069428641 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060390009 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.210096201 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069542864 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067533562 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069294179 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062181327 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074304447 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066685179 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066014352 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061509159 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062476987 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061384436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062542606 seconds)
done (took 12.152200713 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063377109 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105081444 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071684155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.0796821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075441383 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063117455 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068050321 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08222498 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06581409 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082868068 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08397124 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083136276 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090984127 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062031161 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062837241 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063424418 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0617452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069347816 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078778392 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083612236 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092632974 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06270891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072765277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078025508 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074231584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080807317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064032231 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063416151 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065105188 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08125445 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086354741 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062572567 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063462391 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078446296 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077085287 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072404961 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063458705 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067609579 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063248895 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062410057 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063642713 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078271892 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067302568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06974883 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063716984 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063478961 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063652767 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067463118 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076688568 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067442699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071348394 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075997716 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065515145 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063325538 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061851433 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068240939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063448364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063496219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062937982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063089049 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06272591 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064747613 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063631794 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063982503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066707368 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067191427 seconds)
  done (took 6.111187384 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080898902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091077495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079421386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079224599 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061971987 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063375286 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063211708 seconds)
  done (took 2.013541979 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063816295 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075735887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080024744 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078980919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072912622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080953152 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063369822 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092980289 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06228238 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07568252 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110727224 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08043473 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066692767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074923303 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062774628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071062535 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063077446 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070718493 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072320019 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079491664 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067823296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090220181 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076257458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064527363 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083865005 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068528582 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062887675 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063175871 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064225164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064429748 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064210076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102153439 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068032569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075178447 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064683552 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062990932 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069675979 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066427978 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06685435 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071841446 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069513596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064957635 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062004333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064638504 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065643569 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067381129 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062074004 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064836833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064440653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075096796 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062193947 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068111854 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066769955 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068687367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069069084 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068121037 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071194007 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064991748 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075403144 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070937921 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064419605 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072519214 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071808727 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069762552 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072162966 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067675163 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067989381 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069382612 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064358119 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065643091 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064901217 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07208923 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063438317 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06563077 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066950446 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06501352 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067983306 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080014277 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079780695 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075901925 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065436619 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064841525 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067428021 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079491632 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068312923 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06441016 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066511681 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062221705 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068087037 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064902132 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06910236 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064511781 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071581461 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065994991 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06705177 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072521187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063186796 seconds)
  done (took 8.276400392 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067012968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064586761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066722926 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064242673 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064569497 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064344806 seconds)
  done (took 1.912785347 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088362454 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065274001 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078264344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065083696 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099183527 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071623823 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072428259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07392622 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077457604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077352562 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072192408 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075350831 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071218482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066728143 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071888762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066431269 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071971905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068782386 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076595478 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066961385 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079152243 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068933946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066874801 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076427913 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067179924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065533085 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06405396 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076805385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076279981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07597651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066120936 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067329763 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071561585 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073208945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072237002 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071533793 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064598124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.06985601 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06618296 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067062163 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074237328 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066372057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06720125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069940658 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073309957 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071581723 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0698928 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069158973 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07219829 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070337608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070230033 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065812288 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067037881 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070157896 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072256068 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073998568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070083557 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071733312 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066108838 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071799523 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065353283 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067623351 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073271512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067293123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071087016 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070239703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072017351 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066784588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066414537 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06493215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070172095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065141848 seconds)
  done (took 6.59830527 seconds)
done (took 26.397303425 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.988528977 seconds)
  done (took 2.458438821 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.565692106 seconds)
  done (took 2.063433073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.656230169 seconds)
  done (took 8.160593263 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.302053891 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.340524494 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.709742263 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129873622 seconds)
  done (took 3.020736989 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710774132 seconds)
  done (took 2.222603291 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235062955 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222651385 seconds)
  done (took 1.983246689 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348097272 seconds)
  done (took 1.851494581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077255137 seconds)
  done (took 2.580222149 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233245033 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160756605 seconds)
  done (took 1.910485584 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451018596 seconds)
  done (took 1.961700109 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.239811906 seconds)
  done (took 5.754887766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234184117 seconds)
  done (took 1.787005155 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232708578 seconds)
  done (took 1.745352923 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.725021384 seconds)
  done (took 3.235222716 seconds)
done (took 42.252365805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080749041 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082707504 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08262981 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078809846 seconds)
  done (took 1.812559613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071893678 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067088811 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071415661 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071815602 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06841852 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069672572 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07061274 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066840362 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068453253 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067238957 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065533449 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067397976 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070167938 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067079585 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.06990233 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071400408 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066998945 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067135445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069862291 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067184168 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07020443 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.0671962 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065021229 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066350275 seconds)
  done (took 3.159307999 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075406287 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069552716 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071836274 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.06837743 seconds)
  done (took 1.807865993 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07408145 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083614804 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084798634 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09067485 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073364594 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073848966 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081928145 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082921262 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063088513 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085992366 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065439363 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063769647 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063459946 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084221215 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082023207 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060593619 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061939895 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074151548 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073293746 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075623249 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064418698 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062751569 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073740131 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073421664 seconds)
  done (took 3.292907029 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07766079 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06270196 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078032664 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089359967 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09171297 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062610337 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079143189 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091424645 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138023801 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062804171 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06845062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062839508 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103720247 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064267638 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079050175 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10812891 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111713145 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066692041 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095650681 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062388289 seconds)
  done (took 3.186516588 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074323502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066184986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067080115 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062413591 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073497143 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070144898 seconds)
  done (took 1.939557125 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065814045 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064197079 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064077172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063573905 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068976348 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064044057 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062806218 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06440943 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064141862 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063787788 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063747805 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06268221 seconds)
  done (took 2.293178477 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159550159 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066894904 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068254923 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065613884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068609113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063019274 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078227142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065607843 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082643201 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063853007 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0640401 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066043676 seconds)
  done (took 2.434241198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100134723 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129936355 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095939928 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071291526 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169796201 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094340844 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089344326 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120492717 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093669451 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067206689 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091055645 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13652506 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093996177 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097080785 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080505956 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124889076 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108844593 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086532789 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113257865 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081127189 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068781477 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132588759 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068290668 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091451438 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100171284 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096213807 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109889815 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132662324 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082862362 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088657177 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081413237 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073215472 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103660395 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082812957 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096629678 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092238199 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097295396 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084999469 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085160909 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118866985 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159750146 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099819972 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099432735 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134338086 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077395707 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107849775 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080305985 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098673992 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103508486 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092342746 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073932445 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090687238 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105623341 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101285388 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080997669 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080305368 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116846441 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096915255 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092413251 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078071026 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104976726 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085187854 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251231787 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120101945 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140120451 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10133474 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137193539 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122926774 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096396981 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087233592 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090667693 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074627804 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110515372 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096445254 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136183377 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108802028 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098854067 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093303279 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081967981 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106280881 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114093541 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094586851 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094545708 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147357122 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108612868 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09044769 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093415539 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140425802 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069940916 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148315429 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088344388 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120100505 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097216573 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138706846 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090949211 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083366706 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105958001 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10386836 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088586514 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102214437 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083794626 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11374652 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09180917 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101572807 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081287443 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089442425 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085854586 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096538339 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074107741 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104512041 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117901255 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113827464 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073567163 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107241502 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085115717 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075083543 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09181712 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138731085 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081697487 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073563916 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148099974 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091003791 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11444861 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257827596 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084262859 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11697404 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13729119 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092134963 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090362577 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075887893 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152693924 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075052467 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117103282 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080054247 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101265096 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105171267 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136987776 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139386018 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095790546 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077124996 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090420919 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105571871 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085629312 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084612156 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075851087 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108901659 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124932151 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099181742 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079701951 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091272493 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067836485 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114035148 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075717486 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083372246 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095939017 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087081806 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089046788 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143198883 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083781163 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108242125 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097347452 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066144113 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091211768 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158311266 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081818194 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110409351 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116288635 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083242723 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066763577 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096940261 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072431044 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10873283 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092889442 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106394416 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077724889 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106651995 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067688689 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073457644 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133624447 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100310851 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0876935 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131192246 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103561129 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087132326 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102101504 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.241342669 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10006744 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103105217 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.107717799 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106222653 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073720366 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129974257 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091390249 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076567877 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087282124 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07876301 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076760566 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0992943 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114360825 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088446185 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099623196 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102364606 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090427336 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108281384 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088470766 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077776329 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132048728 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075005756 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073549405 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087066876 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10523774 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087289215 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134016448 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078566774 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13674995 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092294766 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080953194 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116539101 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06864938 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069038708 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081050302 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091589141 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1167295 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078281366 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077819039 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118851901 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133073786 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097386012 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103880892 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06724195 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090370323 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136526578 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112843858 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081334488 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110569166 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084190436 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130346019 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097347854 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120179018 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106008995 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110933881 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091140106 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080238151 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072552728 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086404083 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110679947 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08431951 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080872728 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066364411 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072814556 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092169182 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089730733 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109738933 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08606706 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285874727 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07254577 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103623758 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107857385 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107244487 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090282686 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095465722 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09112145 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091405454 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091447935 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091423649 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072821363 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127666058 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102678097 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077575088 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088204969 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095344359 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105784367 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109815763 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110166808 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092765985 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105907478 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121832112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098071254 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082065089 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084169308 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094577886 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084389621 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080979548 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10454123 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112975334 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098050668 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108783629 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094113827 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091489774 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107283701 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092865729 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08833763 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.118720635 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153718665 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102247823 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103813742 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08511927 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107584084 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105151036 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113443053 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111073435 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109619041 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069896988 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074497338 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.06950236 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106652232 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078628361 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118888425 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075990603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107092475 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098127141 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080038384 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0660698 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101538418 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092111215 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081018791 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122062002 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111916382 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071642792 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088677134 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103334461 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23309282 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12607048 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102642766 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101609333 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071236441 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091632992 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073549639 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109563426 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10073563 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07713567 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075348616 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068991441 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106537355 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083196922 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109928192 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090697103 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100868465 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119562549 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136362904 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086593503 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096195608 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118302134 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112982135 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081359605 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111789063 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13549762 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120812692 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080696685 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083524846 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10659766 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105851179 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101819895 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076047693 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078813727 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109531344 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115618507 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067307439 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084309561 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070115015 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084275608 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113849771 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096210579 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082050967 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11807919 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07413138 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108209934 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095928352 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123371124 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12178633 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147681505 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096850161 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084704114 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076321393 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124957678 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070638362 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118501239 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113898429 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087994921 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067793015 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08347343 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.094612167 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626612099 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106808809 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07394566 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133040194 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08522253 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267869829 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085128289 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119566561 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090768293 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103038104 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092337826 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133036158 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082004792 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109220099 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172863225 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1121151 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107290733 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073122156 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085447566 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07281504 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078064424 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081147248 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087921364 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108809381 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084562817 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105044355 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078938714 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106329828 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091099466 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088494804 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09813129 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080636861 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139766483 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087077138 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123425087 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106942037 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078041065 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074040572 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08664211 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101584348 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081661199 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094901674 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078367529 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075997441 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154800024 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103224087 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084226155 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102145884 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091083044 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.087694991 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091413261 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117219838 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110755435 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073017364 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087499421 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104196183 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078500308 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07407517 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096640688 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069419893 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090046451 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100522368 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097186064 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09103547 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104430071 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077502697 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08742754 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109152781 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084335071 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075578514 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074989275 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075385336 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074505627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254466791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109556301 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115675747 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109488071 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091587486 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095959624 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078659751 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.21975489 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079248265 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095425192 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104960575 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074829958 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13063488 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088281852 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088567719 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096856196 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100902037 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153609701 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073392165 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109060158 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092095713 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110074232 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085688007 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107479051 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095575029 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09287852 seconds)
  done (took 50.320855222 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092453626 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14627349 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153998722 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077579071 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091297148 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115495425 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204776365 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188227592 seconds)
  done (took 2.716250826 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073332039 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079129726 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100547205 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080692733 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064019672 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072025389 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203341823 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079181741 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063512731 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093251084 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07447532 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065561531 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415855437 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063049076 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063746147 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073099551 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064665992 seconds)
  done (took 3.354605632 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363330044 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.5995374 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340227644 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072615906 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.930069567 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086595517 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151199184 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134608407 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07750142 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534043055 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368322237 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126617606 seconds)
  done (took 18.41853528 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073366497 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07124077 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076198237 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076089635 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071061674 seconds)
  done (took 1.99186396 seconds)
done (took 98.258152515 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078457236 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164443134 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065222197 seconds)
  done (took 1.892628041 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080997207 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07927872 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078698745 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076588043 seconds)
  done (took 1.947547083 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071615708 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073369428 seconds)
  done (took 1.770818722 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225728074 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161090491 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091258727 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080780237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077601504 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077944456 seconds)
  done (took 1.869584841 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069665448 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069570278 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069106486 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070491086 seconds)
  done (took 1.904042627 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065124583 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063965188 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065708212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068321444 seconds)
  done (took 1.888084944 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081948906 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080815279 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075145245 seconds)
  done (took 1.864203421 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.093455714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093894285 seconds)
  done (took 1.8180315 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077586762 seconds)
  done (took 1.705275541 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086005946 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09520916 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.117182329 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.100102016 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.118610471 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.100167016 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077185492 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077412703 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072391239 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070567867 seconds)
  done (took 2.54474602 seconds)
done (took 21.388203401 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076461838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361173203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35826158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083715403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66914987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353625933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966686589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089004496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097112906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066357085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082689801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646328725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958693078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324499531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94527055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319540785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647905581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06561712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065101639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066308586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951330928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064920322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065531972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065406947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679245514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371412854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067554586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3195768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065866216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069020373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354420443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068105292 seconds)
  done (took 15.98628281 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068243997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118103325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070469622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081352638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068333686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067114003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06879794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0667947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106753207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066700778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083309514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065541573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069952691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067399043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086988412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066441351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067626392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066867998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066334892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069910098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084855252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066107148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06719382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067159374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06712344 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080244334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06809913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066360112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066525663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069071648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070391062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06866648 seconds)
  done (took 3.979547781 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117591184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12446153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071244496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104432026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116321837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067582168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146113685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089348014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110930057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066579262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082872034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065960538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10155825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068750899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087254332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067190755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068515905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066909448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066599062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068149194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084985469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066537248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067396249 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066945716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068135353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081431186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067918804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066498618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066756032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069123199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070797935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068660039 seconds)
  done (took 4.242140105 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067033275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069685453 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077306865 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078306797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06421284 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066342682 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068112731 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06485184 seconds)
  done (took 2.196440125 seconds)
done (took 28.041925687 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.0757546 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064776484 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068628127 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084132714 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070249084 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068556718 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062098854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071143346 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069090664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.06926319 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070193391 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063533757 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067130502 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062608182 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070255842 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063865198 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070751757 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068185408 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069259203 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069775557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066404168 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069680926 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071680276 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068995626 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069112145 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068920525 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073069371 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069399704 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065241042 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066857264 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066361785 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075925939 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070739861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071254073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064071082 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064704867 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068836499 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066079023 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070576598 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073402802 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065860848 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073177048 seconds)
  done (took 4.506042085 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08274317 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086884099 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080486542 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078694807 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096563275 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078752827 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084683193 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07574891 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07485521 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083447324 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070735503 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077516914 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075260311 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069756656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073692053 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071770901 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076584159 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071599048 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074795572 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075055432 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084700006 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069459844 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077008454 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07604777 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071498957 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077519207 seconds)
  done (took 3.677940786 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070840753 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081329672 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08897158 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144864947 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109939411 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076735221 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077794446 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088926961 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094321693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065327752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068932827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08983077 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08915317 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071291045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104666523 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080853862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079904484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067098111 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071637004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093768426 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084701995 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081989122 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091135568 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08029782 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063865763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066632675 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070927891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078051354 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071520713 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07562549 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068934384 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067848741 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065047845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075943628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068838783 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063685801 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088474215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076225867 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07757961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106767707 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073591822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065875272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092154678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124826625 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064343286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068160839 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067968076 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076108228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065274682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092466462 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079173984 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064088479 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065161951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065337593 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06539285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07986248 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066132874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066217009 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075369012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07032424 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086171606 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.06977194 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0840342 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064363344 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076153664 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06557121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065767566 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063223362 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094890956 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070748911 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112862233 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064955141 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063560383 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075976246 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075121974 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070379015 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064012822 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082567703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075387793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067862657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075076126 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067455113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067915595 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095654651 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06484295 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063651003 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063172273 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067938718 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06702158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065109564 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078436668 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063798031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06752024 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078856371 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064158561 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064935244 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067681793 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066536371 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063918118 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077655588 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068198237 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06568985 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076010319 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065088133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067567046 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077576543 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071875938 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063794541 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066421808 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068031025 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065644131 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068663038 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067420263 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066634765 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071361887 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071274344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07010763 seconds)
  done (took 10.445277247 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159467121 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150641899 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066806399 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143214171 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072193842 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071039885 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143972458 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084062204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065297181 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065744994 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064401813 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094445213 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090724901 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102356545 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070336737 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065385334 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088361371 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097096298 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145244183 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141619098 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088097507 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072262655 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.0671467 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066221751 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066408938 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073565 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083223125 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072631971 seconds)
  done (took 4.267750554 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076307291 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087965133 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068917016 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074858033 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086156272 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065740177 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067001937 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066486833 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079720381 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07544957 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065280043 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069629288 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069219275 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068157508 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065857002 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071471179 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072156447 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064831591 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068897364 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070110238 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074610037 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090740672 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069603974 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064378245 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067063142 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064681419 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074763457 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078022365 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064986949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079661962 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063095349 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069241211 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078747194 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065834595 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064609301 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065116425 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064721316 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064895407 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065324634 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063545035 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063730785 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069802805 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064276048 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074456682 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07864205 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07192408 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067419774 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067392963 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067777154 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062397311 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067629021 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067825451 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067157006 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072437761 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068697877 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067615744 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065625774 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09321657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071054556 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064260376 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064290238 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06358555 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067131071 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075906536 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081052598 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067267763 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064127205 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065047833 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070377027 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078624103 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064179538 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069683134 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062729967 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065403741 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067307728 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067269676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065753645 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063717528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06473676 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065121472 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065344743 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0648824 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06501668 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067528646 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061723982 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062854857 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065191963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066799802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074666486 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064373432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068463514 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066024058 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06392314 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067578573 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070427374 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067584281 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078157665 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07744946 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065602986 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064068149 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077681616 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067701948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064524419 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071513943 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069427575 seconds)
  done (took 8.954636235 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087711031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06655465 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080977367 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087457293 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074981199 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070325766 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075320913 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066158786 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080716707 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064315876 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073343134 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063655173 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076313614 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075347009 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067237353 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075942527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067852088 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083821396 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079396805 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063980519 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073682798 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07679636 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077007557 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079142888 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078587989 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079524964 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076766987 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068037079 seconds)
  done (took 3.788380388 seconds)
done (took 37.276907661 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.726357984 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.981663795 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.719309022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.955860579 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.868159421 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.738378375 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.830880803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.714381693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.907302294 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.773210331 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.0349484 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.178611184 seconds)
done (took 65.136653118 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.799309314 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879795577 seconds)
    (2/2) benchmarking "String"...
    done (took 1.96955882 seconds)
  done (took 5.504704102 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.946150966 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.463679549 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.982311222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.714872421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.717424123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.16814425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.508939733 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.16651559 seconds)
  done (took 30.376248151 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.853632658 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.948515953 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.395057661 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433900427 seconds)
  done (took 15.333294393 seconds)
done (took 62.702293341 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.724749632 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.714558523 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.789099245 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.739139359 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.723577775 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.716336355 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.713922013 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.717297902 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.769727638 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.721038988 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.71914625 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.732061501 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.717241877 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.758192877 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.233656859 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.763579843 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.728890182 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.719319684 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.721825026 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.724110414 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.717724133 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.720842878 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.179464392 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.869149515 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.320771792 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.874628737 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.067731177 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.086915432 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.726466825 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.71271266 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.909046377 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.024959795 seconds)
  done (took 202.010961253 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.718712652 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.642614339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.714228246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.722256511 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.082512691 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.89547007 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.824003763 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.129161835 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.722390641 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.722151216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.882986129 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.718122359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.892329047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.705527302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.755123568 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.808814049 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.891275706 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.952862493 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.753891528 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.883206086 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.746846598 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.774751081 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.702006067 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.870893881 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.726273819 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.817785671 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.743967089 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.733072746 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.907910236 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.871849596 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.728214529 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.732598409 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908413496 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.585777704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.724714484 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727964602 seconds)
  done (took 167.374338976 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.904403732 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.726078963 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.718539136 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.717561259 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.773957863 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.840084081 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.717924323 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.386122087 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.72628303 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.306192618 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.714782287 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.723023618 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.71922272 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.719881989 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.732063969 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.812623091 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.718635767 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.734259566 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.719697652 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.743164744 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.71833935 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.719208414 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.718744054 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.718960105 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.71925142 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.719257482 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.719995729 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.718384586 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.949854322 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.976968759 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.720730791 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.720962697 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.371452565 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.732532541 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.930265356 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.722051328 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.814466254 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.773577319 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.837240068 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.720511434 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.718076676 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.940564531 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.808366139 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718428592 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.720723695 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.785263021 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.729761911 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.718348768 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.720259407 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.725882226 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.786972599 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.991795383 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.721441754 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839197431 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.219129914 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.719849665 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.720282192 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.720039122 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.330664625 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.723180528 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.722294966 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.726302344 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.72642626 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.720445693 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.722321693 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.110273866 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.790308976 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.88180088 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.011465976 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.723497641 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.299725921 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.857293911 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.719718171 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.720768282 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.721523609 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.725166825 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.72172174 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.723988075 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.840560419 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.727388271 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.859308957 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.801947684 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.839119285 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.722912534 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.733158404 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.564462371 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.792802265 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.757401605 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.549027395 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.722091831 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.095755546 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.507726421 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.723433919 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.721711049 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.735804452 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.721493849 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.721451544 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.724568837 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.804286365 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.721660129 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.844740884 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.443783811 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.186695283 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.726494395 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.722332844 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.731931984 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.723354016 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.80555875 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.842100388 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.720832882 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.791068594 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.72630145 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.724401401 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.818286978 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.722278827 seconds)
  done (took 394.847076722 seconds)
done (took 767.851693605 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.308597434 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.273849211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.373256591 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.290241465 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.264178561 seconds)
  done (took 13.169558946 seconds)
done (took 14.825147813 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.738255344 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.72878181 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.783367108 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.805681006 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.737127838 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.742831225 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.806240116 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.740407813 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.775869825 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.780724468 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.808991647 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.807097213 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.746258843 seconds)
  done (took 24.66039159 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.735217854 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.883631196 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.962213713 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.769168693 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.737741003 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.990505574 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.792143517 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.872057187 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.876581515 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.965048234 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.973438912 seconds)
  done (took 22.219327018 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.736361538 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.885145736 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.96200711 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.770182956 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.735464599 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.97800496 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.798232432 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.87179779 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.876611151 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.970079833 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.984801211 seconds)
  done (took 22.237494872 seconds)
done (took 70.776164665 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.728998163 seconds)
  done (took 3.387377614 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.755441027 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.892508172 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.732818565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.732265751 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.728841717 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.72874567 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.73037354 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.731190396 seconds)
  done (took 15.691104833 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.728919109 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.727554596 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.730999043 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.728492733 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.72825237 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.72965013 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.729998134 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.732727241 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.730384272 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.728975741 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.731221339 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.729494628 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.73083436 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.729951135 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.7317115 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.721274781 seconds)
  done (took 29.330284475 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.722553859 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.719719413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.720449268 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.720275405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.722317084 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.720650402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.722311403 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.720107436 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.721536333 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.720228749 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.720791134 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.721260804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.722256236 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.719992936 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.72425526 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.721684261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.720332183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.721006021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.72538376 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.72145486 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.720418472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.721684874 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.721176718 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.721260011 seconds)
  done (took 42.967382778 seconds)
done (took 93.045609217 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.462633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.443527236 seconds)
  done (took 9.56258253 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.724719074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.722518454 seconds)
  done (took 5.10756579 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.722464459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.723834859 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.724070618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.722605112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.722540943 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.722449769 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.723015002 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.722792904 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.724065165 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.720562816 seconds)
  done (took 18.882994945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.722145391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725161535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.724137689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.724473272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.724784763 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723124164 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.722945042 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724847443 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.723742501 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.724343469 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.724147643 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.723363184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.722761473 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.72170433 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.723996326 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.724941018 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722825328 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.723917079 seconds)
  done (took 32.684256911 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.723600564 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.722789184 seconds)
  done (took 5.103216664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.723415892 seconds)
    (2/7) benchmarking "second"...
    done (took 1.725193455 seconds)
    (3/7) benchmarking "month"...
    done (took 1.72454158 seconds)
    (4/7) benchmarking "year"...
    done (took 1.723855366 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.725655671 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.725218001 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.724041826 seconds)
  done (took 13.726886554 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.722907409 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.881827296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.946399734 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.58632083 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.726836289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.726586634 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.045076892 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.728008154 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.730391329 seconds)
  done (took 19.751622275 seconds)
done (took 106.471310131 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.517411322 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.722548583 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.977732831 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781799448 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.741708074 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.016961354 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.75527309 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.003988245 seconds)
done (took 42.173787839 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.722727726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.723280521 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.749312575 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.749253252 seconds)
  done (took 21.87924773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.731571811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.058504165 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.753859002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.579502991 seconds)
  done (took 21.797159795 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.114692227 seconds)
    (2/2) benchmarking "read"...
    done (took 2.084919558 seconds)
  done (took 5.869823363 seconds)
done (took 57.926321358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.733313649 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732069812 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733567503 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.734753486 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.734130078 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.733264254 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.733295047 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.734966532 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.733959892 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.734802132 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.732600538 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.734643959 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.732091916 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733608149 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731758035 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734878348 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733487299 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.734990885 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734438404 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.735901368 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.734646911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.733393463 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.733740655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.734007705 seconds)
  done (took 43.276264984 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.73514045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734239491 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.734585127 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.734904498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.735971 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.735842225 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734094683 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.736939805 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.735103962 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.734909966 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736469503 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.73697717 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.73635292 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.736147625 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734539305 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.737163038 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.735459138 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737167843 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734168899 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.733623809 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.735538766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735357088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.734714398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735674461 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.733322383 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735285142 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.734426131 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.736503793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736998323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.735040984 seconds)
  done (took 53.73097861 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.734231652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.73506491 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.734227242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.734966793 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.736227762 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.737061629 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.736543328 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.73515847 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.735491538 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.739934291 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.735443024 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.735567303 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.73684249 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.737414636 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.735086778 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.736025816 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.736975012 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.736240474 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.737964662 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.736600903 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.735293267 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.737165672 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.73705624 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.737363121 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.736486117 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.736454751 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.737039185 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.735139622 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.736602818 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.735850666 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.737180737 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.737746392 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.739553762 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.737532868 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.737385332 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.736584398 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.736112829 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.736752223 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.738334295 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.737511428 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.73738219 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.737732648 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.737955682 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.739754558 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.738210226 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.738401109 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.738258534 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.736944264 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.737945187 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.740511225 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.738317122 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.73638201 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.738667399 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.737389229 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.737902975 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.740941382 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.736981612 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.739439687 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.736613637 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.737692669 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.739515817 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.740393735 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.738328147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.737548537 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.73867783 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.739524576 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.740372846 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.739036111 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.738039506 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.737828597 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.738283389 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.739114157 seconds)
  done (took 126.761212615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.73966247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.740224578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.737989301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739988979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738319603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742187216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.738808404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740708427 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739468389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.740549863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741141896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743725365 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739076359 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741148074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739765367 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.739611735 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.744052048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740432071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.740104028 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74149503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740658933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.742021876 seconds)
  done (took 39.963047941 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740526847 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738967693 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740099238 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742166912 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741403833 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743079532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74174905 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73890485 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739136002 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742281456 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741249496 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744214546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740731964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741920116 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740336266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.742797003 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744044091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742056227 seconds)
  done (took 33.020756319 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.741378056 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.742469919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.742779226 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744487919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.742684843 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.740479776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740386498 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740337452 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.739795563 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.744574597 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.741878912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74236907 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.741241534 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741535328 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742054301 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.745187016 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.742509176 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742163882 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742795103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742425601 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.744594352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74365115 seconds)
  done (took 40.00513422 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740294136 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.742568434 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.74258606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74655939 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744537701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744685356 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.742263205 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.743819321 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.74188353 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.746729552 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743621085 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.741487546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.743035948 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.742821192 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.741785432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746023547 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741111819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744983101 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744230497 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746688469 seconds)
  done (took 36.544020266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742988654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743985302 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745627858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744339779 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743956001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.745397101 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744530154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744852097 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744892272 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.74507482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74448754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746827874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745446779 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743156039 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744723381 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745265777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745710684 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747774255 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745537149 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744801844 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.745171937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744632563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747703198 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745579372 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745650801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745581902 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746127457 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746212103 seconds)
  done (took 50.541853261 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746968007 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.746428184 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.744522084 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745424834 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.745499875 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.747083114 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.747672532 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.746810955 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746095786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748014612 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.74548685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.746191871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746661107 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.747088672 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745394289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.747296772 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744812111 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.746967339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746517695 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745982298 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.74768512 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747399733 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.745793799 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.747320123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746268816 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748875759 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747183794 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747359488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746492972 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746195016 seconds)
  done (took 54.073590929 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.767836344 seconds)
    (2/2) benchmarking "in"...
    done (took 1.766746406 seconds)
  done (took 5.212053823 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746926333 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745667959 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748957275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746975241 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748091633 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749241557 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.747725988 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747437122 seconds)
  done (took 15.657008199 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.748637119 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.751308222 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.748493813 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.748095568 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.748154296 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.754086034 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.749831619 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.748641196 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.750521214 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.748693455 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.751447564 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.751159149 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.756162609 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.75157847 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.750319623 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.750668941 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748965947 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752656248 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.750423584 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.75211403 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751066423 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750146457 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.749665474 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.751594937 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.748966841 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.752172268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757721924 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751944126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749737679 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.749630114 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.757354267 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.751521358 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.750273128 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753002558 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.750414253 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.750107437 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.756117681 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.750236096 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.750804352 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.750039755 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.752218273 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751631332 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753235511 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.757273001 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.750631424 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.751087189 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.751589138 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.751155695 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.751278707 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.758254558 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.757593932 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751208867 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.751961131 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.75455233 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.753706341 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.750879381 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.75168992 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753845066 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757832537 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756319071 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.753362846 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.772078721 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.760105879 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.750864841 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.752284438 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762846884 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.777252797 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.753432689 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.752763137 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.752188997 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760640225 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.752949964 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.753771943 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.750895142 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.763667866 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.760088435 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.752915024 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.751889363 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.751154508 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.751105349 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755202145 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.752257238 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753574201 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.754682231 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.761069205 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777147718 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.753297583 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.752652213 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.755278785 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.754385677 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.757865324 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.756779802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.75358614 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.753446067 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.755521083 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.755423216 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.753537913 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.753528772 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.754733067 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.761437011 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.75472132 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.754574886 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757881205 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.762878857 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.754123054 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.754677161 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75451571 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.754306226 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.76109622 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.754166317 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.753606097 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.753236279 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.75509427 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.757836086 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.753426576 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760039203 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.761734654 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.761714076 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.757358376 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.756528025 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.761040781 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.757415477 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764163838 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.778227179 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.755039547 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.759696788 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.759360717 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.767010362 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.758900798 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.754933837 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.75641804 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.7546982 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.75416516 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.75751728 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.754979293 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.756269787 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.7569023 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.754733625 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.756608812 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.757727549 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.757729088 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.757621311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.757992982 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.755876508 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.760163077 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.756552854 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.760196951 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.765518803 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.756136491 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.756993806 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.756159564 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.758248462 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.75898359 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.757408065 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.755538276 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.758799504 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758524638 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.757146543 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.758299587 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.757026629 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.756720314 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.758060547 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.761101678 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.756461357 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.757288324 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.755359992 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758217748 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.756860718 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75784175 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.756991832 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.76013827 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75682064 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.761196019 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.758709386 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.757321409 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.75800032 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758540682 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.75897416 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.761409759 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.769469412 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.760610023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.768156693 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.758499706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.766713298 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.759022918 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.759822931 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.760450951 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.758145985 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.758570029 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.757619061 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.75934834 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.761523737 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779885674 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.770002289 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.761346596 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.759324309 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764240051 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.763173049 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.76352306 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.759346398 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761753771 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.762265064 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.758957222 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.759123923 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.76100902 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.762448402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.759554223 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.761562694 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.763957326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.759927636 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.760241628 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.75967193 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.75854973 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.761963804 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.759325692 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.761348948 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.759012893 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.759863656 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.766645527 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763805032 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.759245205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.761332432 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763131018 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.760386316 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.761338732 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.761665922 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.766067388 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.759173203 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.760909171 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766648978 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.763432675 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.76216972 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.762211092 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.761059231 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.762603936 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.761266777 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.763136149 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.769642846 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.763398251 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.761017523 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.763910787 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.761814504 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.762620007 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.760681008 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764843351 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.761396671 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.761977712 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.762647921 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.760959021 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.7689795 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.76054497 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.763521551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.764266948 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.762719944 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.763406033 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.763891844 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.762218496 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765577154 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.770122454 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.766190521 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.764524442 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.765219918 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.766732524 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.763972821 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.767948141 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.763714104 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774819696 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.77327229 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.763733952 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.761958735 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.763845395 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.766026296 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.7626535 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.762337034 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769810362 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.764295704 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.763786929 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.766780025 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.763470593 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.764093337 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770103661 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765571578 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.768800333 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.765461551 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.764737715 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.763918495 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.762268156 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.7667316 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.762841269 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.765080367 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.768166848 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.764244937 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.765375335 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.761890612 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.771265239 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.764218772 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.766312492 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.772392804 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766230144 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.765093696 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.764929408 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.764127387 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.765100181 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.76618964 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.764732592 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.766518559 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.763314083 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.767986592 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.775774633 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.768299741 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.773493392 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.770565309 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774981642 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.763916124 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.765774646 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.767372991 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.767357757 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.774997067 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.765216893 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.765238117 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.772595699 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7655828 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.767528841 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.769173367 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.764417124 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.765674187 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.765086152 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.766007906 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.769269908 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.768284911 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.766182343 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.764612813 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.767889599 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.765833258 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.769819839 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.768746334 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.766718238 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.766942321 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.766640839 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.76550788 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.76509005 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.766003404 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.766394278 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.767432601 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.766564798 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774372894 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.766624933 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.767192822 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769995083 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.769321963 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.776121102 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.766986941 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.766126127 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.767712934 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.768497997 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.769293648 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.765983167 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.765814896 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.76760036 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.766659052 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.770148633 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.777648557 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.775343941 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.770813372 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.768853354 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.768508482 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771586073 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777361449 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.792069306 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.76923765 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.770134459 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.77337835 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.776295517 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.770925946 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773633708 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77348285 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.775977222 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.771434903 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.768838304 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.770202606 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.781854777 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768954425 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.767369403 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.768688177 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.77447833 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.769768094 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.767720228 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.770625886 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772030376 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.770056558 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.779456058 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.769405493 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.771235077 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768112492 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.768773357 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.768704181 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.768716757 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.771009867 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.771128582 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.770296318 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.770341526 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.772131293 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.775105078 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.769529261 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.772488076 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.778997339 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767908692 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.767123611 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.771436512 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.77017608 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772683802 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771311574 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.768260253 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.770276224 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.769777905 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.770906188 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774826683 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.778344414 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771511673 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.771194448 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.769776022 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.774157859 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.771020368 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.772385128 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.771803344 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.778826113 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775901369 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.782365433 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.783385517 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.769380608 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.771781561 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778330314 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.779136253 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.770454746 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.77021879 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.769189564 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.773482786 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.774191632 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.773447414 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.770947236 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.771617879 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.776449923 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.770587068 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.77102108 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.771418029 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.77205784 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.774084859 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773096051 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.776657513 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.771008264 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773875882 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.769813517 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.772773456 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.7743549 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.773652142 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771785199 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.773418552 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.775509921 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.773803442 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.775629113 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.772228112 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.773867319 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.774504962 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.772520774 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.77104978 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.772535524 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.77318504 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.771530576 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.776009205 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.781570588 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.770926152 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.775453032 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.773893969 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.77808363 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.773230029 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.772763083 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772192384 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.771993238 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.780890377 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.773658772 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.77335516 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.774758325 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.77475941 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.778947034 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.775798788 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.778427302 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772605173 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.774096152 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.773583871 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776705349 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.783096965 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.775800727 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.77710999 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.782163085 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.778838462 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.777079369 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.774192301 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.775096235 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.774747888 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.774439638 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.777810755 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774754222 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.778288281 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.773107067 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.776633525 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.77440788 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.776893963 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.77281706 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.775071189 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.777137047 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78485115 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.783599767 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.774393194 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.777962669 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.77424643 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.778173508 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.785562912 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.774805148 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.77377758 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.775329952 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777389409 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.776359079 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783677789 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.784583496 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.78051951 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.776345778 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.778767922 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.794129936 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.778663107 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785610554 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806601337 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.776753721 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.776503059 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777789363 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.776569762 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.777190959 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.778897617 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.777153444 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.78531943 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.777015771 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.776643222 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.783329373 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.775955493 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.777426836 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.777394061 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.778325976 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.785506673 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.775898414 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.784310087 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.775750465 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.77858524 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.778399083 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.778176847 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.778384916 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.777974258 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.776141707 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.780141718 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.778274202 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.775868202 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.786946628 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.777820339 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.779825052 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789499597 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.788859171 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.777584132 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.776781823 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.77530438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783626352 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.782124655 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.776458321 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780701509 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78630202 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780128401 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.786279259 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.779841313 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779879975 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78045935 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.776435161 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778427801 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.790112663 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.790341533 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.779746143 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.779450288 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785263473 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.779854195 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.785428307 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.783370655 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779378544 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.780352236 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777961267 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.778090828 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.781893781 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.780181846 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.783716314 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.787342042 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.780555033 seconds)
  done (took 1054.556679298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77928797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782057822 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780405494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780978135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780784599 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780838837 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779730676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779876512 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779593193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780648773 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780102971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780289859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779596851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780488015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780356298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779466432 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780251285 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780952589 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.77982241 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780850353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78154845 seconds)
  done (took 39.097996293 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.779443304 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.780242675 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779925408 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780310479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779214555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779845033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781889943 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78069495 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780855005 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78040557 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782049845 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781342054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.780085705 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.780779703 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780759486 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780565406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.78170945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781722805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.782311287 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782142971 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782049291 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780669536 seconds)
  done (took 40.887720173 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.781142521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.779896517 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.783442815 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.78100353 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.781481067 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.782136023 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.78279502 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.782970235 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.781464027 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.784071912 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.788286786 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.79047451 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.783434425 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.784966307 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.781765506 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.782393176 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.930268764 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.782994228 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.783128692 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.782283991 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.784066551 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.790916172 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.784616082 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.783238768 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.781328197 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.782073004 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.783491937 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.784928253 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.783688807 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.783864947 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.786316955 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.783361799 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786576054 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.78849124 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.783872806 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.785564263 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.788972691 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.78501133 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.782713754 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.783568103 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794825059 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.80661224 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.783102963 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.783374635 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.791994881 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.784954796 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.784316329 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.788467662 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.790428944 seconds)
  done (took 89.327808011 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.78364372 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.783799798 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.783414428 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.7856917 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.78625921 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.786656379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.783053443 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784314066 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785146947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.78558077 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.784124128 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.786479719 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78557589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.78408407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783773269 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.784915561 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.784139617 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785883971 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785798149 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.785463322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.787087013 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.786045211 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.786339629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.785055391 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.787564745 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.787497369 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786486758 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.786793494 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.786913139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.787122318 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.785007473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.785567537 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.786543011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.785635409 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.785900155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.785644809 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787024692 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788174074 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.786828805 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.788414225 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.786821291 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786012478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.785425618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.786762009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787297454 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.787192978 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.787806019 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.786254552 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.787472394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.786420412 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.789575571 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.788147159 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.787609466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.78686055 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.788053814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.787098753 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788515431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788673543 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.787781951 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.7884387 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.787455387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.789278398 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789431338 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.788333525 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.787156325 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.78690773 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.787473432 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.790690904 seconds)
  done (took 123.198748176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788224951 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.788543736 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788660746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787947414 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78727306 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.787830062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.790328095 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.787315214 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.788824853 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789673017 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787879219 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788097134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.790140707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.789787099 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.788022984 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.789412096 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.790221036 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788594757 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788267822 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788999769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.788149935 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.791310074 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787903815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788494021 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789905778 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.789145661 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788140227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.790126139 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789810205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.787998069 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78876305 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.789580374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789195453 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.789754949 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.789084628 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.788546339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790916361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791105157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.789501922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.790851376 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79112772 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788649613 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789324031 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.789849369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791703437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.789182893 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.789600583 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.789595953 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.789443505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789188091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.789521297 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790327976 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79069124 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791387698 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.790877521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.792034234 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789816007 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791018694 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790778853 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792137427 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791247684 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.790265764 seconds)
  done (took 112.667973666 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790556301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79105877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.791667913 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.791522905 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791172673 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792058064 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792180041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.793858359 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792490873 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.792110179 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791028212 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792318975 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792798392 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793317887 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791056454 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794073729 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790740529 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792129258 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792265536 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793967506 seconds)
  done (took 37.560924752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79151577 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.791317397 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.790784105 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793380187 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.791299468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791299719 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.792572673 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791597588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792600981 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79298382 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792073243 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792422772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792802157 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795446621 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792945299 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792736578 seconds)
  done (took 30.39816925 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.795609019 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.793282251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.793740821 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.792792716 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.79300069 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.79358538 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.792021754 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.792869499 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.795236681 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.793941253 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.793528898 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.794105137 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.794099134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.794048557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.794101974 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.794724489 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.793721255 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.795441928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.794963104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.795521517 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.794693714 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.7949344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.792603198 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792992526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.793536622 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.793140471 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.794440147 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.795269559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.794511485 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.794206174 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.794942141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.795080416 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.794337258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.795305396 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.794027607 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795510103 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795979214 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.796364779 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.795756484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.79493905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.793932551 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.79387539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.795215952 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.793309623 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.796542896 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.794467105 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.795743125 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.794625299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796017608 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.795293821 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.794825482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.795442828 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.79502987 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.795589993 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.794390634 seconds)
  done (took 100.421278833 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795025335 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795773517 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796052571 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.796677504 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796120956 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.795266653 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.795821739 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796899053 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796785418 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797769975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795724318 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79479523 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794158008 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795546062 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796340528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795714725 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795673863 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.797758417 seconds)
  done (took 34.051559712 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796460195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797559624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.796771657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.79640467 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.797795667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79766475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796384206 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.796646218 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797348152 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.797532331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7972326 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.79578111 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797935712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.798166374 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797349309 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795689529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.796817673 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798677641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.795369975 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798629476 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798526004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797476567 seconds)
  done (took 41.262354075 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.798997826 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.798130299 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.812744887 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.820015969 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.818025298 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.833958824 seconds)
  done (took 12.605735914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79596586 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79842682 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79656779 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79869814 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798460311 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797867042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798921776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798338026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797435625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79956036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79961218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797734883 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798034561 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799114146 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798560286 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799269932 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798358253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79798082 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79855281 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799183675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798390876 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799720985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798180257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797866484 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799955204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800004311 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799943846 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801011938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798449702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799221703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801039942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799546487 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801280861 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79911997 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800227852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798800973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799235117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798657355 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801039799 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801825924 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80091695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800320024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800721833 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801746749 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800422232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799206892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800492302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801508385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798558485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801940116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800266821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798559663 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800872767 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800419335 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80028336 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800263977 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801388409 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801127322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801187302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800191955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802722167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800146525 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799955692 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799055441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801327731 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801085253 seconds)
  done (took 120.501520162 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802156876 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800092119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800314855 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801489402 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801821136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802562265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80129673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802775661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801386604 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802560199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80349064 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801847762 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801581425 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802280491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802214439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803638867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801014456 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801249136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802162252 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802502332 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80328278 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802600989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803642486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802666215 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801845333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802390539 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804218801 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802571326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803693941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802354639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804206307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80181432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803780118 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801142824 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801936047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802174501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803491632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804261312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803709848 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803312209 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802535828 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803944544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803861571 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804777377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802724532 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802844869 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80273769 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803304478 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803164838 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804341175 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804442175 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804680658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805787712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803383441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804748848 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803277665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80387999 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805222042 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80524411 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805023027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804059847 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803093453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805388447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803957957 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804328479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805612389 seconds)
  done (took 120.733879746 seconds)
done (took 2457.728019502 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.821871968 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.997216602 seconds)
  done (took 15.549220647 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.971413527 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.923191426 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.808197307 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.836325773 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.806480032 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.834168798 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.821809303 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.806409571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.808367388 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.808840892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.807911031 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.991301276 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80771012 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.805809001 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.809203606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.90071936 seconds)
  done (took 51.287129243 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.813438456 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.813527279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823879515 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.816553362 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.81613022 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.834173277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.844840922 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.818740808 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878010453 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.825202639 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.936400403 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.825223361 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.813971879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.873025997 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.828540542 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.830350827 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911574432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.889877616 seconds)
  done (took 34.928737299 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.892582801 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.818235368 seconds)
  done (took 10.454935745 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.810449402 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.810416315 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.816173451 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.821602348 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.828308482 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.83952417 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.841835574 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.831391405 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.821966733 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.827991032 seconds)
  done (took 69.987722752 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.817603551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81431206 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81592248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.810798601 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80950235 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.811738152 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.812664693 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8090444 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.508064104 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850135544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.821344014 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822181471 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.814298735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.813073218 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.811091806 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83815331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.926689513 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810938837 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.811100024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.818268539 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.813739536 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.873624713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.830480799 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.817504679 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.845026453 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.505348796 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.82130789 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.821319208 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.922131413 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.810050594 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.815977611 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.025518946 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.817740563 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.282550016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.080130074 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.816598126 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.822961151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.821586406 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.811319393 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.923172585 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.816557792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.820310333 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.811609417 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.052623247 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.907953204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861427624 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.155202622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.81580961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.815678406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.85192826 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.819859563 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.817606614 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.834200682 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.337755969 seconds)
  done (took 129.882827007 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.814697305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.159420459 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982910295 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814809848 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09651143 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016895562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811280587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860982602 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.816401623 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040241511 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062460534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919971431 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.816727077 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.81635603 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81184326 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809819374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971446183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.8840461 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.815450951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.810773701 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841893074 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057822421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934978745 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815012499 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841041497 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.025219072 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934314873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.918331033 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.599559414 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.812987343 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878334857 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812708224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.812838169 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811435701 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969344399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.906857209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896440828 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.815561131 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813247075 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.813093839 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.559501844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012669805 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90641585 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.945081384 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.062685172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017539015 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.685576676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.813554527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.551099744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.976580634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.044139454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.047698606 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.934379606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816037066 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.154090546 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815992801 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.816515885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060809879 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037404668 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.913044432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816059838 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81502146 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815235638 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10722508 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.81615409 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.907699541 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819493748 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814789266 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914541817 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.915489346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.047704435 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022317944 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.844141394 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.161661437 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.320510447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055603255 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872694788 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062205119 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810394006 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808106491 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885670787 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.650643467 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064319953 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087575533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052105823 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836592666 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.522995642 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.804644985 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.030396171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02620456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.062260854 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04798727 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.039679761 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.117528118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.802679284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.804930656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.141657552 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.921436235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.800204355 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.143988172 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02797298 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.359148056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823638512 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107256154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926138584 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.796387805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.442624086 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796120736 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026773726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.833359515 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.795802866 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79296706 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009657702 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.779915288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788871052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.422331625 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.850606957 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.786098836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019895668 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.787422847 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052854703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782382036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018090898 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.91827523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811908892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.958593965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.023768589 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.779411542 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022721577 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019159818 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.888617725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000009407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.462720246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.770545981 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060338122 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771452772 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.770465256 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.937246537 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776556359 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.911018523 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.768507722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05921236 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78312007 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000062511 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768939908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016967707 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.79600796 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.812301552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.762938165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893085776 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767935595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.588920637 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915133048 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.763895654 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.76223249 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.306911934 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.759510007 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904298268 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986258581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776465659 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829183336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.416130757 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759075582 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841934332 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.776841128 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.149830431 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.757028284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004856265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.753226786 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.753128017 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.752427114 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.033515992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.929041226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.753084543 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.747327067 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.656822009 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.749987469 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.749638003 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930210084 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.108339054 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.747289705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951425132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749486379 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.876029928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.754951216 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.815563226 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.077346099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.742150334 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.748694371 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.745266197 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.745581586 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.189506612 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953140971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.767899522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.283222192 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.880702921 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016448999 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.051686665 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.987467229 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785884516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.749388927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995298029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.745383069 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.806995996 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.743460671 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.76667961 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978355497 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749014864 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955535369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.01770533 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7838789 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.792611081 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.748487798 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744637479 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.745982129 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.892130816 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833883944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.747093797 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.746987891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.862748186 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.869169246 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954230764 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.747781876 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.852209126 seconds)
  done (took 885.210828486 seconds)
done (took 1199.0345054 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.745888934 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.745036755 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.748375638 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.747425545 seconds)
  done (took 28.663418244 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.751991782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.748850292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.750318856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.747826095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.75227204 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.750294486 seconds)
  done (took 12.180393864 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.916739963 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.744405627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.746247037 seconds)
  done (took 21.085588662 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.826730294 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.174155328 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.886828442 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.191725052 seconds)
  done (took 9.75725137 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.751366414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.748744249 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.749985152 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.75501566 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.752467398 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.751023013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.752688848 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.752926973 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.754250074 seconds)
  done (took 17.45002731 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.44905297 seconds)
done (took 95.266075631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.694603203 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.900428681 seconds)
    (3/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.096969138 seconds)
    (4/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.737006004 seconds)
    (5/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.853962625 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.270318097 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.068004003 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.955056189 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.037001864 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.92711186 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 4.714712484 seconds)
    (12/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.071042126 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847249567 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.076534617 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.828197277 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.830968148 seconds)
    (17/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.857045312 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.913087798 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.007776993 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.991257757 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.956148957 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.199511087 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.984173452 seconds)
    (24/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.581286918 seconds)
    (25/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.040562385 seconds)
    (26/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.654727073 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221106826 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.917004523 seconds)
    (29/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.036992481 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.828401778 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.832658749 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.038673863 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.304722848 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.978459576 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.826696354 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.85925131 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.004695432 seconds)
    (38/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.853458493 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.998809183 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829405766 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.461784182 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.848157316 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.932511094 seconds)
    (44/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.520801588 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016639304 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.592345234 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.856682546 seconds)
    (48/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 1.99713384 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.829405109 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127095904 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.247184377 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.046824237 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.10871328 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.82812886 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.832646873 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010605831 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 5.58797514 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.330301697 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.476898221 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.501696854 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.098867409 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.225710626 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.065607138 seconds)
    (64/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.211788678 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148850487 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.987249434 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.852605732 seconds)
    (68/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.978759847 seconds)
    (69/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.826771566 seconds)
    (70/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.641032113 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.125688269 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.012981064 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.379533344 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.021345286 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.834287617 seconds)
    (76/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.026215138 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.821151435 seconds)
    (78/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.564809252 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.915418834 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.837217416 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.559432906 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.951235862 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.819993658 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.213163605 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.972261302 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.317113296 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.927624572 seconds)
    (88/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.843910372 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.081661519 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.504858733 seconds)
    (91/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.934026562 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.398788474 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.925396745 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257218193 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.821825754 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.030019098 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.468214567 seconds)
    (98/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.453069948 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.361694115 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.929528391 seconds)
    (101/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.928712969 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.755295445 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.911609776 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.908674866 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.085636015 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.144715851 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.609997328 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.71509786 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.122472773 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.135569276 seconds)
    (111/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.725391826 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.034641078 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.820390941 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.967954844 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116334259 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.840632387 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.815840084 seconds)
    (118/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.840680362 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 3.992668305 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.852329464 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032016886 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.217920061 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.890055186 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.809604955 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.831052834 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.090193425 seconds)
    (127/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.845445261 seconds)
    (128/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.200921048 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.952687217 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.835910378 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.944657689 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.062385609 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.199140625 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.120667565 seconds)
    (135/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.047251439 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.929527377 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.044913953 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.948859563 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.100856926 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.059486049 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.46517339 seconds)
    (142/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.834207267 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.151880657 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.929492522 seconds)
    (145/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.128200854 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.10752237 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.914944153 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.696679935 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.892764228 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.798592278 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.493104411 seconds)
    (152/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.929448627 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.787036844 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.812908929 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.10347111 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.785907893 seconds)
    (157/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.584144399 seconds)
    (158/309) benchmarking ("sort", BigInt, false)...
    done (took 6.781598614 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.795116482 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.778771036 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.539812704 seconds)
    (162/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.683709725 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.800143384 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.772974354 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030873316 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.877929398 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.776172859 seconds)
    (168/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.854045237 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.772294825 seconds)
    (170/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 3.864772334 seconds)
    (171/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.39688732 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.948146209 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.106611185 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.882709668 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049268442 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.064665435 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.08930567 seconds)
    (178/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.863772434 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.867660693 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.92679372 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.073683474 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.863504638 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.774655969 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.863190033 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.074878738 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.889012931 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.602763348 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846589448 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.884786392 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.110160335 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.853182534 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.70377578 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.159420613 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.787963142 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.181874357 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.841378193 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.879768487 seconds)
    (198/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.91216301 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182215675 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.768285043 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.998063463 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.084732447 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.779206411 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.13197185 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.787169745 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.776607474 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.010500138 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.790706718 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.009044208 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.42220283 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.065869631 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.102518069 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.924204835 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.782577409 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.456386823 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.112579354 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.51126438 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869588261 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.77557224 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.811983034 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.776741528 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.744323703 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.682260692 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.869189281 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.876969634 seconds)
    (226/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.775309118 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.102830977 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.90226457 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.797710867 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.942005956 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.973214988 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.187016737 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.779133056 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.816761304 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.083939893 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.77755543 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.730309551 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.194886865 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.176414314 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.960730668 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.92998755 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.783086664 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23616345 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.775921245 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.911965952 seconds)
    (246/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.166327229 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.836029217 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.059855947 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.913589086 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.995026467 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.403163753 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.891997594 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.835583508 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114522475 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.797561987 seconds)
    (256/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.699802874 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.270421643 seconds)
    (258/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.540594976 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.777224021 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.302577946 seconds)
    (261/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.920239319 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.1078173 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.096701502 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.824296741 seconds)
    (265/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.904008989 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.875989905 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.194408608 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.793300046 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.054383256 seconds)
    (270/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.859744632 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.274824109 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.813691261 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.790467041 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.036625833 seconds)
    (275/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.124077352 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.394860266 seconds)
    (277/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.587602476 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.779000663 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.140466279 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.897513246 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.4773776 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.343053399 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.903408269 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.957968211 seconds)
    (285/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.807784621 seconds)
    (286/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.889183638 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.84345309 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.659155468 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.775928988 seconds)
    (290/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.491596519 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.777703019 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.12843546 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.100944607 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.59125749 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.962020537 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.858371023 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.808640416 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.779448724 seconds)
    (299/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.683648975 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.777506913 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.688165942 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.91817021 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.928975559 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.263093175 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.988506982 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.268664377 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.857822031 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.783041603 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.910824915 seconds)
  done (took 990.983054834 seconds)
done (took 992.813043244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.809509783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.801718653 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.779822419 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.805971491 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.896308815 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.826408497 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.796225616 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.788357759 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.832861482 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.833211201 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.7818804 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.826045024 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.786326302 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.782654755 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.784161327 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.801989539 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.092521601 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.815421185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.800256813 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.796554076 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.803192343 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.779719525 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.837306814 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.825287517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.789768943 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.790898706 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.789855853 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.804052067 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.895464287 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.787084705 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.787267844 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.795801801 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.090982971 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.811405141 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.778739558 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.800579771 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.793186428 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.791064285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.786156961 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.812412415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.234110436 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.784734051 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.779782637 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.782269331 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.776590675 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.784756787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.776095085 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.785940391 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792365927 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795736555 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.224216445 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.796424409 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.777561844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.774991364 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.787511341 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.77092825 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.774423172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786411609 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.789202437 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787674614 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.063754802 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.807225034 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.772335463 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.786173089 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.776807901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254901754 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.772808111 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.77525559 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.224212857 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.782814515 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.256239274 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.785761113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.771233679 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.782970973 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.802580229 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.077392893 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.799594598 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.768721772 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.778636474 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.76863498 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.781344587 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.785175136 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.77447016 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.770441998 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787738009 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.813824272 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.784225899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.771004626 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.78275656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.791057411 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.77970041 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.782822873 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.773778104 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.767441197 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.781569495 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.773843181 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.773113755 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.772692958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.776635379 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.783397602 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.222221922 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792482587 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.767332563 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.767865416 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.770985194 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.786128225 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.222334742 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.777454119 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.793597426 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.821506375 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.772330532 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.065849872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.805266311 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787070544 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.782890966 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.772953984 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.768464814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.066673923 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.252926572 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.794567798 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.771553663 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.770610516 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.789322109 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.773756097 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.768531687 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.081100009 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.806073893 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78645804 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.892958045 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.784805863 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.804359482 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.769067847 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.775521325 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.817585454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.78928177 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.805109203 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.775103101 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788413599 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.789334543 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.766897253 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.783006793 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.785346625 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.773729545 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.778947757 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.768454108 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8162283 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785496624 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.785773981 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.788833642 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.889728477 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.764034201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.060800095 seconds)
done (took 279.758638093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.838044056 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.758167672 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.87536044 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.758100098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.846640681 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.830869689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.760139651 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.758617883 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.757392986 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.257695212 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.758348756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.766194192 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.757309725 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.760024117 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.827403891 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.759538367 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.759714992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.203416768 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.760296534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.838492167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.758165127 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.760219909 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.759773811 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.281280142 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.760607502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.76116428 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.837431967 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.761383564 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.211350009 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.76149681 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.759228866 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.220435656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.835112792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.783937732 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.763360145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.757676071 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.839116123 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.757987273 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.816764526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.814599903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.867662317 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.78221831 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.748746201 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.74598958 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.749925793 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.748848081 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.746246995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.778620314 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.745633603 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.752307202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192473449 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.755405773 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.75264162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.747007844 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.746985196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.774281972 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.747602172 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.747853197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.826373815 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.74651141 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.813299101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253527349 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.246895158 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.747769334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.747666831 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.747231975 seconds)
  done (took 177.58496491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.813541298 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.820657113 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.814007904 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.750577088 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.79764579 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.815057017 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750826904 seconds)
  done (took 14.240051739 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.755177339 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.74773224 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.797046118 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.796806203 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.747428106 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.92437449 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.760439094 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.752793694 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.774664793 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75153255 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.382864403 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.796618443 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.754634696 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.747673401 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.759345419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.803945953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751369934 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.748599357 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.864818702 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.897810655 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75309094 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.755528428 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.775367043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.760394623 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.747768106 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.749959981 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.748817487 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.756113324 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.748599374 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.748974518 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.749702001 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.80089395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74880918 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.746737907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747316105 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.749651796 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.750201366 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.74964642 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.74935871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.7475411 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.750303384 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.750330107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.749061541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.750335422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.749562518 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.773432723 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.749142906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.750383965 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.748071663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.750479735 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.777147779 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.749814128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.749252899 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755076629 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.792822388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75586701 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.751379295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.749725946 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.751451377 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.750994755 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.750435401 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899439124 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.801069759 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.750611786 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800340997 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.904053742 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751144562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.752551717 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.750628123 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.839096144 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.752047465 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800025737 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.751545545 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.865290245 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.752090178 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.931508657 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.773881932 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.756038979 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.755164271 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.751304595 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.759742162 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.751754584 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.752838848 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.758031331 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758131032 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.754528505 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.752509334 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.752377026 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.759466953 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.75306194 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.800791902 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.752202366 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.752203525 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.891445511 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.752969778 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868333355 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.779782442 seconds)
  done (took 194.222898276 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.760498231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76058934 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.754347807 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.76797154 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.754659915 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.753976614 seconds)
  done (took 12.232250323 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.753931089 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.757891504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.752234426 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.751633868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.752792802 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.753254153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.752810347 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.755375369 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.756341481 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.753319667 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.754175669 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.754689751 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.755234235 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.754944485 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.754201103 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.754849562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.753857481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.753940437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.753449004 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755257695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.961352612 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.755251694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.754355927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.757977425 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.759015744 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.754288889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.767444427 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.754485228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.75391284 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.763318122 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.759582062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.756598204 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.7589261 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.762578313 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.761522121 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.758650161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760753233 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.757533123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.755514402 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.756955517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.756329767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756092586 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.756132557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.758136867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.758015241 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.76356147 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.762252553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.768448325 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.756436503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.756443444 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.756048286 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.756556465 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.757141481 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.756413249 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.759115065 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763105672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.761227509 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.757193827 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.755879635 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.758532233 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.76106801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.755726407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.757204517 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.76107548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.764454322 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.75680838 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.760224522 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.76199143 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.757226344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.756723975 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.758262973 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.756133016 seconds)
  done (took 129.41782526 seconds)
done (took 529.410999563 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.872975899 seconds)
  done (took 8.557123974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.947015953 seconds)
  done (took 8.725050753 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.578121604 seconds)
  done (took 10.26551724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.765638907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.769379909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.759998535 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.756408894 seconds)
  done (took 28.752519031 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.10048204 seconds)
  done (took 8.786644082 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.772058383 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.76754744 seconds)
  done (took 15.301227026 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.879986199 seconds)
  done (took 8.567578242 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.157856148 seconds)
  done (took 8.860263059 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.78131548 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.775345939 seconds)
  done (took 15.267298302 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.759773481 seconds)
  done (took 8.446031631 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.870621286 seconds)
  done (took 9.642621168 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.775565801 seconds)
  done (took 8.510345421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.784384263 seconds)
  done (took 8.472758562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.872103351 seconds)
  done (took 8.559206299 seconds)
done (took 158.396649854 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.765449875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.754169537 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.753769247 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.752650052 seconds)
  done (took 28.711358593 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.792263955 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.793367283 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.80049986 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.791651902 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.78306489 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.782619664 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.792554089 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.792497036 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.783380231 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.790668967 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.791974178 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.792217575 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.791896913 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.801761553 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.801494509 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.78982966 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.791450056 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.792814968 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.783968731 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.802468891 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.792242781 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.793445515 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.760735559 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.7588722 seconds)
  done (took 44.635476743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.949826589 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.83018506 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.912353226 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810456309 seconds)
  done (took 9.189585014 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.757875033 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.82276316 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.809860015 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.80682002 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.811016903 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.862155123 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.811980259 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.896369958 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.887913837 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.885809737 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.767476171 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.779248805 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.785698525 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.807122095 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.864235182 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.760058894 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.760256319 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.877155278 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.822119566 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.944628311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.760727763 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.814679744 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.811974421 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.813826467 seconds)
  done (took 45.40904963 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.76208989 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.768606406 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.767697909 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.760842892 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.761591518 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.761480686 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.767937636 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.761754126 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.782216869 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.764369645 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.761549373 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.762070317 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.768277837 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.761758016 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.760360725 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.774077884 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.776117456 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.762551561 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.765602215 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.76835624 seconds)
  done (took 37.007405349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.759438048 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.604359955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.105787905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.012491125 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.760710867 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.758560701 seconds)
  done (took 30.689862594 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.77438572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.767971072 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.763515247 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.818098265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.904492793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.771535229 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.762143869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.77464211 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.810392535 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.829018287 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.782550077 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.792095698 seconds)
  done (took 23.241497522 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.762395629 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.761311587 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.771948537 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.772075051 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.773275652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.769173425 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.772368504 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.761767986 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.775320558 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.780810447 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.768712882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.775981044 seconds)
  done (took 42.939991772 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471486638 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835457836 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.762271729 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637913138 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217808974 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317483409 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.654415864 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.439490522 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.235937123 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.694292197 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971852843 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.767484646 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851569208 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.770767692 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039774361 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132166384 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963766096 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010367688 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.606623899 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.807547808 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.972539037 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990160832 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.059201108 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769615986 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771569704 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.814790805 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377596322 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.513075094 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803444391 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.282401586 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022784765 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.723796926 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825591333 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.774747978 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.783601641 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77341525 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774540276 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040943667 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.821679183 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901365049 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845028952 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018887153 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775780115 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192134349 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.474420637 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.063031316 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884659758 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770833312 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774351876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769827168 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696397456 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853976747 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.772457752 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775804441 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.47100147 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.770862129 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845462302 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.770854581 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973940869 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.578812265 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466385037 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.773764767 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77626802 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350282831 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854987509 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.890194067 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486755394 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152268515 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204113707 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.871643782 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.776428844 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775652235 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099344007 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747900328 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.524854609 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811896314 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913440467 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.78986044 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416788395 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068189731 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.174062307 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335312775 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693421227 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05232257 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.66064787 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773045055 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993347857 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.604507659 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701357071 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995308843 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811577445 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77993731 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040570243 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528606538 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886767298 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.790965668 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21277982 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795515726 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.781126093 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778416852 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990733967 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349940406 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814052485 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89861823 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790833229 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.859800048 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703400039 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.787390396 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.780470448 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.681657203 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783954866 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778216637 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.817367741 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.638393712 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.827037456 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.717957208 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781272502 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858090367 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818361331 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.736529756 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0304513 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.078991512 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.461183733 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807501634 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.904583053 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.148437704 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007722019 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783948742 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992597749 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306984109 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.176076485 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825693636 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069072754 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83676382 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073936969 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215548662 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854534869 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546117124 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404210042 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997302964 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79507722 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.781178924 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782940399 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784853347 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716717466 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.427643187 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123931169 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.949161776 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994540797 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.305419842 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.772215979 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.780303791 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080505002 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918450488 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.765640449 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.428963504 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.377847256 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.580386433 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.804747941 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100129505 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.154603582 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.751146241 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795145759 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857818593 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797981904 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.784343678 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.146127619 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143894048 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.782038014 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.783373923 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.730337363 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78913438 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.783644868 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318198299 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749465698 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.780530206 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.794829446 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655092416 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856052771 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78463987 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784722718 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.325669337 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284447784 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.789101318 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.451536695 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.833071593 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857810684 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056239031 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.116243413 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908363942 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.483250633 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.178810911 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892987635 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.483639937 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710324138 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783604881 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.723227558 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784041397 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787602421 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788434094 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.972507812 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059062804 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08409545 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.250276274 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847584227 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987247629 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.487823658 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738189777 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.78696434 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788447017 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.786710099 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784220999 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.301754127 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.076193158 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86201459 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81431163 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789054059 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913737235 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.796668813 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710941242 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.786729015 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78801827 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394513469 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819774055 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731423402 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.06294533 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.652130256 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911581377 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831292667 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.796093424 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790349952 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.48373846 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.828339802 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712362765 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397212575 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829038704 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.532687489 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276153775 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371444082 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094959015 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098132841 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.108714316 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.854364028 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.000752932 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871816396 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844508955 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876241523 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724239958 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.710799735 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.437713148 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120085141 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05816848 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794772059 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003276051 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483810637 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015051561 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816553759 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.64524332 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095940969 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761892029 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804531962 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.30862858 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901365562 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869211934 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790820672 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.738189259 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125478315 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828985761 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.496319092 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804024784 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142185436 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391657858 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010774184 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.155631752 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001614178 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787963321 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138029588 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.172856968 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.831656502 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795510457 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.782304856 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.002973062 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336861152 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.638191445 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794496443 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.129682884 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086602813 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.695687743 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.792044104 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.118472256 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05586502 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788329609 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.119847548 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156842196 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.896070801 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846175242 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015906936 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.649829575 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09487524 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.346380649 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.278405667 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793317075 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716701858 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.490419583 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.992039457 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.791653964 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756879677 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002097999 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026041333 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474216199 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009218936 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033949892 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.801590753 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057818269 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863139875 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.888038941 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079433334 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.227743668 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.037792314 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018043943 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333110151 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008066311 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24646706 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.95892741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793836991 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997480154 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010244097 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005547991 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.136834366 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963292732 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.503443686 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.797796588 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.00096053 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095501977 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85388228 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.168275739 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963122975 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.87677832 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798605475 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857846898 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79830279 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801641073 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.167386449 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.320208115 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.805897191 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869383628 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87721601 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.300055242 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.794186244 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.799022055 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060421218 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151153665 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123186451 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774455867 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.790640611 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799025875 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922438364 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.72160263 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801145019 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065078244 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.797143045 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381594198 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.951336058 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808854867 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098104152 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181597221 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.639958807 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762513275 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800074852 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013964668 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104968946 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.158679924 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914595978 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065830557 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131065446 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.829819759 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.144439981 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037190884 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797571465 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.669083097 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798991483 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922425812 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 6.997765861 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067412817 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.303120805 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.551998794 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062119026 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664488334 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800269159 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.495987501 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065138307 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064771444 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845835827 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858771434 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801371914 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399142466 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.523605367 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929260191 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.644689468 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722982537 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.896633273 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.015691882 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.038288907 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.507149094 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799857094 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070362117 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099418962 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064555086 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.847053852 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.643382826 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013049193 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799286289 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.806455416 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067884704 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016192301 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043542109 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799230807 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.798817433 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.605362336 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724830685 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.795529256 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850923455 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.02403151 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817793688 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.312781066 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.497098133 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080497593 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847635673 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801152294 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066827695 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.311368221 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.355168308 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800747483 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015168688 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.827094618 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087735766 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.800611482 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404208337 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106098838 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.799295092 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.504823086 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.049077112 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066390866 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731719351 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805041337 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012562302 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.656068257 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.796631717 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782095874 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401456748 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036006225 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.532941503 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355855311 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.800262121 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.803297564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405688167 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835043831 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44144838 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831191006 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8176481 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316635542 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.51404335 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.090225202 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043258025 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.502602461 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.389253397 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.799892725 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.800086983 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801749441 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719336164 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981524697 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.985602027 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08407969 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83460236 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410338715 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839355093 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.182196731 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915942699 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.139961506 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844150761 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321836825 seconds)
  done (took 1623.77865379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.818013098 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.86112888 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.834735128 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.805783451 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.804343262 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.825485754 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891197034 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81425686 seconds)
  done (took 56.382728563 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.801205117 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.813412476 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.80654709 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.802324194 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.811447581 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.802606993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.966189149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.811241292 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.802944007 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.807970681 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.804012902 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.799634004 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.089969366 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.821581308 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.802808029 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.801152864 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.803030636 seconds)
  done (took 72.882795183 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.804163322 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.058263028 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.835491739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.806769954 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.760442783 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.81603599 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.760479502 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.861257821 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.807346062 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.050657157 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.102132804 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.847782546 seconds)
  done (took 89.242258743 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.809404668 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.804312868 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.805280719 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.804591826 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.805564755 seconds)
  done (took 10.766039238 seconds)
done (took 2116.633736841 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.03173601 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.863027851 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.901805496 seconds)
  done (took 5.494342356 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.953015971 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.997768404 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.111515204 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.870872497 seconds)
  done (took 9.6728687 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.106967457 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.183741578 seconds)
  done (took 6.02223293 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.166645556 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.810405671 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.178633793 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.805900109 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.807724408 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.804266146 seconds)
  done (took 22.154752209 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.805873127 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.805619371 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.806120206 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.806964807 seconds)
  done (took 8.957499878 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.803661202 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.511334515 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.805738792 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.818554008 seconds)
  done (took 20.670824412 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.954926559 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921257342 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.005609657 seconds)
  done (took 7.613846951 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.94779667 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.647841281 seconds)
  done (took 6.326691236 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.955278267 seconds)
  done (took 3.685563035 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.835290663 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.07570876 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.298949397 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.701873935 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.484094902 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.909844927 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.176180443 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.059066349 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.223954672 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.263455206 seconds)
  done (took 24.76012209 seconds)
done (took 130.276000285 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.31926694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836896824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.013792562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.188086764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.059886796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013457623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.014665588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.183459072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.866185261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.854337758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.176787407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.085361912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.970523877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.835880933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.979098917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.837864031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.035296516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.184463788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.858468619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.079229595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.023607524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.82354727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.016919831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.835760003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.034271833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.963896467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.36752006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.837226846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.007123837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.377454864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962792128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.232471905 seconds)
  done (took 166.609947416 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812129475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.807415596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.809607074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807652421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.354789872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.809266061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807610117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808084778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.295728212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.285414376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.80849423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.350783061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.809453303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.809474166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.810072843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807079826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.463335404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80791574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.809574542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.808843212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.812144752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.189624069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.808365309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.218515312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.448131789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811177447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.809105631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.808451847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.810423982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.809798696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.809951898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.809049438 seconds)
  done (took 207.766983168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.811723815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.810226647 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.809714934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.810116682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.811249474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.810052179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811427182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8106749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.64780886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.632776036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.809311308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.811348461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.812310665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810361103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.80985359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809724911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.809261329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.810474779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.809392146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.810384816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.811625132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.4902998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.809766875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.506775227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.808937208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.809967042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.810541821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.81208764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.810212163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.811029875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.812571518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.811107331 seconds)
  done (took 218.713585919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.054647037 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.815762394 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.817098756 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.734636256 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.814973308 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.813533377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.790039011 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.062152433 seconds)
  done (took 18.644175427 seconds)
done (took 613.484034651 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.204062642 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.039641792 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.99555682 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.840339914 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.242662001 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.882184816 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.8357869 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.902409934 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.672091795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.917644982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.47301011 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.861676648 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.572588418 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.865419615 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.964952506 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.893779593 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.402009612 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.497751049 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.980075195 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.029379363 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.01920471 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.758832285 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.918971513 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.715756988 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.48998696 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.799452881 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.867449905 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.414983319 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.846695607 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.998169126 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.555718949 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.151573946 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.853192139 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.836112481 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.890916449 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.871519024 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.055404736 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.846726644 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.964005925 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551732903 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.013063279 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.578392737 seconds)
  done (took 100.811781428 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.82808639 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.823208543 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.822961476 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.823442382 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.831461951 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.82366909 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.822675326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.825046946 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.822804618 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.824068482 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.824820925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.832463021 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.825707818 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.832727009 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.824450375 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.824947946 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.824838129 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.833493391 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.825263751 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.824902542 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.823900705 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.824473435 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.819524715 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.8249335 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.825652796 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.824938414 seconds)
  done (took 49.22348561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.818474552 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.989986287 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.069748909 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.836993242 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.818738584 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.821688434 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.837444077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.823925774 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.822059876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.822657511 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.922265672 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.825959112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.840165674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069064512 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.833952817 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.818753995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.820063236 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.820440463 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.998289334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.838221476 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.839787401 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.824928208 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.839639561 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.835735569 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.82330726 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821214502 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.82353491 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.319956088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.832978335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.926092971 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.892928057 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.840468481 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.262398034 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.077404245 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.87362643 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.827089815 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.820464004 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929969868 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.82774666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.822787641 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.83873283 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.827363101 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.071163512 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.349874844 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.837854881 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.822020845 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.332598691 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.940214534 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.864104105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.832276949 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077836001 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.835629016 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.823406458 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.823713316 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.859271123 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.831140324 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.824550494 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.186461105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.838086263 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.839820341 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.828104856 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.823522992 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.004241727 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.83339123 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.992671759 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.834546409 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.829343313 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.824468374 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.070524892 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.837576349 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.374834542 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.838898965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.823339356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.927256046 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.999348816 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.359079398 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.836608135 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.007614959 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.277951677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.847067457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.833782005 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.312050552 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.85266385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.83206585 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.824964529 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.825848336 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.823151109 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.866701474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.840308044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.273020534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.36708519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.203256064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.850131851 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.83559869 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.825531422 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.184358348 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.831138529 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.826351253 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.061822063 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.379940368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.837143625 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.832878314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.349587056 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.840650723 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.843543407 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.834395236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.079107058 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.838005254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.868176708 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.825609626 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.83252512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.829376349 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.843373821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.832622811 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.824164813 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.338503471 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945365929 seconds)
  done (took 227.329349867 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.825210632 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.82077897 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.824455672 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.821553216 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.823732439 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.828241539 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.823941753 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.824062033 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.826793898 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.826168433 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.823334131 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.826197028 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.825210748 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.825247867 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.863932513 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.827250489 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.433398512 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.824815032 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.827653117 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.823877825 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.466311402 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.831922181 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.825153049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.823304282 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.82423863 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.826223348 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.830323022 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.860510877 seconds)
  done (took 166.187057863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.827422211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.940167525 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.844384697 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.856350789 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.830587123 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.826637919 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.925186156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.844364695 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.833054821 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.827899531 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.82657955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.888047548 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.836583369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.925535525 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.857889425 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.931942777 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931779477 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.833350147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.828045791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.827355853 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.857197574 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.832584512 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.888237799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.947529106 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.848518744 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.940145615 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.844966324 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.827749322 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.82846497 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.940394438 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.846143353 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.88876166 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.854974184 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.844951445 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946900138 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941796687 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.933852364 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.934357422 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.834451146 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.829053525 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.828643689 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.829886432 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.941703833 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.844673178 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.829513946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944918353 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.844968582 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.830412595 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.830140838 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.831389627 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.844083908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.847604386 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.894496053 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.955783644 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.86160185 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.853605119 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.927664032 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.952539853 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.831785321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.927794904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.838273028 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942764461 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.847657243 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.831838935 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.831315526 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.834740825 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.859935349 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.932769482 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936978301 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.836843436 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.927825564 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.866312253 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.835460361 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.831224716 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.831967514 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.944552051 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.944188562 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.865489812 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.864311805 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.857594709 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.837195704 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.830931311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.832177208 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.848626717 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.836434998 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.944967559 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.94563682 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.838218658 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.831838255 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.8317416 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.831900325 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.857153224 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948991317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.864286047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.939558546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.89844774 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.907514711 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.847180097 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.84663516 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.838588999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.89388841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.848762081 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.844087038 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.122250341 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.892713143 seconds)
  done (took 198.484343231 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.22341149 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.879782657 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.888560907 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.16197025 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.195725949 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.759446999 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.880195365 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.886697683 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.915709963 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.110645591 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.944972776 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.899671477 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.864871761 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.85310758 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.879162512 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.913252046 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.88872193 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.24550526 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088606573 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.349955328 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.868626617 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.143825617 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.193818861 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.45510071 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.932083342 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.311369252 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.476535583 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.040908094 seconds)
  done (took 62.017028676 seconds)
done (took 805.791682607 seconds)
SAVING RESULT...
DONE!
